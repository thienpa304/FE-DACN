{"version":3,"file":"static/js/240.80441010.chunk.js","mappings":"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","sources":["components/ButtonGroup/index.tsx","components/DatePicker/index.tsx","components/EditButton/index.tsx","components/NumberFormatCustom/index.tsx","components/SelectInput/index.tsx","components/TextField/index.tsx","components/UploadError/index.tsx","constants/uploadFileRule.ts","components/TagInput/index.tsx","modules/jobProfile/GeneralForm.tsx","modules/jobProfile/Personal.tsx","modules/jobProfile/SubmitBox.tsx","modules/jobProfile/TableOfContent.tsx","modules/users/hooks/useMutateAvatar.ts","modules/users/hooks/useMutateUserHook.ts","utils/keywords.ts"],"sourcesContent":["import { Box, Button } from '@mui/material';\n\nexport default function ButtonGroup(props) {\n  const { handleSubmit, handleCancel } = props;\n  return (\n    <Box display=\"flex\" justifyContent=\"center\" sx={{ gap: 3 }}>\n      <Button\n        onClick={handleCancel}\n        variant=\"outlined\"\n        color=\"secondary\"\n        sx={{ width: 120 }}\n      >\n        Hủy\n      </Button>\n      <Button\n        color=\"success\"\n        onClick={handleSubmit}\n        variant=\"contained\"\n        sx={{ width: 120 }}\n      >\n        Xác nhận\n      </Button>\n    </Box>\n  );\n}\n","import { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { DatePicker as DatePickerMui } from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport dayjs from 'dayjs';\n\nexport default function DatePicker(props) {\n  return (\n    <LocalizationProvider dateAdapter={AdapterDayjs}>\n      <DatePickerMui\n        format=\"DD/MM/YYYY\"\n        {...props}\n        value={props.value ? dayjs(props.value) : null}\n        slotProps={{ textField: { size: 'small', fullWidth: true } }}\n      />\n    </LocalizationProvider>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Button, Typography, ButtonProps } from '@mui/material';\nimport AutoFixHighOutlinedIcon from '@mui/icons-material/AutoFixHighOutlined';\n\nexport default function EditButton(props: ButtonProps) {\n  return (\n    <Button\n      {...props}\n      variant=\"outlined\"\n      color=\"secondary\"\n      startIcon={<AutoFixHighOutlinedIcon fontSize=\"large\" />}\n      sx={{ borderRadius: 5 }}\n    >\n      <Typography textTransform=\"none\">Chỉnh sửa</Typography>\n    </Button>\n  );\n}\n","import * as React from 'react';\nimport { NumericFormat, NumericFormatProps } from 'react-number-format';\n\ninterface CustomProps {\n  onChange: (event: { target: { name: string; value: string } }) => void;\n  name: string;\n}\n\nconst NumericFormatCustom = React.forwardRef<NumericFormatProps, CustomProps>(\n  function NumericFormatCustom(props, ref) {\n    const { onChange, ...other } = props;\n\n    return (\n      <NumericFormat\n        {...other}\n        getInputRef={ref}\n        onValueChange={(values) => {\n          onChange({\n            target: {\n              name: props.name,\n              value: values.value\n            }\n          });\n        }}\n        thousandSeparator\n        valueIsNumericString\n      />\n    );\n  }\n);\n\nexport default NumericFormatCustom;\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select, { SelectChangeEvent, SelectProps } from '@mui/material/Select';\n\nexport type Option = {\n  value: number | string;\n  label: string | React.ReactElement;\n};\nexport type PropsSelectInput = SelectProps & {\n  options?: Option[];\n  labelmargintop?: string;\n};\nexport default function SelectInput(props: PropsSelectInput) {\n  const { options = [], label, labelmargintop = 0 } = props;\n  return (\n    <FormControl fullWidth>\n      <InputLabel size=\"small\" sx={{ mt: labelmargintop }}>\n        {label}\n      </InputLabel>\n      <Select size=\"small\" {...props}>\n        {options.map((item, idx) => (\n          <MenuItem key={idx} value={item.value}>\n            {item.label}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n}\n","import { TextFieldProps, TextField as TextInput } from '@mui/material';\n\nconst TextField = (props: TextFieldProps) => {\n  return <TextInput size=\"small\" fullWidth {...props} />;\n};\n\nexport default TextField;\n","import { Typography } from '@mui/material';\nimport {\n  avatarFormat,\n  CVFormat,\n  coverImgFormat\n} from 'src/constants/uploadFileRule';\n\nconst generateErrorText = (\n  object: string,\n  acceptTypes: string[],\n  acceptSize: number,\n  fileType: string\n) => {\n  const typeRegex = new RegExp(`${fileType}/`, 'g');\n  return (\n    <Typography color=\"error\" my={1} fontWeight={700} fontSize={13}>\n      {object} phải có định dạng&nbsp;\n      {acceptTypes.join(', ').replace(typeRegex, '.')} và dung lượng{' '}\n      {` <=${acceptSize / 1024 / 1024}MB`}\n    </Typography>\n  );\n};\n\nconst generateOverTokenErrorText = () => {\n  return (\n    <Typography color=\"error\" my={1} fontWeight={700} fontSize={13}>\n      Rất tiếc, hệ thống chỉ có thể phân tích hồ sơ chứa tối đa 4000 từ. Vui\n      lòng tải hồ sơ khác !\n    </Typography>\n  );\n};\n\nconst generateFailedOCRErrorText = () => {\n  return (\n    <Typography color=\"error\" my={1} fontWeight={700} fontSize={13}>\n      Không nhận diện được nội dung trong file hồ sơ của bạn. Vui lòng tải hồ sơ\n      khác !\n    </Typography>\n  );\n};\n\nexport const avatarErrorText = generateErrorText(\n  'Ảnh đại diện',\n  avatarFormat.acceptTypes,\n  avatarFormat.acceptSize,\n  'image'\n);\nexport const coverErrorText = generateErrorText(\n  'Ảnh bìa',\n  coverImgFormat.acceptTypes,\n  coverImgFormat.acceptSize,\n  'image'\n);\nexport const applicationErrorText = generateErrorText(\n  'CV',\n  CVFormat.acceptTypes,\n  CVFormat.acceptSize,\n  'application'\n);\nexport const overTokenErrorText = generateOverTokenErrorText();\nexport const failedOCRErrorText = generateFailedOCRErrorText();\n","export const defaultImage = {\n  companyAvatar:\n    'https://th.bing.com/th/id/OIP.EK1rvrib-MWNflZRM2XiDQHaH_?pid=ImgDet&w=183&h=197&c=7&dpr=1.3',\n  companyCover:\n    'https://png.pngtree.com/background/20210706/original/pngtree-business-background-white-collar-jobs-picture-image_216619.jpg'\n};\n\nexport const avatarFormat = {\n  acceptTypes: ['image/jpeg', 'image/png', 'image/gif'],\n  acceptSize: 1 * 1024 * 1024\n};\nexport const CVFormat = {\n  acceptTypes: ['application/pdf'],\n  acceptSize: 2 * 1024 * 1024\n};\nexport const coverImgFormat = {\n  acceptTypes: ['image/jpeg', 'image/png', 'image/gif'],\n  acceptSize: 4 * 1024 * 1024\n};\n","import React, { useEffect, useState } from 'react';\nimport './style.css';\nimport { WithContext as ReactTags } from 'react-tag-input';\nimport { Box } from '@mui/material';\n\nconst KeyCodes = {\n  comma: 188,\n  enter: 13\n};\n\nconst delimiters = [KeyCodes.comma, KeyCodes.enter];\n\ntype TagInputProps = {\n  suggestions: {\n    id: string;\n    text: string;\n  }[];\n  onChange: (tags: any[]) => void;\n  forwardedRef?: React.RefObject<any>;\n  value?: any[];\n  placeholder?: string;\n};\n\nconst MAX_LENGTH = 25;\nconst MAX_TAGS = 5;\n\nexport default function TagInput(props: TagInputProps) {\n  const { suggestions, onChange, forwardedRef, value, placeholder } = props;\n  const [tags, setTags] = React.useState(value || []);\n\n  const handleDelete = (i) => {\n    const newTagsList = tags?.filter((tag, index) => index !== i);\n    onChange(newTagsList);\n    setTags(newTagsList);\n  };\n\n  const handleAddition = (tag) => {\n    const newTagsList = [...tags, tag];\n    onChange(newTagsList);\n    setTags(newTagsList);\n  };\n\n  const handleTagClick = (index) => {};\n\n  useEffect(() => {\n    value?.length && setTags(value);\n  }, [value]);\n\n  return (\n    <Box\n      ref={forwardedRef}\n      sx={{\n        width: '100%',\n        border: '1px solid #ccc',\n        padding: '10px',\n        borderRadius: '5px'\n      }}\n    >\n      <ReactTags\n        tags={tags}\n        suggestions={suggestions}\n        delimiters={delimiters}\n        handleDelete={handleDelete}\n        handleAddition={handleAddition}\n        handleTagClick={handleTagClick}\n        maxTags={MAX_TAGS}\n        maxLength={MAX_LENGTH}\n        allowDragDrop={false}\n        placeholder={placeholder || `Liệt kê tối đa ${MAX_TAGS} từ khóa`}\n      />\n    </Box>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Box, Grid, Typography, Container, Divider } from '@mui/material';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormControl from 'src/components/FormControl';\nimport SelectInput from 'src/components/SelectInput';\nimport TextField from 'src/components/TextField';\nimport Autocomplete from 'src/components/Autocomplete';\nimport { useForm } from 'react-hook-form';\nimport {\n  convertObjectListToString,\n  convertObjectListToStringForSkill,\n  convertToObjectsForSkill,\n  findObjectKey\n} from 'src/utils/inputOutputFormat';\nimport NumericFormatCustom from 'src/components/NumberFormatCustom';\nimport EditButton from 'src/components/EditButton';\nimport ButtonGroup from 'src/components/ButtonGroup';\nimport {\n  Degree,\n  EmploymentType,\n  Experience,\n  PositionLevel\n} from 'src/constants/enum';\nimport GeneralViewUI from './GeneralViewUI';\nimport TagInput from 'src/components/TagInput';\nimport skills from 'src/constants/skills';\ninterface Option {\n  value: any;\n  label: any;\n}\n\ninterface FormProps {\n  jobTitle: string;\n  profession: string | Option[];\n  currentPosition: string;\n  desiredPosition: string;\n  desiredSalary: number;\n  degree: string;\n  experience: string;\n  workAddress: string | Option[];\n  employmentType: string;\n  careerGoal: string;\n  skills: string;\n}\n\ninterface GeneralFormProps {\n  data: FormProps;\n  options: {\n    profession: Option[];\n    workAddress: Option[];\n    positionLevel: Option[];\n    degree: Option[];\n    experience: Option[];\n    workingForm: Option[];\n  };\n  onSubmit: (data: FormProps) => void;\n}\n\nconst GeneralForm: React.FC<GeneralFormProps> = ({\n  data,\n  options,\n  onSubmit\n}) => {\n  const defaultValues: FormProps = {\n    jobTitle: '',\n    profession: '',\n    currentPosition: '',\n    desiredPosition: '',\n    desiredSalary: null,\n    degree: '',\n    experience: '',\n    workAddress: '',\n    employmentType: '',\n    careerGoal: '',\n    skills: ''\n  };\n\n  const {\n    control,\n    reset,\n    handleSubmit,\n    formState: { errors }\n  } = useForm<FormProps>({\n    defaultValues: defaultValues\n  });\n\n  const ref = React.useRef(null);\n  const [isReadOnly, setIsReadOnly] = useState(false);\n  const [employeeSkills, setSetEmployeeSkills] = useState(null);\n\n  const handleSaveProfile = (data: FormProps) => {\n    const newData = processDataPayload(data);\n    onSubmit(newData);\n    setIsReadOnly(true);\n  };\n\n  const handleCancel = () => {\n    reset(data);\n    setIsReadOnly(true);\n  };\n\n  const onEdit = () => setIsReadOnly(false);\n\n  const processDataPayload = (data: FormProps) => {\n    return {\n      ...data,\n      profession: convertObjectListToString(data?.profession as Option[]),\n      workAddress: convertObjectListToString(data?.workAddress as Option[]),\n      skills: convertObjectListToStringForSkill(employeeSkills)\n    };\n  };\n\n  useEffect(() => {\n    reset(data);\n    data?.skills &&\n      setSetEmployeeSkills(convertToObjectsForSkill(data?.skills));\n  }, [data]);\n\n  return (\n    <Container id=\"general\">\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Box display=\"flex\">\n          <Typography fontWeight={700} fontSize={21} lineHeight={3}>\n            Thông tin chung\n          </Typography>\n        </Box>\n        {isReadOnly && <EditButton onClick={onEdit} />}\n      </Box>\n      <Divider />\n      {isReadOnly ? (\n        <GeneralViewUI\n          user={{\n            ...data,\n            degree: Degree[data.degree] ? Degree[data.degree] : data.degree\n          }}\n        />\n      ) : (\n        <Grid sx={{ mt: 1 }} py={2}>\n          <Grid container mb={4} spacing={3}>\n            <Grid item xs={12}>\n              <FormControl\n                element={<TextField />}\n                control={control}\n                errors={errors}\n                fullWidth\n                id=\"jobTitle\"\n                label=\"Vị trí mong muốn\"\n                name=\"jobTitle\"\n                required\n                disabled={isReadOnly}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl\n                element={<Autocomplete />}\n                control={control}\n                errors={errors}\n                fullWidth\n                id=\"profession\"\n                label=\"Nghề nghiệp\"\n                name=\"profession\"\n                options={options.profession}\n                required\n                disabled={isReadOnly}\n                defaultValue={data?.profession}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl\n                element={<SelectInput />}\n                options={options.positionLevel}\n                control={control}\n                errors={errors}\n                fullWidth\n                id=\"currentPosition\"\n                label=\"Cấp bậc hiện tại\"\n                name=\"currentPosition\"\n                required\n                disabled={isReadOnly}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl\n                element={<SelectInput />}\n                options={options.positionLevel}\n                control={control}\n                errors={errors}\n                fullWidth\n                id=\"desiredPosition\"\n                label=\"Cấp bậc mong muốn\"\n                name=\"desiredPosition\"\n                required\n                disabled={isReadOnly}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl\n                element={<TextField />}\n                control={control}\n                errors={errors}\n                fullWidth\n                id=\"desiredSalary\"\n                label=\"Mức lương mong muốn\"\n                name=\"desiredSalary\"\n                pattern=\"integer\"\n                required\n                disabled={isReadOnly}\n                InputProps={{\n                  inputComponent: NumericFormatCustom as any,\n                  endAdornment: (\n                    <InputAdornment position=\"end\">triệu VNĐ</InputAdornment>\n                  )\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl\n                element={<SelectInput />}\n                options={options.degree}\n                control={control}\n                errors={errors}\n                fullWidth\n                id=\"degree\"\n                label=\"Trình độ học vấn\"\n                name=\"degree\"\n                required\n                disabled={isReadOnly}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl\n                element={<SelectInput />}\n                options={options.experience}\n                control={control}\n                errors={errors}\n                fullWidth\n                id=\"experience\"\n                label=\"Số năm kinh nghiệm\"\n                name=\"experience\"\n                required\n                disabled={isReadOnly}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl\n                element={<SelectInput />}\n                options={options.workingForm}\n                control={control}\n                errors={errors}\n                fullWidth\n                id=\"employmentType\"\n                label=\"Hình thức làm việc\"\n                name=\"employmentType\"\n                required\n                disabled={isReadOnly}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl\n                element={<Autocomplete />}\n                options={options.workAddress}\n                control={control}\n                errors={errors}\n                defaultValue={data?.workAddress}\n                fullWidth\n                id=\"workAddress\"\n                label=\"Địa chỉ làm việc\"\n                name=\"workAddress\"\n                required\n                disabled={isReadOnly}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl\n                element={<TextField />}\n                control={control}\n                errors={errors}\n                fullWidth\n                id=\"careerGoal\"\n                label=\"Mục tiêu nghề nghiệp\"\n                name=\"careerGoal\"\n                required\n                disabled={isReadOnly}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TagInput\n                suggestions={skills}\n                forwardedRef={ref}\n                value={employeeSkills}\n                onChange={setSetEmployeeSkills}\n              />\n              <Typography\n                fontSize={12}\n                color=\"secondary\"\n                fontStyle={'italic'}\n                sx={{ display: 'flex', justifyContent: 'center' }}\n              >\n                Hãy liệt kê tối đa 10 từ khóa. Ví dụ: Python, ReactJS, HTML,\n                Go... Sẽ giúp hệ thống tìm kiếm được doanh nghiệp phù hợp với hồ\n                sơ bạn nhất\n              </Typography>\n            </Grid>\n          </Grid>\n          {!isReadOnly && (\n            <ButtonGroup\n              handleSubmit={handleSubmit(handleSaveProfile)}\n              handleCancel={handleCancel}\n            />\n          )}\n        </Grid>\n      )}\n    </Container>\n  );\n};\n\nexport default GeneralForm;\n","import { useState, useEffect } from 'react';\nimport {\n  Box,\n  Button,\n  Grid,\n  Typography,\n  Container,\n  styled,\n  Divider,\n  Avatar\n} from '@mui/material';\nimport AddPhotoAlternateOutlinedIcon from '@mui/icons-material/AddPhotoAlternateOutlined';\nimport DoNotDisturbOnOutlinedIcon from '@mui/icons-material/DoNotDisturbOnOutlined';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport FormControl from 'src/components/FormControl';\nimport SelectInput from 'src/components/SelectInput';\nimport DatePicker from 'src/components/DatePicker';\nimport TextField from 'src/components/TextField';\nimport EditButton from 'src/components/EditButton';\nimport { useForm } from 'react-hook-form';\nimport dayjs from 'dayjs';\nimport { User } from '../users/model';\nimport { useApp } from 'src/modules/app/hooks';\nimport useMutateUserData from '../users/hooks/useMutateUserHook';\nimport { GENDER, ISMARRIED, ISMARRIED_OPTION } from 'src/constants/option';\nimport {\n  GetFileByUserId,\n  UploadFileByUserId,\n  RemoveFileByUserId,\n  DocumentType,\n  getFileByUrl,\n  uploadFile,\n  removeFileByUrl\n} from 'src/common/firebaseService';\nimport { avatarFormat } from 'src/constants/uploadFileRule';\nimport {\n  toOutputDateString,\n  toInputDateString\n} from 'src/utils/inputOutputFormat';\nimport ButtonGroup from 'src/components/ButtonGroup';\nimport { avatarErrorText } from 'src/components/UploadError';\nimport useMutateAvatar from 'src/modules/users/hooks/useMutateAvatar';\nimport PersonalViewUI from './PersonalViewUI';\n\nconst Input = styled('input')({\n  display: 'none'\n});\n\nexport default function Personal() {\n  const [avatarState, setAvatarState] = useState({\n    avatar: null,\n    avatarError: false,\n    storageAvatar: null,\n    uploadFile: null\n  });\n  const { user, setUserApp } = useApp();\n  const { onSaveData: onSavaAvatar } = useMutateAvatar();\n  const { onSaveData } = useMutateUserData();\n  const { acceptTypes, acceptSize } = avatarFormat;\n  const [isReadOnly, setIsReadOnly] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    reset(defaultUserValues);\n    handleGetAvatar();\n  }, [user]);\n\n  const handleEdit = () => setIsReadOnly(false);\n\n  const handleSaveProfile = async (data) => {\n    setLoading(true);\n\n    let avatarUrl = user.avatar;\n    if (avatarState.uploadFile)\n      avatarUrl = await uploadFile(avatarState.uploadFile).catch(() => '');\n    if (!avatarState.avatar) {\n      await removeFileByUrl(user.avatar);\n      avatarUrl = '';\n    }\n\n    const newData = {\n      ...data,\n      dob: toOutputDateString(data.dob),\n      isMarried: data.isMarried === 'Đã kết hôn' ? '1' : '0',\n      avatar: avatarUrl\n    };\n    setUserApp({\n      ...newData,\n      isMarried: newData.isMarried === '1',\n      sex: GENDER.find((item) => item.value === newData.sex)?.label,\n      avatar: avatarUrl\n    });\n    onSaveData(newData);\n\n    onSavaAvatar(newData);\n    setLoading(false);\n    setIsReadOnly(true);\n  };\n\n  const handleCancel = () => {\n    reset(defaultUserValues);\n    setAvatarState({ ...avatarState, avatar: avatarState.storageAvatar });\n    setIsReadOnly(true);\n  };\n\n  const handleGetAvatar = async () => {\n    const avatarUrl = await getFileByUrl(user?.avatar).catch(() => '');\n    setAvatarState({\n      ...avatarState,\n      avatar: avatarUrl,\n      storageAvatar: avatarUrl\n    });\n  };\n\n  const handleUploadAvatar = (e) => {\n    const image = e.target.files[0];\n    if (!image) return;\n    if (!acceptTypes.includes(image.type) || image.size > acceptSize) {\n      setAvatarState({ ...avatarState, avatarError: true });\n      return;\n    }\n    const imageUrl = URL.createObjectURL(image);\n    setAvatarState({\n      ...avatarState,\n      avatar: imageUrl,\n      uploadFile: image,\n      avatarError: false\n    });\n  };\n\n  const handleDeleteAvatar = () => {\n    setAvatarState({ ...avatarState, avatar: null, avatarError: false });\n  };\n\n  const defaultUserValues = {\n    ...user,\n    dob: toInputDateString(user.dob as string, 'DD-MM-YYYY'),\n    sex: GENDER.find((item) => item.label === user.sex)?.value,\n    isMarried: user.isMarried ? 'Đã kết hôn' : 'Độc thân'\n  };\n\n  const {\n    control,\n    reset,\n    handleSubmit,\n    formState: { errors }\n  } = useForm<User>({\n    defaultValues: defaultUserValues\n  });\n\n  return (\n    <Container id=\"personal\">\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Box display=\"flex\">\n          <Typography fontWeight={700} fontSize={21} lineHeight={3}>\n            Thông tin cá nhân\n          </Typography>\n        </Box>\n        {isReadOnly && <EditButton onClick={handleEdit} />}\n      </Box>\n      <Divider />\n      <Grid container sx={{ mt: 1 }} py={2}>\n        <Grid item xs={3} pr={2}>\n          <Box\n            display=\"flex\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n            rowGap={2}\n          >\n            <Avatar\n              alt={user.name}\n              src={avatarState.avatar}\n              sx={{\n                borderRadius: 2,\n                width: '75%',\n                height: 180,\n                bgcolor: '#a0b9cfc2'\n              }}\n            />\n            {!avatarState.avatar && !isReadOnly && (\n              <label htmlFor=\"userAvatar\">\n                <Button\n                  component=\"label\"\n                  size=\"small\"\n                  startIcon={<AddPhotoAlternateOutlinedIcon />}\n                  variant=\"text\"\n                  color=\"secondary\"\n                >\n                  <FormControl\n                    element={<Input type=\"file\" accept=\"image/*\" />}\n                    control={control}\n                    name=\"userAvatar\"\n                    id=\"userAvatar\"\n                    label=\"Ảnh đại diện\"\n                    onChange={handleUploadAvatar}\n                    // sx={{ fontSize: 15 }}\n                  />\n                  <Typography sx={{ fontSize: 15, fontWeight: 700 }}>\n                    Tải lên\n                  </Typography>\n                </Button>\n              </label>\n            )}\n\n            {avatarState.avatar && !isReadOnly && (\n              <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\n                <Button\n                  component=\"label\"\n                  size=\"small\"\n                  startIcon={<AddPhotoAlternateOutlinedIcon />}\n                  variant=\"text\"\n                  color=\"secondary\"\n                >\n                  <FormControl\n                    element={<Input type=\"file\" accept=\"image/*\" />}\n                    control={control}\n                    name=\"userAvatar\"\n                    id=\"userAvatar\"\n                    label=\"Ảnh đại diện\"\n                    onChange={handleUploadAvatar}\n                  />\n                  <Typography sx={{ fontSize: 15, fontWeight: 700 }}>\n                    Thay đổi\n                  </Typography>\n                </Button>\n                <Button\n                  component=\"label\"\n                  onClick={handleDeleteAvatar}\n                  size=\"small\"\n                  startIcon={<DoNotDisturbOnOutlinedIcon />}\n                  variant=\"text\"\n                  color=\"secondary\"\n                >\n                  <Typography sx={{ fontSize: 15, fontWeight: 700 }}>\n                    Xóa\n                  </Typography>\n                </Button>\n              </Box>\n            )}\n            {avatarState.avatarError && avatarErrorText}\n          </Box>\n        </Grid>\n        <Grid item xs={9}>\n          {!isReadOnly ? (\n            <Grid container mb={4} spacing={3}>\n              <Grid item xs={12} sm={6}>\n                <FormControl\n                  element={<TextField />}\n                  control={control}\n                  errors={errors}\n                  fullWidth\n                  id=\"name\"\n                  label=\"Họ và tên\"\n                  name=\"name\"\n                  required\n                  disabled={isReadOnly}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <FormControl\n                  element={<TextField />}\n                  control={control}\n                  errors={errors}\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email\"\n                  name=\"email\"\n                  pattern=\"email\"\n                  required\n                  disabled={isReadOnly}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <FormControl\n                  element={<TextField />}\n                  control={control}\n                  errors={errors}\n                  fullWidth\n                  id=\"phone\"\n                  label=\"Số điện thoại\"\n                  name=\"phone\"\n                  pattern=\"phone\"\n                  required\n                  disabled={isReadOnly}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <FormControl\n                  element={<DatePicker maxDate={dayjs()} />}\n                  control={control}\n                  errors={errors}\n                  fullWidth\n                  id=\"dob\"\n                  label=\"Ngày sinh\"\n                  name=\"dob\"\n                  required\n                  disabled={isReadOnly}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <FormControl\n                  element={<SelectInput />}\n                  options={GENDER}\n                  control={control}\n                  errors={errors}\n                  fullWidth\n                  id=\"sex\"\n                  label=\"Giới tính\"\n                  name=\"sex\"\n                  disabled={isReadOnly}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <FormControl\n                  element={<SelectInput />}\n                  options={ISMARRIED_OPTION}\n                  control={control}\n                  errors={errors}\n                  fullWidth\n                  id=\"isMarried\"\n                  label=\"Tình trạng hôn nhân\"\n                  name=\"isMarried\"\n                  disabled={isReadOnly}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <FormControl\n                  element={<TextField />}\n                  control={control}\n                  errors={errors}\n                  fullWidth\n                  id=\"address\"\n                  label=\"Địa chỉ\"\n                  name=\"address\"\n                  required\n                  disabled={isReadOnly}\n                />\n              </Grid>\n            </Grid>\n          ) : (\n            <PersonalViewUI user={user} />\n          )}\n          {!isReadOnly && (\n            <Box display=\"flex\" justifyContent=\"center\" sx={{ gap: 3 }}>\n              {loading ? (\n                <CircularProgress size={20} />\n              ) : (\n                <ButtonGroup\n                  handleSubmit={handleSubmit(handleSaveProfile)}\n                  handleCancel={handleCancel}\n                />\n              )}\n            </Box>\n          )}\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n","import { Box, styled } from '@mui/material';\n\nconst SubmitBox = styled(Box)(({ theme }) => ({\n  background: '#ffff',\n  height: 70,\n  width: '100%',\n  boxShadow: '0px 0px 10px #aae2f7',\n  left: 0,\n  right: 0,\n  bottom: 0,\n  zIndex: 1,\n  position: 'sticky',\n  display: 'flex',\n  justifyContent: 'flex-end',\n  alignItems: 'center',\n  gap: theme.spacing(4)\n}));\n\nexport default SubmitBox;\n","import { List, ListItem, Button, Typography, Grid } from '@mui/material';\n\nconst handleScrollToSection = (sectionId) => {\n  const element = document.getElementById(sectionId);\n  if (element) {\n    element.scrollIntoView({ behavior: 'smooth' });\n  }\n};\n\nconst TableOfContents = ({ sections }) => {\n  return (\n    <List component=\"nav\" sx={{ px: 0 }}>\n      <ListItem>\n        <Typography fontSize={14} fontWeight={700}>\n          Hồ sơ trực tuyến của bạn\n        </Typography>\n      </ListItem>\n      {sections.map((section) => (\n        <ListItem key={section.id} sx={{ p: 0 }}>\n          <Button\n            sx={{ py: 1 }}\n            fullWidth\n            onClick={() => handleScrollToSection(section.id)}\n            color=\"secondary\"\n          >\n            <Grid container>\n              <Grid\n                item\n                xs={2}\n                display=\"flex\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n              >\n                {section.icon}\n              </Grid>\n              <Grid\n                item\n                xs={10}\n                display=\"flex\"\n                justifyContent=\"left\"\n                alignItems=\"center\"\n              >\n                <Typography fontSize={13}>{section.title}</Typography>\n              </Grid>\n            </Grid>\n          </Button>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default TableOfContents;\n","import { AxiosError } from 'axios';\nimport { useMutation } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { useApp } from 'src/modules/app/hooks';\nimport { UploadAvatar } from '../userService';\nimport { User } from '../model';\n\nconst useMutateAvatar = () => {\n  const { toast, setUserApp } = useApp();\n  const mutationFunction = UploadAvatar.create;\n  const { mutate: onSaveData, isLoading } = useMutation<\n    ResponseData<Partial<User>>,\n    AxiosError<ResponseData<Partial<User>>>,\n    string\n  >(mutationFunction, {\n    onSuccess: (res) => {\n      if (res.status === 200) {\n        toast.success({ massage: res.message });\n        setUserApp({ avatar: res.data.avatar });\n      } else {\n        toast.error({ massage: res.message });\n      }\n    },\n    onError: (error) => {\n      toast.error({ massage: error.response.data.message });\n    }\n  });\n  return {\n    onSaveData,\n    isLoading\n  };\n};\n\nexport default useMutateAvatar;\n","import { AxiosError } from 'axios';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { useApp } from 'src/modules/app/hooks';\nimport { User } from '../model';\nimport { SetProfile } from '../userService';\n\nconst useMutateUserData = () => {\n  const queryClient = useQueryClient();\n  const { toast } = useApp();\n  const mutationFunction = SetProfile.create;\n  const { mutate: onSaveData, isLoading } = useMutation<\n    ResponseData<User>,\n    AxiosError<ResponseData<User>>,\n    User\n  >(mutationFunction, {\n    onSuccess: (res) => {\n      if (res.status === 200) {\n        queryClient.invalidateQueries('get-Profile');\n        toast.success({ massage: res.message });\n      } else {\n        toast.error({ massage: res.message });\n      }\n    },\n    onError: (error) => {\n      toast.error({ massage: error.response.data.message });\n    }\n  });\n  return {\n    onSaveData,\n    isLoading\n  };\n};\n\nexport default useMutateUserData;\n","import _ from 'lodash';\nimport { AttachedDocument, OnlineProfile } from 'src/modules/jobProfile/model';\n\n// export function tfidfReview(keywordArray: string[], documentText: string) {\n//   const termFreq = keywordArray.reduce((result, keywordArray) => {\n//     const regex = new RegExp(`\\\\b${keywordArray}\\\\b`, 'gi');\n//     const matches = documentText.match(regex) || [];\n//     result[keywordArray] = matches.length;\n//     return result;\n//   }, {});\n\n//   const totalWords = documentText.split(/\\s+/).length;\n\n//   const tfidf = {};\n\n//   Object.entries(termFreq).forEach(([word, termCount]) => {\n//     if (typeof termCount === 'number') {\n//       // Check if termCount is a number\n//       const tf = termCount / totalWords;\n//       const idf = Math.log(keywordArray.length / (termCount || 1));\n//       tfidf[word] = tf * idf;\n//     } else {\n//       // Handle the case where termCount is not a number\n//       console.error(`Term count for \"${word}\" is not a number.`);\n//     }\n//   });\n\n//   return _.entries(tfidf)\n//     .sort((a, b) => b[1] - a[1])\n//     .map((entry) => entry[0]);\n// }\n\nexport const loadKeywords = (analysisResults: any[], document?: any) => {\n  if (analysisResults.length <= 0 && !Boolean(analysisResults[0])) return;\n\n  const result = analysisResults[0];\n\n  const startIndex = result.indexOf('[');\n  if (startIndex === -1) {\n    console.log(\"Không tìm thấy ký tự '['\");\n    return;\n  }\n\n  // Tìm vị trí kết thúc của ']'\n  const endIndex = result.lastIndexOf(']');\n  if (endIndex === -1) {\n    console.log(\"Không tìm thấy ký tự ']'\");\n    return;\n  }\n\n  // Trích xuất chuỗi con từ vị trí startIndex đến endIndex\n  const extractedString = result\n    .substring(startIndex + 1, endIndex)\n    .replace(/[\"]/g, '');\n  console.log('extractedString: ', extractedString);\n\n  // B1: Thay thế dấu \"'\" thành dấu '\"' để đảm bảo JSON hợp lệ\n  const jsonString = extractedString.replace(/[_!@#$%^&*;|<>'\"\\n\\t\\r]/g, '');\n  console.log('jsonString: ', jsonString);\n\n  // B2: Parse string sang array\n  const keywordArray = jsonString.split(',');\n  console.log('keywordArray', keywordArray);\n\n  const keywordList = keywordArray.slice(0, 20);\n  console.log('keywordList?.join(', ')', keywordList?.join(', '));\n  return keywordList?.join(', ');\n};\n\nfunction removeDateAttributes(data) {\n  return data.map((item) => {\n    const { startDate, endDate, id, isDoing, ...rest } = item;\n    return rest;\n  });\n}\n\nconst removeAttributes = (\n  profile: Partial<OnlineProfile | AttachedDocument>,\n  profileType: string,\n  cvText?: string\n) => {\n  // if profile type is OnlineProfile then return\n  if (profileType === 'online') {\n    const profileData = profile as Partial<OnlineProfile>;\n    return {\n      jobTitle: profileData?.jobTitle,\n      profession: profileData?.profession,\n      work_experiences: profileData?.work_experiences.map((experience) => {\n        return {\n          jobTitle: experience.jobTitle,\n          jobDescription: experience.jobDescription\n        };\n      }),\n      education_informations: profileData?.education_informations.map(\n        (education) => education.specialization\n      ),\n      another_degrees: profileData?.another_degrees?.map(\n        (degree) => degree.degreeName\n      )\n    };\n  } else {\n    return {\n      jobTitle: profile?.jobTitle,\n      profession: profile?.profession,\n      cvContent: cvText\n    };\n  }\n};\n\ntype profileType = 'online' | 'document';\nexport function preProcessData(\n  object,\n  profileType: profileType,\n  cvText?: string\n) {\n  const dataToAnalyze = removeAttributes(object, profileType, cvText);\n  return dataToAnalyze;\n}\n"],"names":["ButtonGroup","props","handleSubmit","handleCancel","_jsxs","Box","display","justifyContent","sx","gap","children","_jsx","Button","onClick","variant","color","width","DatePicker","LocalizationProvider","dateAdapter","AdapterDayjs","DatePickerMui","format","value","dayjs","slotProps","textField","size","fullWidth","EditButton","startIcon","AutoFixHighOutlinedIcon","fontSize","borderRadius","Typography","textTransform","React","ref","onChange","other","NumericFormat","getInputRef","onValueChange","values","target","name","thousandSeparator","valueIsNumericString","SelectInput","options","label","labelmargintop","FormControl","InputLabel","mt","Select","map","item","idx","MenuItem","TextInput","generateErrorText","object","acceptTypes","acceptSize","fileType","typeRegex","RegExp","concat","my","fontWeight","join","replace","avatarErrorText","avatarFormat","coverErrorText","coverImgFormat","applicationErrorText","CVFormat","overTokenErrorText","failedOCRErrorText","defaultImage","companyAvatar","companyCover","delimiters","TagInput","suggestions","forwardedRef","placeholder","tags","setTags","useEffect","length","border","padding","ReactTags","handleDelete","i","newTagsList","filter","tag","index","handleAddition","handleTagClick","maxTags","maxLength","allowDragDrop","_ref","data","onSubmit","control","reset","formState","errors","useForm","defaultValues","jobTitle","profession","currentPosition","desiredPosition","desiredSalary","degree","experience","workAddress","employmentType","careerGoal","skills","isReadOnly","setIsReadOnly","useState","employeeSkills","setSetEmployeeSkills","processDataPayload","convertObjectListToString","convertObjectListToStringForSkill","convertToObjectsForSkill","Container","id","alignItems","lineHeight","onEdit","Divider","GeneralViewUI","user","Degree","Grid","py","container","mb","spacing","xs","element","TextField","required","disabled","Autocomplete","defaultValue","sm","positionLevel","pattern","InputProps","inputComponent","NumericFormatCustom","endAdornment","InputAdornment","position","workingForm","fontStyle","newData","Input","styled","Personal","_GENDER$find2","avatarState","setAvatarState","avatar","avatarError","storageAvatar","uploadFile","setUserApp","useApp","onSaveData","onSavaAvatar","useMutateAvatar","useMutateUserData","loading","setLoading","defaultUserValues","handleGetAvatar","async","avatarUrl","getFileByUrl","catch","handleUploadAvatar","e","image","files","includes","type","imageUrl","URL","createObjectURL","dob","toInputDateString","sex","GENDER","find","isMarried","handleEdit","pr","flexDirection","rowGap","Avatar","alt","src","height","bgcolor","htmlFor","component","AddPhotoAlternateOutlinedIcon","accept","handleDeleteAvatar","DoNotDisturbOnOutlinedIcon","PersonalViewUI","maxDate","ISMARRIED_OPTION","CircularProgress","_GENDER$find","removeFileByUrl","toOutputDateString","theme","background","boxShadow","left","right","bottom","zIndex","sections","List","px","ListItem","section","p","sectionId","document","getElementById","scrollIntoView","behavior","handleScrollToSection","icon","title","toast","mutationFunction","UploadAvatar","create","mutate","isLoading","useMutation","onSuccess","res","status","success","massage","message","error","onError","response","queryClient","useQueryClient","SetProfile","invalidateQueries","loadKeywords","analysisResults","Boolean","result","startIndex","indexOf","console","log","endIndex","lastIndexOf","extractedString","substring","jsonString","keywordArray","split","keywordList","slice","removeAttributes","profile","profileType","cvText","_profileData$another_","profileData","work_experiences","jobDescription","education_informations","education","specialization","another_degrees","degreeName","cvContent","preProcessData"],"sourceRoot":""}