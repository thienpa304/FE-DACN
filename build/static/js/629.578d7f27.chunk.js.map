{"version":3,"file":"static/js/629.578d7f27.chunk.js","mappings":"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","sources":["components/FollowButton/index.tsx","components/Link/index.tsx","modules/application/applicationService.ts","modules/jobProfile/attachedDocument/hooks/useQueryAttachedDocument.ts","components/LinearPercent/index.tsx","components/UploadButton/index.tsx","modules/application/hooks/useMutateApplyJob.ts","modules/application/components/AnayzeProfileButton.tsx","modules/application/components/ModalApply.tsx","modules/application/hooks/useQueryCheckApplied.ts","modules/jobs/components/CardApply.tsx","modules/jobs/components/CompanyInfoTab.tsx","modules/jobs/hooks/useMutateFollowJobById.ts","modules/jobs/components/FollowJobButton.tsx","modules/jobs/hooks/useFollowJobList.ts","modules/jobs/hooks/useJob.ts","modules/jobs/hooks/useQueryFollowJobs.ts","modules/users/hooks/useMutateCompany.ts","modules/users/profile/Information/EditForm.tsx","modules/users/profile/Information/InfoField.tsx","modules/jobs/components/JobContent.tsx","pages/view-job-detail/TabContent.tsx","utils/reviewProfile.ts","utils/compareEnum.ts","utils/rewriteUrl.ts"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport { Box } from '@mui/material';\n\nexport default function FollowButton(props) {\n  const { isFollow: isFollowing } = props;\n  const [isFollow, setIsFollow] = useState(isFollowing);\n\n  const handleToggleFollow = (id) => {\n    setIsFollow((prev) => !prev);\n  };\n\n  useEffect(() => {\n    setIsFollow(isFollowing);\n  }, [isFollowing]);\n\n  return (\n    <Box\n      onClick={handleToggleFollow}\n      sx={{ display: 'flex', alignItem: 'center' }}\n    >\n      {isFollow ? (\n        <FavoriteIcon\n          sx={{\n            display: 'flex',\n            color: 'red',\n            '&:hover': {\n              color: 'darkred'\n            }\n          }}\n        />\n      ) : (\n        <FavoriteBorderIcon\n          sx={{\n            display: 'flex',\n            color: 'red',\n            '&:hover': {\n              color: 'darkred'\n            }\n          }}\n        />\n      )}\n    </Box>\n  );\n}\n","import React, { forwardRef, useMemo } from 'react';\nimport { Link as ReactLink } from 'react-router-dom';\n\ninterface CustomLinkProps {\n  to?: string;\n  children: React.ReactNode;\n  sx?: any;\n  state?: any;\n  onClick?: () => void;\n}\n\nconst linkStyle = {\n  textDecoration: 'none',\n  color: '#551a8b'\n};\n\nconst handleMouseEnter = (e: React.MouseEvent<HTMLAnchorElement>) => {\n  e.currentTarget.style.color = '#FF7D55'; // Truy cập style thông qua currentTarget\n};\n\nconst handleMouseLeave = (\n  e: React.MouseEvent<HTMLAnchorElement>,\n  defaultColor\n) => {\n  e.currentTarget.style.color = defaultColor || '#551a8b'; // Truy cập style thông qua currentTarget\n};\n\nconst Link = forwardRef<HTMLButtonElement, CustomLinkProps>((props, ref) => {\n  const { to, children, sx } = props;\n\n  return (\n    <ReactLink\n      {...props}\n      to={to}\n      style={{ ...linkStyle, ...sx }}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={(e) => handleMouseLeave(e, sx?.color)}\n    >\n      {children}\n    </ReactLink>\n  );\n});\n\nexport default Link;\n","import BaseService from 'src/common/base-service';\r\n\r\nexport const ApplicationService = new BaseService('employee/applications');\r\nexport const CandidateProfilesService = new BaseService(\r\n  'employer/applications'\r\n);\r\nexport const UpdateStatusService = new BaseService('employer/applications');\r\nexport const ApplicationTotalResults = new BaseService(\r\n  'employer/applications/totalResults'\r\n);\r\nexport const CheckApplied = new BaseService('employee/job-postings');\r\n","import { AxiosError } from 'axios';\nimport { useQuery } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { AttachedDocument } from 'src/modules/jobProfile/model/index';\nimport { AttachedDocumentService } from 'src/modules/jobProfile/employeeProfileService';\nimport { useEffect, useState } from 'react';\nimport { getAccessToken } from 'src/utils/localStorage';\nimport { useApp } from 'src/modules/app/hooks';\nimport useDocumentHook from './useDocumentHook';\n\nconst useQueryAttachedDocument = () => {\n  const { isEmployee } = useApp();\n  const { setProfile } = useDocumentHook();\n  const isLoggedIn = Boolean(getAccessToken());\n\n  const { data, isLoading, isSuccess, refetch } = useQuery<\n    ResponseData<AttachedDocument>,\n    AxiosError<ResponseData<AttachedDocument>>\n  >(['get-AttachedDocument'], AttachedDocumentService.get, {\n    retry: (failureCount, error) =>\n      error.response.status === 404 ? false : failureCount < 2,\n    refetchOnWindowFocus: false,\n    enabled: isLoggedIn && isEmployee\n  });\n\n  useEffect(() => {\n    // Handle the data or error here\n    if (data) {\n      setProfile(data.data);\n    }\n  }, [isSuccess]);\n\n  return {\n    attachedDocument: data?.data,\n    isLoading,\n    refetch\n  };\n};\n\nexport default useQueryAttachedDocument;\n","import * as React from 'react';\nimport LinearProgress, {\n  LinearProgressProps\n} from '@mui/material/LinearProgress';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\n\nfunction LinearPercent(props: LinearProgressProps & { value: number }) {\n  return (\n    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n      <Box sx={{ width: '100%', mr: 1 }}>\n        <LinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box sx={{ minWidth: 35 }}>\n        <Typography variant=\"body2\" color=\"text.secondary\">{`${Math.round(\n          props.value\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nexport default LinearPercent;\n","import { useState } from 'react';\nimport { ref, uploadBytesResumable, getDownloadURL } from 'firebase/storage';\nimport { storage } from 'src/common/firebaseConfig';\nimport { styled } from '@mui/material/styles';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport Button, { ButtonProps } from '@mui/material/Button';\nimport Chip from '@mui/material/Chip';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Box from '@mui/material/Box';\nimport LinearPercent from '../LinearPercent';\nimport dayjs from 'dayjs';\nimport { ApplicationType } from 'src/constants/enum';\nimport { removeFileByUrl } from 'src/common/firebaseService';\n\nconst VisuallyHiddenInput = styled('input')({\n  display: 'none'\n});\n\nconst ButtonWrapper = styled(Button)<any>(({ theme }) => ({\n  backgroundColor: theme.colors.primary.lighter\n}));\nconst ChipWrapper = styled(Chip)(({ theme }) => ({\n  borderRadius: 6\n}));\n\ntype Props = ButtonProps & {\n  label?: string;\n  value?: string;\n  onChange?: (url: string) => void;\n  setIsChecked?: (value: string) => void;\n  setUrl?: (value: string) => void;\n};\n\nfunction UploadButton(props: Props) {\n  const { label, sx, onChange, setIsChecked, setUrl } = props;\n  // State to store uploaded file\n  const [file, setFile] = useState<File>();\n  const [fileUrl, setFileUrl] = useState<string | undefined>();\n\n  // progress\n  const [percent, setPercent] = useState(null);\n\n  // Handle file upload event and update state\n  const handleChange = async (event) => {\n    removeFileByUrl(fileUrl).then(() => {\n      const file = event.target.files[0];\n      if (!file) return;\n      setFile(() => file);\n      handleUpload(file);\n    });\n  };\n\n  const handleDeleteFile = async () => {\n    if (!fileUrl) return;\n    removeFileByUrl(fileUrl).then(() => {\n      setFile(() => null);\n      setIsChecked('');\n    });\n  };\n  console.log(file, fileUrl);\n\n  const handleUpload = (value) => {\n    if (!value) return;\n\n    let date = dayjs(new Date()).format('DDMMYYYY');\n    const storageRef = ref(storage, `/userDocument/${value.name}-${date}`);\n\n    // progress can be paused and resumed. It also exposes progress updates.\n    // Receives the storage reference and the file to upload.\n    const uploadTask = uploadBytesResumable(storageRef, value);\n\n    uploadTask.on(\n      'state_changed',\n      (snapshot) => {\n        const percent = Math.round(\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n        );\n\n        // update progress\n        setPercent(percent);\n      },\n      (err) => console.error(err),\n      () => {\n        // download url\n        getDownloadURL(uploadTask.snapshot.ref).then((url) => {\n          setPercent(null);\n          setFileUrl(() => url);\n          setUrl(url);\n          onChange(url);\n        });\n      }\n    );\n    setIsChecked(ApplicationType.cv_enclosed);\n  };\n\n  return (\n    <div>\n      <ButtonWrapper\n        component=\"label\"\n        variant=\"contained\"\n        startIcon={<CloudUploadIcon />}\n        sx={sx}\n      >\n        {label || 'Upload file'}\n        <VisuallyHiddenInput\n          type=\"file\"\n          onChange={handleChange}\n          accept=\"application/pdf\"\n        />\n      </ButtonWrapper>\n      <Box marginTop={2}>\n        {percent !== null && <LinearPercent value={percent} />}\n        {fileUrl && file && (\n          <ChipWrapper\n            label={file.name}\n            onDelete={handleDeleteFile}\n            deleteIcon={<DeleteIcon />}\n            variant=\"outlined\"\n          />\n        )}\n      </Box>\n    </div>\n  );\n}\n\nexport default UploadButton;\n","import { AxiosError } from 'axios';\r\nimport { useMutation, useQueryClient } from 'react-query';\r\nimport { ResponseData } from 'src/common/http-request';\r\nimport { useApp } from 'src/modules/app/hooks';\r\nimport { useNavigate } from 'react-router';\r\nimport { ApplicationService } from '../applicationService';\r\nimport { Application } from '../model';\r\n\r\nconst useMutateApplyJob = () => {\r\n  const { toast } = useApp();\r\n  const queryClient = useQueryClient();\r\n  const { mutate: onSaveData, isLoading } = useMutation<\r\n    ResponseData<Application>,\r\n    AxiosError<ResponseData<Application>>,\r\n    Application\r\n  >(ApplicationService.create, {\r\n    onSuccess: (res) => {\r\n      if (res.status === 200) {\r\n        queryClient.invalidateQueries(['job-getById']);\r\n        toast.success({ massage: 'Ứng tuyển thành công' });\r\n      } else {\r\n        toast.error({ massage: res.message });\r\n      }\r\n    },\r\n    onError: (error) => {\r\n      toast.error({ massage: error.response.data.message });\r\n    }\r\n  });\r\n\r\n  return {\r\n    onSaveData,\r\n    isLoading\r\n  };\r\n};\r\n\r\nexport default useMutateApplyJob;\r\n","import { Box, Rating, Typography } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { ApplicationType } from 'src/constants/enum';\r\nimport { useApp } from 'src/modules/app/hooks';\r\nimport GradeIcon from '@mui/icons-material/Grade';\r\nimport {\r\n  ProfileApplicationType,\r\n  LOW_SCORE,\r\n  NORMAL_SCORE,\r\n  HIGH_SCORE,\r\n  review,\r\n  firstRoundForGeneralInfo,\r\n  preprocessJobData,\r\n  ratingStar\r\n} from 'src/utils/reviewProfile';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport alertDialog from 'src/utils/alertDialog';\r\n\r\nconst renderAnalyzeResult = (analyzeResult: number, hints: string) => {\r\n  const rating = ratingStar(analyzeResult);\r\n\r\n  return (\r\n    <>\r\n      <Box display={'flex'} textAlign={'left'}>\r\n        <Typography fontWeight={700} fontSize={16} mr={2}>\r\n          Độ phù hợp\r\n        </Typography>\r\n        {/* <Box\r\n          sx={{\r\n            width: 150,\r\n            borderRadius: 3,\r\n            p: 1,\r\n            bgcolor:\r\n              analyzeResult >= HIGH_SCORE\r\n                ? '#ffc107'\r\n                : analyzeResult >= NORMAL_SCORE\r\n                ? '#4caf50'\r\n                : analyzeResult >= LOW_SCORE\r\n                ? '#b5b5b5'\r\n                : '#efefef',\r\n            display: 'flex',\r\n            justifyContent: 'center'\r\n          }}\r\n        >\r\n          {analyzeResult >= HIGH_SCORE\r\n            ? 'Cao'\r\n            : analyzeResult >= NORMAL_SCORE\r\n            ? 'Trung bình'\r\n            : analyzeResult >= LOW_SCORE\r\n            ? 'Thấp'\r\n            : 'Không phù hợp'}\r\n        </Box> */}\r\n        <Rating value={rating} max={3} readOnly />\r\n      </Box>\r\n      <Box\r\n        display={'flex'}\r\n        flexDirection={'column'}\r\n        // justifyContent={'left'}\r\n        mt={2}\r\n        textAlign={'left'}\r\n      >\r\n        <Typography fontWeight={700} fontSize={16}>\r\n          Gợi ý:\r\n        </Typography>\r\n        <Typography mt={1}>{hints}</Typography>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default function AnayzeProfileButton(props) {\r\n  const {\r\n    selectedProfile,\r\n    job,\r\n    profileType,\r\n    setShowResult,\r\n    showResult,\r\n    fileUrl,\r\n    setHintsMessage\r\n  } = props;\r\n  const { user } = useApp();\r\n  const [start, setStart] = useState(false);\r\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\r\n  const [analyzedProfile, setAnalyzedProfile] =\r\n    useState<ProfileApplicationType>(null);\r\n  const [passRoundProfiles, setPassOneProfiles] = useState<\r\n    ProfileApplicationType[]\r\n  >([]);\r\n  const [roundOneFinished, setRoundOneFinished] = useState(false);\r\n  const [roundTwoFinished, setRoundTwoFinished] = useState(false);\r\n  const [roundThreeFinished, setRoundThreeFinished] = useState(false);\r\n  const [analyzeResult, setAnalyzeResult] = useState<number>(null);\r\n  const [goToAnalyzeResult, setGoToAnalyzeResult] = useState({\r\n    signal: false,\r\n    resultData: null\r\n  });\r\n  const [hints, setHints] = useState('');\r\n\r\n  const finishedAll = () => {\r\n    setHintsMessage(hints);\r\n    setStart(false);\r\n    setRoundOneFinished(false);\r\n    setRoundTwoFinished(false);\r\n    setRoundThreeFinished(false);\r\n    setShowResult(true);\r\n    setIsAnalyzing(false);\r\n    setPassOneProfiles([]);\r\n    setGoToAnalyzeResult({ signal: false, resultData: null });\r\n    console.log('Finised All');\r\n    alertDialog({\r\n      message: renderAnalyzeResult(analyzeResult, hints),\r\n      hideCancelButton: true,\r\n      title: 'Kết quả phân tích'\r\n    });\r\n  };\r\n\r\n  const handleSetAnalyzedProfile = async (data: ProfileApplicationType[]) => {\r\n    setAnalyzedProfile(data[0]);\r\n  };\r\n\r\n  const handleIsAnalyzing = (data: boolean) => {\r\n    setIsAnalyzing(data);\r\n  };\r\n\r\n  const handleGoToAnalyzeResult = (signal: boolean, resultData) => {\r\n    setGoToAnalyzeResult({ signal: signal, resultData: resultData });\r\n  };\r\n\r\n  const handleAnalyzeResult = async (result: any[]) => {\r\n    if (!result || !result[0]) {\r\n      if (\r\n        analyzedProfile?.employee_Profile?.online_profile ||\r\n        analyzedProfile?.employee_Profile?.attached_document\r\n      ) {\r\n        const matchingScore = firstRoundForGeneralInfo(\r\n          analyzedProfile?.employer_Requirement,\r\n          analyzedProfile?.employee_Profile\r\n        );\r\n\r\n        console.log('matchingScore', matchingScore);\r\n        setAnalyzeResult(() => matchingScore);\r\n        if (matchingScore >= LOW_SCORE) {\r\n          setPassOneProfiles(() => [analyzedProfile]);\r\n        } else {\r\n          setHints(\r\n            'Hồ sơ của bạn có vẻ chưa đáp ứng các yêu cầu cơ bản như: Giới tính, độ tuổi ngành nghề, trình độ, kinh nghiệm'\r\n          );\r\n          setIsAnalyzing(false);\r\n        }\r\n      }\r\n    } else {\r\n      const response = JSON.parse(result[0]);\r\n      const matchingScore: number = response?.result;\r\n      if (matchingScore + analyzeResult < LOW_SCORE) {\r\n        setHints(\r\n          'Hồ sơ của bạn có vẻ chưa đáp ứng các yêu cầu cơ bản như: Ngành nghề, trình độ, kinh nghiệm'\r\n        );\r\n      } else setHints(response?.hints);\r\n      setAnalyzeResult((prev) => prev + matchingScore);\r\n    }\r\n\r\n    if (start) {\r\n      if (!roundOneFinished) setRoundOneFinished(true);\r\n      else if (!roundTwoFinished) setRoundTwoFinished(true);\r\n      else if (!roundThreeFinished) setRoundThreeFinished(true);\r\n    }\r\n  };\r\n\r\n  const handleReviewProfile = () => {\r\n    review({\r\n      round: 1,\r\n      handleAnalyzeResult: handleAnalyzeResult,\r\n      setIsAnalyzing: handleIsAnalyzing,\r\n      setAnalyzedProfile: handleSetAnalyzedProfile,\r\n      resetMatchingScoreList: [analyzedProfile],\r\n      handleGoToAnalyzeResult: handleGoToAnalyzeResult\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (goToAnalyzeResult.signal)\r\n      start && handleAnalyzeResult(goToAnalyzeResult.resultData);\r\n  }, [goToAnalyzeResult.signal]);\r\n\r\n  useEffect(() => {\r\n    let profileData;\r\n    if (profileType === ApplicationType.online_profile) {\r\n      profileData = {\r\n        personal_information: user,\r\n        online_profile: selectedProfile\r\n      };\r\n    } else if (profileType === ApplicationType.attached_document) {\r\n      profileData = {\r\n        personal_information: user,\r\n        attached_document: selectedProfile\r\n      };\r\n    } else {\r\n      profileData = {\r\n        application: {\r\n          id: 1,\r\n          CV: fileUrl,\r\n          applicationType: 'Nộp nhanh'\r\n        }\r\n      };\r\n    }\r\n    const data: ProfileApplicationType = {\r\n      id: 1,\r\n      employee_Profile: {\r\n        ...profileData,\r\n        personal_information: {\r\n          dob: profileData?.personal_information?.dob,\r\n          sex: profileData?.personal_information?.sex\r\n        }\r\n      },\r\n      employer_Requirement: preprocessJobData(job)\r\n    };\r\n    setAnalyzedProfile(() => data);\r\n\r\n    if (\r\n      data?.employee_Profile?.online_profile ||\r\n      data?.employee_Profile?.attached_document\r\n    ) {\r\n      const keywords =\r\n        data?.employee_Profile?.online_profile?.keywords ||\r\n        data?.employee_Profile?.attached_document?.keywords;\r\n      const analyzeResultData: ProfileApplicationType = {\r\n        ...data,\r\n        employee_Profile: {\r\n          ...data.employee_Profile,\r\n\r\n          application: {\r\n            id: 1,\r\n            keywords: keywords,\r\n            applicationType: profileType,\r\n            matchingScore: null\r\n          }\r\n        }\r\n      };\r\n      setAnalyzedProfile(() => analyzeResultData);\r\n      console.log(analyzeResultData);\r\n    }\r\n  }, [JSON.stringify(job), selectedProfile, fileUrl]);\r\n\r\n  // go to round 1\r\n  useEffect(() => {\r\n    if (start && selectedProfile) {\r\n      setAnalyzeResult(null);\r\n      setShowResult(false);\r\n      handleReviewProfile();\r\n    }\r\n  }, [start]);\r\n\r\n  // go to round 2 and 3\r\n  useEffect(() => {\r\n    if (!start) return;\r\n    if (roundOneFinished && !roundTwoFinished) {\r\n      console.log('passRoundProfiles', passRoundProfiles);\r\n\r\n      // go to round 2\r\n      if (passRoundProfiles.length > 0)\r\n        review({\r\n          round: 2,\r\n          handleAnalyzeResult: handleAnalyzeResult,\r\n          setIsAnalyzing: handleIsAnalyzing,\r\n          passRoundProfiles: passRoundProfiles\r\n        });\r\n      else {\r\n        finishedAll();\r\n      }\r\n    } else if (roundTwoFinished && !roundThreeFinished) {\r\n      console.log('Round 2 finished');\r\n\r\n      // go to round 3\r\n      review({\r\n        round: 3,\r\n        handleAnalyzeResult: handleAnalyzeResult,\r\n        setIsAnalyzing: handleIsAnalyzing,\r\n        passRoundProfiles: passRoundProfiles\r\n      });\r\n    } else if (roundThreeFinished) {\r\n      console.log('Round 3 finished');\r\n      finishedAll();\r\n    }\r\n  }, [roundOneFinished, roundTwoFinished, roundThreeFinished]);\r\n\r\n  return (\r\n    <Box display=\"flex\" sx={{ alignItems: 'center', gap: 1 }}>\r\n      <LoadingButton\r\n        loading={isAnalyzing}\r\n        onClick={() => {\r\n          setStart(true);\r\n        }}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        sx={{\r\n          minWidth: 200\r\n        }}\r\n        disabled={showResult || isAnalyzing}\r\n      >\r\n        <GradeIcon fontSize=\"small\" />\r\n        Phân tích độ phù hợp\r\n      </LoadingButton>\r\n      {/* {showResult && (\r\n        <Box\r\n          sx={{\r\n            width: 150,\r\n            borderRadius: 3,\r\n            p: 1,\r\n            bgcolor:\r\n              analyzeResult >= HIGH_SCORE\r\n                ? '#ffc107'\r\n                : analyzeResult >= NORMAL_SCORE\r\n                ? '#4caf50'\r\n                : analyzeResult >= LOW_SCORE\r\n                ? '#b5b5b5'\r\n                : '#efefef',\r\n            display: 'flex',\r\n            justifyContent: 'center'\r\n          }}\r\n        >\r\n          {analyzeResult >= HIGH_SCORE\r\n            ? 'Cao'\r\n            : analyzeResult >= NORMAL_SCORE\r\n            ? 'Trung bình'\r\n            : analyzeResult >= LOW_SCORE\r\n            ? 'Thấp'\r\n            : 'Không phù hợp'}\r\n        </Box>\r\n      )} */}\r\n    </Box>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Divider,\r\n  Grid,\r\n  Typography\r\n} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport { useForm } from 'react-hook-form';\r\nimport FormControl from 'src/components/FormControl';\r\nimport TextField from 'src/components/TextField';\r\nimport UploadButton from 'src/components/UploadButton';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport useMutateApplyJob from '../hooks/useMutateApplyJob';\r\nimport { ApplicationType } from 'src/constants/enum';\r\nimport useQueryOnlineProfile from 'src/modules/jobProfile/onlineProfile/hooks/useQueryOnlineProfile';\r\nimport useQueryAttachedDocument from 'src/modules/jobProfile/attachedDocument/hooks/useQueryAttachedDocument';\r\nimport { useApp } from 'src/modules/app/hooks';\r\nimport useProfileHook from 'src/modules/users/hooks/useUserHook';\r\nimport { v4 } from 'uuid';\r\nimport useOnlineProfile from 'src/modules/jobProfile/onlineProfile/hooks/useOnlineProfile';\r\nimport useDocumentHook from 'src/modules/jobProfile/attachedDocument/hooks/useDocumentHook';\r\nimport { review } from 'src/utils/reviewProfile';\r\nimport AnayzeProfileButton from './AnayzeProfileButton';\r\nimport { Job } from 'src/modules/jobs/model';\r\nimport { removeFileByUrl } from 'src/common/firebaseService';\r\nimport SuspenseLoader from 'src/components/SuspenseLoader';\r\nimport { useResponsive } from 'src/utils/responsive';\r\n\r\nconst Title = styled('div')(() => ({\r\n  fontWeight: 600,\r\n  fontSize: 18,\r\n  margin: '5px 0'\r\n}));\r\nconst SubTitle = styled('div')(({ theme }) => ({\r\n  fontWeight: 400,\r\n  fontSize: 12,\r\n  color: theme.colors.alpha.black[70]\r\n}));\r\n\r\ntype Props = {\r\n  postId: number;\r\n  open: boolean;\r\n  position: string;\r\n  company?: string;\r\n  job?: Partial<Job>;\r\n  onClose: () => void;\r\n};\r\n\r\nconst buttonStyle = {\r\n  width: '100%',\r\n  px: 1,\r\n  color: '#000'\r\n};\r\n\r\nexport default function ModalApply(props: Props) {\r\n  const { isMobile } = useResponsive();\r\n  const { onSaveData } = useMutateApplyJob();\r\n  const { open, onClose, position, company, postId, job } = props;\r\n  const { profile: user } = useProfileHook();\r\n  const { onlineProfile, isLoading: isLoadingOnline } = useQueryOnlineProfile();\r\n  const { attachedDocument, isLoading: isLoadingDocument } =\r\n    useQueryAttachedDocument();\r\n  const { profile: online, setProfile: setOnline } = useOnlineProfile();\r\n  const { profile: document, setProfile: setDocument } = useDocumentHook();\r\n  const [isChecked, setIsChecked] = useState('');\r\n  const [missInfo, setMissInfo] = useState(false);\r\n  const [selectedProfile, setSelectedProfile] = useState(null);\r\n  const [showResult, setShowResult] = useState(false);\r\n  const [url, setUrl] = useState('');\r\n  const [hintsMessage, setHintsMessage] = useState('');\r\n\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors }\r\n  } = useForm({\r\n    defaultValues: {}\r\n  });\r\n\r\n  const handleClose = () => {\r\n    if (url) removeFileByUrl(url).then(() => setUrl(''));\r\n    setIsChecked(null);\r\n    setHintsMessage(null);\r\n    setShowResult(null);\r\n    setSelectedProfile(null);\r\n    onClose();\r\n  };\r\n  const handleApply = (data) => {\r\n    if (!isChecked) {\r\n      setMissInfo(true);\r\n      return;\r\n    }\r\n\r\n    let submitProfile = '';\r\n\r\n    if (isChecked === ApplicationType.cv_enclosed) submitProfile = data.CV;\r\n    else {\r\n      if (url) removeFileByUrl(url);\r\n      submitProfile = '#' + v4();\r\n    }\r\n\r\n    onSaveData({\r\n      ...data,\r\n      postId,\r\n      applicationType: isChecked,\r\n      CV: submitProfile\r\n    });\r\n    setShowResult(null);\r\n    onClose();\r\n  };\r\n\r\n  const uploadProfile = (id) => {\r\n    setIsChecked(id);\r\n    setHintsMessage('');\r\n  };\r\n\r\n  useEffect(() => {\r\n    reset(user);\r\n    setShowResult(false);\r\n    if (isChecked === ApplicationType.online_profile) {\r\n      setSelectedProfile(online);\r\n    }\r\n    if (isChecked === ApplicationType.attached_document) {\r\n      setSelectedProfile(document);\r\n    }\r\n    if (isChecked === ApplicationType.cv_enclosed) {\r\n      setSelectedProfile(job);\r\n    }\r\n  }, [isChecked]);\r\n\r\n  if (isLoadingOnline || isLoadingDocument) return <SuspenseLoader />;\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleClose}\r\n      maxWidth=\"md\"\r\n      fullWidth\r\n      fullScreen={isMobile}\r\n    >\r\n      <DialogTitle>\r\n        <SubTitle> Vị trí ứng tuyển</SubTitle>\r\n        <Title>{position}</Title>\r\n        {company && <SubTitle>{company}</SubTitle>}\r\n      </DialogTitle>\r\n\r\n      <DialogContent>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={6} lg={4}>\r\n            <Button\r\n              startIcon={<AddIcon />}\r\n              variant=\"contained\"\r\n              disabled={onlineProfile ? false : true}\r\n              fullWidth\r\n              onClick={() => uploadProfile(ApplicationType.online_profile)}\r\n              sx={[\r\n                buttonStyle,\r\n                {\r\n                  bgcolor:\r\n                    isChecked === ApplicationType.online_profile\r\n                      ? '#f29c00'\r\n                      : '#fff6e5'\r\n                }\r\n              ]}\r\n            >\r\n              {onlineProfile ? (\r\n                'Hồ sơ trực tuyến'\r\n              ) : (\r\n                <em>Chưa có hồ sơ trực tuyến</em>\r\n              )}\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12} md={6} lg={4}>\r\n            <Button\r\n              startIcon={<AddIcon />}\r\n              variant=\"contained\"\r\n              fullWidth\r\n              disabled={attachedDocument ? false : true}\r\n              onClick={() => uploadProfile(ApplicationType.attached_document)}\r\n              sx={[\r\n                buttonStyle,\r\n                {\r\n                  bgcolor:\r\n                    isChecked === ApplicationType.attached_document\r\n                      ? '#f29c00'\r\n                      : '#fff6e5'\r\n                }\r\n              ]}\r\n            >\r\n              {attachedDocument ? (\r\n                'Hồ sơ đính kèm'\r\n              ) : (\r\n                <em>Chưa có hồ sơ đính kèm</em>\r\n              )}\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12} lg={4}>\r\n            <FormControl\r\n              control={control}\r\n              errors={errors}\r\n              id=\"CV\"\r\n              name=\"CV\"\r\n              label=\"Tải lên hồ sơ có sẵn\"\r\n            >\r\n              <UploadButton\r\n                sx={[\r\n                  buttonStyle,\r\n                  {\r\n                    bgcolor:\r\n                      isChecked === ApplicationType.cv_enclosed\r\n                        ? '#f29c00'\r\n                        : '#fff6e5'\r\n                  }\r\n                ]}\r\n                setIsChecked={setIsChecked}\r\n                setUrl={setUrl}\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        {missInfo && (\r\n          <Typography color=\"error\" mb={3} fontWeight={700} fontStyle=\"italic\">\r\n            * Vui lòng chọn loại hồ sơ cần gửi !\r\n          </Typography>\r\n        )}\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <FormControl\r\n              element={<TextField />}\r\n              control={control}\r\n              errors={errors}\r\n              required\r\n              id=\"name\"\r\n              label=\"Họ và tên\"\r\n              name=\"name\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <FormControl\r\n              element={<TextField />}\r\n              control={control}\r\n              errors={errors}\r\n              required\r\n              id=\"email\"\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              pattern=\"email\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <FormControl\r\n              element={<TextField />}\r\n              control={control}\r\n              errors={errors}\r\n              required\r\n              id=\"phone\"\r\n              label=\"Số điện thoại\"\r\n              name=\"phone\"\r\n              pattern=\"phone\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions\r\n        sx={{\r\n          display: 'flex',\r\n          justifyContent: { sm: 'space-between', xs: 'center' },\r\n          flexWrap: 'wrap',\r\n          p: 2,\r\n          gap: 2\r\n        }}\r\n      >\r\n        <AnayzeProfileButton\r\n          job={job}\r\n          selectedProfile={selectedProfile}\r\n          profileType={isChecked}\r\n          setShowResult={setShowResult}\r\n          showResult={showResult}\r\n          fileUrl={url}\r\n          setHintsMessage={setHintsMessage}\r\n        />\r\n        <Box sx={{ display: 'flex', columnGap: 1 }}>\r\n          <Button\r\n            onClick={handleClose}\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            sx={{ minWidth: 120 }}\r\n          >\r\n            Hủy\r\n          </Button>\r\n          <Button\r\n            onClick={handleSubmit(handleApply)}\r\n            variant=\"contained\"\r\n            color=\"info\"\r\n            sx={{ minWidth: 120 }}\r\n          >\r\n            Nộp hồ sơ\r\n          </Button>\r\n        </Box>\r\n      </DialogActions>\r\n      {/* {hintsMessage && (\r\n          <Box mb={1} p={2} gap={1} display=\"flex\" flexDirection=\"column\">\r\n            <Divider sx={{ mb: 1, color: '#f29c00' }} />\r\n            <Typography fontWeight={700} fontSize={18}>\r\n              Gợi ý:\r\n            </Typography>\r\n            <Typography fontStyle=\"italic\" mx={2}>\r\n              {hintsMessage}\r\n            </Typography>\r\n          </Box>\r\n        )} */}\r\n    </Dialog>\r\n  );\r\n}\r\n","import { AxiosError } from 'axios';\r\nimport { useQuery } from 'react-query';\r\nimport { ResponseData } from 'src/common/http-request';\r\nimport { CheckApplied } from '../applicationService';\r\nimport { useApp } from 'src/modules/app/hooks';\r\n\r\nconst useQueryCheckApplied = (params?) => {\r\n  const { isEmployee } = useApp();\r\n  const { data, isLoading } = useQuery<\r\n    ResponseData<Boolean>,\r\n    AxiosError<ResponseData<Boolean>>\r\n  >(\r\n    ['job-getById', params],\r\n    () => CheckApplied.getById(params?.postId + '/applied', { params }),\r\n    {\r\n      keepPreviousData: true,\r\n      retry: 1,\r\n      refetchOnWindowFocus: false,\r\n      enabled: isEmployee && Boolean(params?.postId)\r\n    }\r\n  );\r\n\r\n  return {\r\n    isApplied: data?.data,\r\n    isLoading\r\n  };\r\n};\r\n\r\nexport default useQueryCheckApplied;\r\n","import { useState } from 'react';\r\nimport { Avatar, Box, Grid, Button, Typography } from '@mui/material';\r\nimport DateRangeIcon from '@mui/icons-material/DateRange';\r\nimport PaidIcon from '@mui/icons-material/Paid';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport AccessibilityIcon from '@mui/icons-material/Accessibility';\r\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Job } from '../model';\r\nimport ModalApply from '../../application/components/ModalApply';\r\nimport { toInputDateString } from 'src/utils/formatData';\r\nimport { defaultImage } from 'src/constants/uploadFileRule';\r\nimport { useApp } from 'src/modules/app/hooks';\r\nimport { Link, Navigate, useNavigate, useSearchParams } from 'react-router-dom';\r\nimport FollowJobButton from './FollowJobButton';\r\nimport SuspenseLoader from 'src/components/SuspenseLoader';\r\nimport CustomContainer from 'src/components/CustomContainer';\r\nimport { rewriteUrl } from 'src/utils/rewriteUrl';\r\nimport { useResponsive } from 'src/utils/responsive';\r\nimport useQueryCheckApplied from 'src/modules/application/hooks/useQueryCheckApplied';\r\n\r\nconst AvatarWrapper = styled(Avatar)(({ theme }) => ({\r\n  width: 150,\r\n  height: 150,\r\n  objectFit: 'contain',\r\n  borderRadius: '5px'\r\n}));\r\nconst SubTitle = styled('h3')(({ theme }) => ({\r\n  fontWeight: 400,\r\n  fontSize: 16,\r\n  color: theme.colors.alpha.black[70]\r\n}));\r\nconst Title = styled('h3')(() => ({\r\n  fontWeight: 600,\r\n  fontSize: 18\r\n}));\r\nconst LabelText = styled('span')(({ theme }) => ({\r\n  color: theme.colors.alpha.black[70]\r\n}));\r\nconst ValueText = styled('span')(({ theme }) => ({\r\n  color: theme.colors.alpha.black[100],\r\n  marginLeft: 5\r\n}));\r\ntype Props = {\r\n  data: Partial<Job>;\r\n};\r\nconst CardApply: React.FC<Props> = ({ data }) => {\r\n  const { isMobile } = useResponsive();\r\n  const { isEmployee, isEmployer, isAdmin } = useApp();\r\n  const [openFormApply, setOpenFormApply] = useState(false);\r\n  const navigate = useNavigate();\r\n  const onCloseFormApply = () => {\r\n    setOpenFormApply(false);\r\n  };\r\n  const handleOpenFormApply = () => {\r\n    setOpenFormApply(true);\r\n  };\r\n  const { isApplied } = useQueryCheckApplied({ postId: data?.postId });\r\n\r\n  return (\r\n    <CustomContainer\r\n      sx={{ px: 5, pb: 5, mb: 2, minHeight: !isEmployer && !isAdmin && 280 }}\r\n    >\r\n      <Grid container>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          md={2}\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n          sx={{ justifyContent: { xs: 'center', sm: 'normal' } }}\r\n        >\r\n          <AvatarWrapper\r\n            src={data?.employer?.logo || defaultImage.companyAvatar}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={10}>\r\n          <Box>\r\n            <Link\r\n              to={`/company/${rewriteUrl(\r\n                data?.employer?.companyName\r\n              )}?id=${btoa(data?.employer?.userId.toString())}`}\r\n              style={{ textDecoration: 'none' }}\r\n            >\r\n              <SubTitle>{data?.employer?.companyName}</SubTitle>\r\n            </Link>\r\n            <Title>{data?.jobTitle}</Title>\r\n            <Grid container spacing={1}>\r\n              <Grid item xs={12} md={6}>\r\n                <Grid container alignItems={'center'}>\r\n                  <PaidIcon color=\"primary\" sx={{ margin: '0 5px' }} />\r\n                  <LabelText> Mức lương : </LabelText>\r\n                  <ValueText>\r\n                    {data?.minSalary} - {data?.maxSalary} triệu\r\n                  </ValueText>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <Grid\r\n                  container\r\n                  alignItems={'center'}\r\n                  wrap=\"nowrap\"\r\n                  overflow={'hidden'}\r\n                >\r\n                  <DateRangeIcon color=\"primary\" sx={{ margin: '0 5px' }} />\r\n                  <LabelText> Hạn nộp hồ sơ : </LabelText>\r\n                  <ValueText>{data?.applicationDeadline}</ValueText>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <Grid container alignItems={'center'}>\r\n                  <AccessibilityIcon color=\"primary\" sx={{ margin: '0 5px' }} />\r\n                  <LabelText> Độ tuổi : </LabelText>\r\n                  <ValueText>\r\n                    {data?.minAge} - {data?.maxAge}\r\n                  </ValueText>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <Grid container alignItems={'center'}>\r\n                  <LocationOnIcon color=\"primary\" sx={{ margin: '0 5px' }} />\r\n                  <LabelText> Khu vực ứng tuyển : </LabelText>\r\n                  <ValueText>{data?.workAddress}</ValueText>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            {!isEmployer && !isAdmin && (\r\n              <Box\r\n                sx={{\r\n                  marginTop: 2,\r\n                  display: 'flex',\r\n                  gap: 2,\r\n                  alignItems: 'center',\r\n                  justifyContent: isMobile && 'center'\r\n                }}\r\n              >\r\n                <Button\r\n                  onClick={\r\n                    isEmployee\r\n                      ? handleOpenFormApply\r\n                      : () => {\r\n                          navigate('/login', {\r\n                            state: {\r\n                              from:\r\n                                window.location.pathname +\r\n                                window.location.search,\r\n                              postId: data?.postId\r\n                            }\r\n                          });\r\n                        }\r\n                  }\r\n                  variant=\"contained\"\r\n                  startIcon={<SendIcon />}\r\n                  color=\"info\"\r\n                  sx={{ display: isApplied && 'none' }}\r\n                >\r\n                  Nộp hồ sơ\r\n                </Button>\r\n                <Typography display={!isApplied && 'none'} color=\"red\">\r\n                  Bạn đã nộp đơn ứng tuyển\r\n                </Typography>\r\n                <FollowJobButton job={data} />\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n      <ModalApply\r\n        open={openFormApply}\r\n        postId={data?.postId}\r\n        onClose={onCloseFormApply}\r\n        position={data?.jobTitle}\r\n        company={data?.employer?.companyName}\r\n        job={data}\r\n      />\r\n    </CustomContainer>\r\n  );\r\n};\r\n\r\nexport default CardApply;\r\n","import { Box, Typography } from '@mui/material';\nimport CustomContainer from 'src/components/CustomContainer';\nimport { InfoGrid } from 'src/modules/users/profile/Information/InfoField';\nimport BusinessIcon from '@mui/icons-material/Business';\nimport { rewriteUrl } from 'src/utils/rewriteUrl';\nimport Link from 'src/components/Link';\nimport { textAlign } from 'html2canvas/dist/types/css/property-descriptors/text-align';\n\nconst CompanyData = (company) => [\n  { label: 'Tên công ty', value: company?.companyName },\n  { label: 'Địa chỉ công ty', value: company?.companyLocation },\n  { label: 'Lĩnh vực', value: company?.careerField },\n  { label: 'Giới thiệu doanh nghiệp', value: company?.description }\n];\n\nexport default function CompanyInfoTab(props) {\n  const { sx, company, companyPage = false } = props;\n\n  return (\n    <CustomContainer sx={{ px: 5, ...sx, minHeight: 300 }}>\n      <Box\n        sx={{ display: { xs: 'normal', sm: 'flex' } }}\n        justifyContent=\"space-between\"\n      >\n        <Box display=\"flex\">\n          <BusinessIcon color=\"primary\" sx={{ fontSize: { sm: 56, xs: 46 } }} />\n          <Typography\n            fontWeight={700}\n            sx={{ fontSize: { sm: 22, xs: 20 } }}\n            lineHeight={3}\n          >\n            Thông tin công ty\n          </Typography>\n        </Box>\n        {!companyPage && (\n          <Link\n            to={`/company/${rewriteUrl(company?.companyName)}?id=${btoa(\n              company?.userId\n            )}`}\n            sx={{\n              textDecoration: 'none',\n              alignContent: 'center'\n            }}\n          >\n            Xem trang công ty\n          </Link>\n        )}\n      </Box>\n      {CompanyData(company)?.map((item, index) => (\n        <InfoGrid key={index} item={item} />\n      ))}\n    </CustomContainer>\n  );\n}\n","import { AxiosError } from 'axios';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { useApp } from 'src/modules/app/hooks';\nimport { FollowJobService } from '../jobService';\n\nconst useMutateFollowJobById = () => {\n  const queryClient = useQueryClient();\n  const { toast } = useApp();\n  const { mutate: onFollowJobById, isLoading } = useMutation<\n    ResponseData<any[]>,\n    AxiosError<ResponseData<any[]>>,\n    [id: number]\n  >(([id]) => FollowJobService.create({ jobPosting: id }), {\n    onSuccess: (res) => {\n      if (res.status === 200) {\n        queryClient.invalidateQueries(['get-FollowJobs']);\n        toast.success({ massage: res.message });\n      } else {\n        toast.error({ massage: res.message });\n      }\n    },\n    onError: (error) => {\n      toast.error({ massage: error.response.data.message });\n    }\n  });\n\n  return {\n    onFollowJobById,\n    isLoading\n  };\n};\n\nexport default useMutateFollowJobById;\n","import { useEffect, useState } from 'react';\nimport { Box } from '@mui/material';\nimport useMutateFollowJobById from '../hooks/useMutateFollowJobById';\nimport { useApp } from 'src/modules/app/hooks';\nimport FollowButton from 'src/components/FollowButton';\nimport useFollowJobList from 'src/modules/jobs/hooks/useFollowJobList';\nimport useJobList from '../hooks/useJobList';\nimport useQueryFollowJobs from '../hooks/useQueryFollowJobs';\n\nexport default function FollowJobButton(props) {\n  const { job, sx } = props;\n  const { onFollowJobById } = useMutateFollowJobById();\n  const { isEmployee } = useApp();\n  const [isFollow, setIsFollow] = useState(false);\n  const { followJobsList } = useFollowJobList();\n  const { jobList } = useJobList();\n  useQueryFollowJobs({ jobIds: jobList?.join(',') });\n\n  const handleToggleFollow = (id) => {\n    onFollowJobById([id]);\n    setIsFollow((prev) => !prev);\n  };\n\n  useEffect(() => {\n    if (!job || !followJobsList?.length) return;\n    const foundItem = followJobsList?.includes(job?.postId);\n    foundItem && setIsFollow(true);\n  }, [JSON.stringify(followJobsList), JSON.stringify(job)]);\n\n  if (!job || !isEmployee) return;\n\n  return (\n    <Box\n      onClick={() => handleToggleFollow(job?.postId)}\n      sx={{ display: 'flex', alignItem: 'center', ...sx }}\n    >\n      <FollowButton isFollow={isFollow} />\n    </Box>\n  );\n}\n","import { useAppDispatch, useAppSelector } from 'src/redux/hooks';\r\nimport {\r\n  selectFollowJobList,\r\n  setFollowJobList as setFollowJobListAction,\r\n  resetFollowJobList as reset\r\n} from '../followJobSlice';\r\n\r\nconst useFollowJobList = () => {\r\n  const { data: followJobsList } = useAppSelector(selectFollowJobList);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const setFollowJobList = (data: number[]) => {\r\n    dispatch(setFollowJobListAction(data));\r\n  };\r\n\r\n  const resetFollowJobList = () => {\r\n    dispatch(reset());\r\n  };\r\n\r\n  return {\r\n    followJobsList,\r\n    setFollowJobList,\r\n    resetFollowJobList\r\n  };\r\n};\r\n\r\nexport default useFollowJobList;\r\n","import { useAppDispatch, useAppSelector } from 'src/redux/hooks';\r\nimport {\r\n  selectJob,\r\n  setItemDetail as setItemDetailAction,\r\n  resetItemDetail as resetItemDetailAction\r\n} from '../jobSlice';\r\nimport { Job } from '../model';\r\n\r\nconst useJob = () => {\r\n  const { itemDetail } = useAppSelector(selectJob);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const setItemDetail = (data: Partial<Job>) => {\r\n    dispatch(setItemDetailAction(data));\r\n  };\r\n\r\n  const resetItemDetail = () => {\r\n    dispatch(resetItemDetailAction());\r\n  };\r\n\r\n  return {\r\n    itemDetail,\r\n    setItemDetail,\r\n    resetItemDetail\r\n  };\r\n};\r\n\r\nexport default useJob;\r\n","import { AxiosError } from 'axios';\r\nimport { useQuery } from 'react-query';\r\nimport { PaginationType, ResponseData } from 'src/common/http-request';\r\nimport { FollowJobType } from '../model';\r\nimport { FollowJobService } from '../jobService';\r\nimport { useApp } from 'src/modules/app/hooks';\r\nimport useFollowJobList from 'src/modules/jobs/hooks/useFollowJobList';\r\n\r\nconst useQueryFollowJobs = (params?) => {\r\n  const { isEmployee } = useApp();\r\n  const { setFollowJobList } = useFollowJobList();\r\n  const { data, isLoading, refetch } = useQuery<\r\n    ResponseData<PaginationType<FollowJobType[]>>,\r\n    AxiosError<ResponseData<FollowJobType[]>>\r\n  >(\r\n    ['get-FollowJobs', params],\r\n    () =>\r\n      FollowJobService.get({ params }).then((res) => {\r\n        if (res.data?.meta?.itemCount) {\r\n          const idList: number[] = res.data?.items?.map(\r\n            (item: FollowJobType) => item.postId\r\n          );\r\n          setFollowJobList(idList);\r\n        }\r\n        return res;\r\n      }),\r\n    {\r\n      keepPreviousData: true,\r\n      retry: 1,\r\n      refetchOnWindowFocus: false,\r\n      enabled: isEmployee\r\n    }\r\n  );\r\n\r\n  return {\r\n    jobFollow: data?.data?.items,\r\n    totalPages: data?.data?.meta?.totalPages,\r\n    isLoading,\r\n    refetch\r\n  };\r\n};\r\n\r\nexport default useQueryFollowJobs;\r\n","import { AxiosError } from 'axios';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { useApp } from 'src/modules/app/hooks';\nimport { Company } from '../model';\nimport { SetCompany } from '../userService';\n\nconst useMutateCompany = () => {\n  const queryClient = useQueryClient();\n  const { toast } = useApp();\n  const mutationFunction = SetCompany.create;\n  const { mutate: onSaveData, isLoading } = useMutation<\n    ResponseData<Company>,\n    AxiosError<ResponseData<Company>>,\n    Company\n  >(mutationFunction, {\n    onSuccess: (res) => {\n      if (res.status === 200) {\n        queryClient.invalidateQueries('get-Company');\n        toast.success({ massage: res.message });\n      } else {\n        toast.error({ massage: res.message });\n      }\n    },\n    onError: (error) => {\n      toast.error({ massage: error.response.data.message });\n    }\n  });\n  return {\n    onSaveData,\n    isLoading\n  };\n};\n\nexport default useMutateCompany;\n","import { Box, Button, Grid } from '@mui/material';\r\nimport { useForm } from 'react-hook-form';\r\nimport DatePicker from 'src/components/DatePicker';\r\nimport FormControl from 'src/components/FormControl';\r\nimport SelectInput from 'src/components/SelectInput';\r\nimport { Company, User } from '../../model';\r\nimport {\r\n  CAREER_FIELDS,\r\n  GENDER,\r\n  ISMARRIED,\r\n  ISMARRIED_OPTION,\r\n  PROFESSION\r\n} from 'src/constants/option';\r\nimport dayjs from 'dayjs';\r\nimport useMutateUserData from '../../hooks/useMutateUserHook';\r\nimport useMutateCompany from '../../hooks/useMutateCompany';\r\nimport TextField from 'src/components/TextField';\r\nimport { toInputDateString, toOutputDateString } from 'src/utils/formatData';\r\nimport ButtonGroup from 'src/components/ButtonGroup';\r\nimport { useApp } from 'src/modules/app/hooks';\r\nimport { setUser } from 'src/modules/app/appSlice';\r\nimport Autocomplete from 'src/components/Autocomplete';\r\n\r\nexport function UserForm(props) {\r\n  const { isEmployee } = useApp();\r\n  const { close, user } = props;\r\n  const { onSaveData: onSaveUser } = useMutateUserData();\r\n\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm<User>({\r\n    defaultValues: {\r\n      ...user,\r\n      dob: toInputDateString(user.dob as string, 'DD-MM-YYYY'),\r\n      sex: GENDER.find((item) => item.label === user.sex)?.value,\r\n      isMarried: user.isMarried ? 'Đã kết hôn' : 'Độc thân'\r\n    }\r\n  });\r\n\r\n  const handleSaveProfile = async (data) => {\r\n    const formattedDob = toOutputDateString(data.dob);\r\n    const isMarried = data.isMarried === 'Đã kết hôn' ? '1' : '0';\r\n    const newData = { ...data, dob: formattedDob, isMarried: isMarried };\r\n    onSaveUser(newData);\r\n    setUser(newData);\r\n    close();\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <Grid container spacing={3} mb={4}>\r\n        <Grid item xs={12} sm={6}>\r\n          <FormControl\r\n            element={<TextField />}\r\n            control={control}\r\n            errors={errors}\r\n            fullWidth\r\n            id=\"name\"\r\n            label=\"Họ và tên\"\r\n            name=\"name\"\r\n            required\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <FormControl\r\n            element={<TextField />}\r\n            control={control}\r\n            errors={errors}\r\n            disabled\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            required\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <FormControl\r\n            element={<TextField />}\r\n            control={control}\r\n            errors={errors}\r\n            fullWidth\r\n            id=\"phone\"\r\n            label=\"Số điện thoại\"\r\n            name=\"phone\"\r\n            pattern=\"phone\"\r\n            required\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <FormControl\r\n            element={<TextField />}\r\n            control={control}\r\n            errors={errors}\r\n            fullWidth\r\n            id=\"address\"\r\n            label=\"Địa chỉ\"\r\n            name=\"address\"\r\n            multiline\r\n            required\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <FormControl\r\n            element={<DatePicker maxDate={dayjs()} />}\r\n            control={control}\r\n            errors={errors}\r\n            fullWidth\r\n            id=\"dob\"\r\n            label=\"Ngày sinh\"\r\n            name=\"dob\"\r\n            required\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <FormControl\r\n            element={<SelectInput />}\r\n            options={GENDER}\r\n            control={control}\r\n            errors={errors}\r\n            fullWidth\r\n            id=\"sex\"\r\n            label=\"Giới tính\"\r\n            name=\"sex\"\r\n            required\r\n          />\r\n        </Grid>\r\n        {isEmployee && (\r\n          <Grid item xs={12} sm={6}>\r\n            <FormControl\r\n              element={<SelectInput />}\r\n              options={ISMARRIED_OPTION}\r\n              control={control}\r\n              errors={errors}\r\n              fullWidth\r\n              id=\"isMarried\"\r\n              label=\"Tình trạng hôn nhân\"\r\n              name=\"isMarried\"\r\n              required\r\n            />\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n      <ButtonGroup\r\n        handleSubmit={handleSubmit(handleSaveProfile)}\r\n        handleCancel={() => close()}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport function CompanyForm(props) {\r\n  const { close, user } = props;\r\n  const { onSaveData: onSaveCompany } = useMutateCompany(); \r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm<Company>({\r\n    defaultValues: {\r\n      ...user\r\n    }\r\n  });\r\n\r\n  const handleSaveCompany = (data) => {\r\n    onSaveCompany(data);\r\n    close();\r\n  };\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <Grid container spacing={3} mb={4}>\r\n        <Grid item xs={12}>\r\n          <FormControl\r\n            element={<TextField />}\r\n            control={control}\r\n            errors={errors}\r\n            fullWidth\r\n            id=\"companyName\"\r\n            label=\"Tên công ty\"\r\n            name=\"companyName\"\r\n            multiline\r\n            required\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <FormControl\r\n            element={<TextField />}\r\n            control={control}\r\n            errors={errors}\r\n            fullWidth\r\n            id=\"taxCode\"\r\n            label=\"Mã số thuế\"\r\n            name=\"taxCode\"\r\n            required\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <FormControl\r\n            element={<TextField />}\r\n            control={control}\r\n            errors={errors}\r\n            fullWidth\r\n            id=\"companyLocation\"\r\n            label=\"Địa chỉ\"\r\n            name=\"companyLocation\"\r\n            required\r\n            multiline\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <FormControl\r\n            element={\r\n              <Autocomplete\r\n                size=\"small\"\r\n                freeSolo={true}\r\n                options={CAREER_FIELDS}\r\n                autoComplete\r\n                autoSelect\r\n                autoHighlight\r\n                multiple={false}\r\n                defaultValue={user?.careerField}\r\n              />\r\n            }\r\n            control={control}\r\n            errors={errors}\r\n            fullWidth\r\n            name=\"careerField\"\r\n            label=\"Lĩnh vực\"\r\n            required\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <FormControl\r\n            element={<TextField />}\r\n            control={control}\r\n            errors={errors}\r\n            fullWidth\r\n            multiline\r\n            maxRows={6}\r\n            minRows={3}\r\n            id=\"description\"\r\n            label=\"Mô tả công ty\"\r\n            name=\"description\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <ButtonGroup\r\n        handleSubmit={handleSubmit(handleSaveCompany)}\r\n        handleCancel={() => close()}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Container,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  styled,\r\n  Divider\r\n} from '@mui/material';\r\nimport AutoFixHighOutlinedIcon from '@mui/icons-material/AutoFixHighOutlined';\r\nimport { CompanyForm, UserForm } from './EditForm';\r\nimport EditButton from 'src/components/EditButton';\r\nimport { useResponsive } from 'src/utils/responsive';\r\n\r\nexport const InputLabel = styled(Grid)(({ theme }) => {\r\n  const { isMobile } = useResponsive();\r\n  return {\r\n    fontFamily: theme.typography.fontFamily,\r\n    fontWeight: 700,\r\n    minHeight: isMobile ? 35 : 50,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: isMobile ? 'center' : 'left'\r\n  };\r\n});\r\n\r\nexport const InputData = styled(Grid)(({ theme }) => {\r\n  const { isMobile } = useResponsive();\r\n  return {\r\n    fontFamily: theme.typography.fontFamily,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: isMobile ? 'center' : 'left'\r\n  };\r\n});\r\n\r\nexport const InfoGrid = (props) => {\r\n  const { item } = props; \r\n  const [more, setMore] = useState(false);\r\n  return (\r\n    <Grid container sx={{ borderTop: 1, borderColor: 'grey.300' }}>\r\n      {item.label !== 'Giới thiệu doanh nghiệp' && (\r\n        <>\r\n          <InputLabel item xs={12} sm={6} md={4}>\r\n            {item.label}\r\n          </InputLabel>\r\n          <InputData item xs={12} sm={6} md={8}>\r\n            <Typography\r\n              sx={{\r\n                textAlign: { xs: 'center', md: 'left' },\r\n                lineHeight: { xs: 1.5, md: 2 }\r\n              }}\r\n            >\r\n              {item.value}\r\n            </Typography>\r\n          </InputData>\r\n        </>\r\n      )}\r\n      {item.label === 'Giới thiệu doanh nghiệp' && item.value && (\r\n        <>\r\n          <InputLabel item xs={12}>\r\n            {item.label}\r\n          </InputLabel>\r\n          <InputData item xs={12}>\r\n            <Typography\r\n              sx={{\r\n                overflow: 'hidden',\r\n                textOverflow: 'ellipsis',\r\n                display: '-webkit-box',\r\n                WebkitLineClamp: more ? 100 : 3,\r\n                WebkitBoxOrient: 'vertical',\r\n                textAlign: { xs: 'center', md: 'left' },\r\n                lineHeight: {\r\n                  xs: 1.5,\r\n                  md: 2\r\n                }\r\n              }}\r\n            >\r\n              {item.value}\r\n            </Typography>\r\n          </InputData>\r\n          <Button\r\n            onClick={() => {\r\n              setMore((prev) => !prev);\r\n            }}\r\n            sx={{ mx: 'auto' }}\r\n            color=\"secondary\"\r\n          >\r\n            {more ? 'Thu gọn' : 'Đọc thêm'}\r\n          </Button>\r\n        </>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default function InfoField(props) {\r\n  const { isMobile } = useResponsive();\r\n  const { user, data, title, editIcon, openForm } = props;\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleEdit = () => setOpen(true);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const myForm =\r\n    openForm === 'User' ? (\r\n      <UserForm close={handleClose} user={user} />\r\n    ) : (\r\n      <CompanyForm close={handleClose} user={user} />\r\n    );\r\n\r\n  return (\r\n    <Container sx={{ paddingX: 2 }}>\r\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Box display=\"flex\" alignItems={'end'}>\r\n          {editIcon}\r\n          <Typography\r\n            fontWeight={700}\r\n            sx={{\r\n              fontSize: { md: 22, xs: 18 },\r\n              lineHeight: { md: 2, xs: 1.5 }\r\n            }}\r\n          >\r\n            {title}\r\n          </Typography>\r\n        </Box>\r\n        <EditButton onClick={handleEdit} />\r\n        <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          fullWidth\r\n          maxWidth={'md'}\r\n          fullScreen={isMobile}\r\n        >\r\n          <DialogTitle\r\n            sx={{\r\n              textAlign: 'center',\r\n              fontWeight: 700,\r\n              fontSize: { md: '1.3rem', xs: '1rem' }\r\n            }}\r\n          >\r\n            {title}\r\n          </DialogTitle>\r\n          <Divider />\r\n          <DialogContent>{myForm}</DialogContent>\r\n        </Dialog>\r\n      </Box>\r\n      <Box sx={{ mt: 1 }}>\r\n        {data.map((item, index) => (\r\n          <InfoGrid item={item} key={index} />\r\n        ))}\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import ApartmentIcon from '@mui/icons-material/Apartment';\nimport ArticleIcon from '@mui/icons-material/Article';\nimport DateRangeIcon from '@mui/icons-material/DateRange';\nimport EventAvailableIcon from '@mui/icons-material/EventAvailable';\nimport GppGoodIcon from '@mui/icons-material/GppGood';\nimport HowToRegIcon from '@mui/icons-material/HowToReg';\nimport PeopleIcon from '@mui/icons-material/People';\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\nimport WcIcon from '@mui/icons-material/Wc';\nimport {\n  Avatar,\n  Box,\n  Container,\n  Divider,\n  Grid,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Typography\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { TextParser } from 'src/components/TextEditor';\nimport { Job } from '../model';\nimport CakeIcon from '@mui/icons-material/Cake';\nimport dayjs from 'dayjs';\n\nconst CommonInfo = styled(Box)(({ theme }) => ({\n  padding: 10,\n  backgroundColor: '#F0FFF0',\n  color: theme.colors.alpha.black[100],\n  borderRadius: 6\n}));\nconst AvatarWrapper = styled(Avatar)(({ theme }) => ({\n  backgroundColor: '#e6f6e6',\n  color: '#006400'\n}));\n\ntype Props = {\n  data: Partial<Job>;\n};\nconst JobContent: React.FC<Props> = ({ data }) => {\n  return (\n    <Container sx={{ height: '100%' }}>\n      <Typography variant=\"h3\" fontSize={22} noWrap marginBottom={2.5}>\n        Thông tin chung\n      </Typography>\n      <CommonInfo sx={{ minHeight: 240, width: '100%' }}>\n        <Grid container sx={{ my: 0.5 }}>\n          <Grid item xs={12} md={4}>\n            <ListItem>\n              <ListItemAvatar>\n                <AvatarWrapper>\n                  <DateRangeIcon />\n                </AvatarWrapper>\n              </ListItemAvatar>\n              <ListItemText\n                primary={dayjs(data.createAt).format('YYYY-MM-DD')}\n                secondary=\"Ngày đăng\"\n              />\n            </ListItem>\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <ListItem>\n              <ListItemAvatar>\n                <AvatarWrapper>\n                  <EventAvailableIcon />\n                </AvatarWrapper>\n              </ListItemAvatar>\n              <ListItemText\n                primary={`${data.trialPeriod} tháng`}\n                secondary=\"Thời gian thử việc\"\n              />\n            </ListItem>\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <ListItem>\n              <ListItemAvatar>\n                <AvatarWrapper>\n                  <HowToRegIcon />\n                </AvatarWrapper>\n              </ListItemAvatar>\n              <ListItemText primary={data.positionLevel} secondary=\"Cấp bậc\" />\n            </ListItem>\n          </Grid>\n        </Grid>\n        <Divider sx={{ width: '90%', margin: 'auto', my: 1 }} />\n\n        <Grid container sx={{ my: 0.5 }}>\n          <Grid item xs={12} md={4}>\n            <ListItem>\n              <ListItemAvatar>\n                <AvatarWrapper>\n                  <PeopleIcon />\n                </AvatarWrapper>\n              </ListItemAvatar>\n              <ListItemText\n                primary={data.numberOfVacancies}\n                secondary=\"Số lượng tuyển\"\n              />\n            </ListItem>\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <ListItem>\n              <ListItemAvatar>\n                <AvatarWrapper>\n                  <ArticleIcon />\n                </AvatarWrapper>\n              </ListItemAvatar>\n              <ListItemText\n                primary={data.employmentType}\n                secondary=\"Hình thức làm việc\"\n              />\n            </ListItem>\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <ListItem>\n              <ListItemAvatar>\n                <AvatarWrapper>\n                  <WcIcon />\n                </AvatarWrapper>\n              </ListItemAvatar>\n              <ListItemText\n                primary={data.sex || 'Tất cả'}\n                secondary=\"Giới tính\"\n              />\n            </ListItem>\n          </Grid>\n        </Grid>\n        <Divider sx={{ width: '90%', margin: 'auto', my: 1 }} />\n\n        <Grid container sx={{ my: 0.5 }}>\n          <Grid item xs={12} md={4}>\n            <ListItem>\n              <ListItemAvatar>\n                <AvatarWrapper>\n                  <GppGoodIcon />\n                </AvatarWrapper>\n              </ListItemAvatar>\n              <ListItemText\n                primary={data.degree}\n                secondary=\"Yêu cầu bằng cấp\"\n              />\n            </ListItem>\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <ListItem>\n              <ListItemAvatar>\n                <AvatarWrapper>\n                  <ApartmentIcon />\n                </AvatarWrapper>\n              </ListItemAvatar>\n              <ListItemText\n                primary={data.experience}\n                secondary=\"Yêu cầu kinh nghiệm\"\n              />\n            </ListItem>\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <ListItem>\n              <ListItemAvatar>\n                <AvatarWrapper>\n                  <CakeIcon />\n                </AvatarWrapper>\n              </ListItemAvatar>\n              <ListItemText\n                primary={`${data.minAge} - ${data.maxAge}`}\n                secondary=\"Độ tuổi\"\n              />\n            </ListItem>\n          </Grid>\n        </Grid>\n      </CommonInfo>\n      <Typography variant=\"h3\" fontSize={22} noWrap marginTop={2.5}>\n        Kĩ năng bắt buộc\n      </Typography>\n      <Typography marginTop={2.5}>\n        {data?.requiredSkills?.split(',')?.join(', ')}\n      </Typography>\n      <Typography variant=\"h3\" fontSize={22} noWrap marginTop={2.5}>\n        Mô tả công việc\n      </Typography>\n      <Box>\n        <TextParser content={data.jobDescription} />\n      </Box>\n      <Typography variant=\"h3\" fontSize={22} noWrap marginTop={2.5}>\n        Yêu cầu công việc\n      </Typography>\n      <Box>\n        <TextParser content={data.jobRequirements} />\n      </Box>\n      <Typography variant=\"h3\" fontSize={22} noWrap marginTop={2.5}>\n        Quyền lợi\n      </Typography>\n      <Box>\n        <TextParser content={data.benefits} />\n      </Box>\n      <Typography variant=\"h3\" fontSize={22} noWrap marginTop={2.5}>\n        Địa điểm làm việc\n      </Typography>\n      <Grid container alignItems={'center'} marginTop={2}>\n        <LocationOnIcon color=\"primary\" sx={{ marginRight: 1 }} />\n        <Box>{data.contactAddress}</Box>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default JobContent;\n","import CustomContainer from 'src/components/CustomContainer';\nimport JobContent from 'src/modules/jobs/components/JobContent';\nimport useJob from 'src/modules/jobs/hooks/useJob';\n\nfunction TabContent() {\n  const { itemDetail } = useJob();\n  return (\n    <CustomContainer sx={{ py: 3, mb: 2, minHeight: 1000 }}>\n      <JobContent data={itemDetail} />\n    </CustomContainer>\n  );\n}\n\nexport default TabContent;\n","import {\r\n  RoundOneCheck,\r\n  cvAnalysist,\r\n  extractCommonInfo,\r\n  extractSkill\r\n} from 'src/GPT/roles';\r\nimport { checkIsJSON, preProcessText } from './formatData';\r\nimport sendChatGPTRequest, { getEmbedding } from 'src/GPT/sendChatGPTRequest';\r\nimport { getFileByUrl } from 'src/common/firebaseService';\r\nimport pdfToText from 'react-pdftotext';\r\nimport { User } from 'src/modules/users/model';\r\nimport { AttachedDocument, OnlineProfile } from 'src/modules/jobProfile/model';\r\nimport { Application } from 'src/modules/application/model';\r\nimport { Job } from 'src/modules/jobs/model';\r\nimport { compareDegrees, compareExperience } from './compareEnum';\r\nimport dayjs from 'dayjs';\r\nimport { dot } from 'mathjs';\r\nimport { loadKeywords } from './keywords';\r\n\r\nexport const FAIL_SCORE = 0; // < 30\r\nexport const LOW_SCORE = 30; // 30 - 80\r\nexport const NORMAL_SCORE = 80; // 80 - 110\r\nexport const HIGH_SCORE = 110; // higher than 110\r\n\r\nexport const ratingStar = (score: number) => {\r\n  return score >= HIGH_SCORE\r\n    ? 3\r\n    : score >= NORMAL_SCORE\r\n    ? 2\r\n    : score >= LOW_SCORE\r\n    ? 1\r\n    : 0;\r\n};\r\nexport type ProfileTypeInfo = {\r\n  personal_information: User;\r\n  online_profile?: OnlineProfile;\r\n  attached_document?: AttachedDocument;\r\n  application: Partial<Omit<Application, 'applicationType'>> & {\r\n    id: number;\r\n    applicationType: string;\r\n    matchingScore: number;\r\n  };\r\n};\r\n\r\nexport type ProfileApplicationType = {\r\n  id: number;\r\n  employee_Profile: ProfileTypeInfo;\r\n  employer_Requirement: Partial<Job>;\r\n};\r\n\r\nconst fetchAndProcessCVData = async (dataToAnalyze, dataProcessor) => {\r\n  return Promise.all(\r\n    dataToAnalyze.map(async (data) => ({\r\n      ...data,\r\n      employee_Profile: await dataProcessor(data.employee_Profile)\r\n    }))\r\n  );\r\n};\r\n\r\nconst filterAndMapProfiles = (dataList) => {\r\n  return dataList\r\n    .filter((data) => data.employee_Profile)\r\n    .map(({ employee_Profile, employer_Requirement }) => ({\r\n      employee_Profile,\r\n      employer_Requirement\r\n    }));\r\n};\r\n\r\nconst preprocessText = (text) => {\r\n  if (!text) return null;\r\n\r\n  const preprocessedText = text\r\n    .replace(/[^\\w\\s,+()@.:\\/-]/g, '')\r\n    .replace(/\\s+/g, ' ');\r\n\r\n  return preprocessedText ? preprocessedText : null;\r\n};\r\n\r\nconst findMatchedProfile = (\r\n  profileId,\r\n  cvEnclosedProfileList,\r\n  attachProfileList\r\n) => {\r\n  return (\r\n    cvEnclosedProfileList.find(\r\n      (cvItem) => cvItem.employee_Profile.application.id === profileId\r\n    ) ||\r\n    attachProfileList.find(\r\n      (attachItem) => attachItem.employee_Profile.application.id === profileId\r\n    )\r\n  );\r\n};\r\n\r\nexport const preprocessJobData = (job) => ({\r\n  ...job,\r\n  jobDescription: preProcessText(job?.jobDescription),\r\n  jobRequirements: preProcessText(job?.jobRequirements),\r\n  benefits: preProcessText(job?.benefits)\r\n});\r\n\r\nexport const preprocessProfileData = (profile) => ({\r\n  ...profile,\r\n  personal_information: {\r\n    dob: profile?.employee?.user?.dob,\r\n    sex: profile?.employee?.user?.sex\r\n  }\r\n});\r\n\r\nexport const matchProfileById = (\r\n  analyzedProfile,\r\n  cvEnclosedProfileList,\r\n  attachProfileList\r\n) => {\r\n  return analyzedProfile.map((item) => {\r\n    const foundItem = findMatchedProfile(\r\n      item.id,\r\n      cvEnclosedProfileList,\r\n      attachProfileList\r\n    );\r\n    if (foundItem) return { ...item, ...foundItem };\r\n    return item;\r\n  });\r\n};\r\n\r\nexport const firstRoundForGeneralInfo = (job, profile) => {\r\n  // console.log('profile', profile);\r\n\r\n  const { personal_information, online_profile, attached_document } = profile;\r\n\r\n  const birthday = dayjs(personal_information?.dob, 'YYYY-MM-DD').isValid()\r\n    ? dayjs(personal_information?.dob, 'YYYY-MM-DD')\r\n    : dayjs(personal_information?.dob, 'DD-MM-YYYY');\r\n  const age = dayjs().year() - birthday.year();\r\n  if (\r\n    (job?.sex !== null &&\r\n      job?.sex !== 'Tất cả' &&\r\n      job?.sex !== personal_information?.sex) ||\r\n    job?.minAge > age ||\r\n    job?.maxAge < age\r\n  )\r\n    return -10;\r\n\r\n  if (online_profile && !isProfileQualified(online_profile, job)) return -10;\r\n\r\n  if (attached_document && !isProfileQualified(attached_document, job))\r\n    return -10;\r\n\r\n  return 30;\r\n};\r\n\r\nconst isProfileQualified = (profile, job) => {\r\n  const { profession, degree, experience } = profile;\r\n\r\n  const employeeProfessionList = profession\r\n    .split(',')\r\n    .map((item) => item.trim());\r\n  const jobProfessionList = job.profession\r\n    .split(',')\r\n    .map((item) => item.trim());\r\n  if (!employeeProfessionList.some((item) => jobProfessionList.includes(item)))\r\n    return false;\r\n\r\n  if (compareDegrees(degree, job?.degree) < 0) return false;\r\n\r\n  if (compareExperience(experience, job?.experience) < 0) return false;\r\n\r\n  return true;\r\n};\r\n\r\nconst handleRoundOne = async (\r\n  resetMatchingScoreList: ProfileApplicationType[],\r\n  setAnalyzedProfile: (data: ProfileApplicationType[]) => Promise<void>,\r\n  handleAnalyzeResult: (result: any[]) => Promise<void>,\r\n  handleGoToAnalyzeResult: (signal: boolean, resultData: any) => void\r\n) => {\r\n  console.log('Start round 1');\r\n  const attachedDocumentDataList = resetMatchingScoreList.filter(\r\n    (item) => item.employee_Profile.attached_document?.CV\r\n  );\r\n  const cvEnclosedDataList = resetMatchingScoreList.filter(\r\n    (item) =>\r\n      !item.employee_Profile?.online_profile &&\r\n      !item.employee_Profile.attached_document\r\n  );\r\n\r\n  const attachedDocumentList = await fetchAndProcessCVData(\r\n    attachedDocumentDataList,\r\n    readCVData\r\n  );\r\n  const cvEnclosedList = await fetchAndProcessCVData(\r\n    cvEnclosedDataList,\r\n    readEnclosedCVData\r\n  );\r\n\r\n  const attachProfileList = filterAndMapProfiles(attachedDocumentList);\r\n  const cvEnclosedProfileList = filterAndMapProfiles(cvEnclosedList);\r\n\r\n  const cvContentProfile = matchProfileById(\r\n    resetMatchingScoreList,\r\n    cvEnclosedProfileList,\r\n    attachProfileList\r\n  );\r\n\r\n  const extractPromise = async () => {\r\n    return Promise.all(\r\n      cvEnclosedProfileList.map(async (item) => {\r\n        const result = await sendChatGPTRequest(extractCommonInfo, [\r\n          item?.employee_Profile?.application?.CV\r\n        ]);\r\n\r\n        const validResult = result.filter((res) => checkIsJSON(res));\r\n\r\n        const extractedResult = validResult.map((res) => {\r\n          const jsonRes = JSON.parse(res);\r\n          return {\r\n            employee_Profile: jsonRes,\r\n            employer_Requirement: {\r\n              profession: item?.employer_Requirement?.profession,\r\n              degree: item?.employer_Requirement?.degree,\r\n              experience: item?.employer_Requirement?.experience\r\n            },\r\n            id: item?.employee_Profile?.application?.id\r\n          };\r\n        });\r\n        // result[0] + '\\n -id: ' + item?.employee_Profile?.application?.id;\r\n        return extractedResult;\r\n      })\r\n    );\r\n  };\r\n\r\n  const commonInfo = await extractPromise();\r\n\r\n  const messagesToSend = commonInfo.map((item) => {\r\n    return `\r\n    - application_id: ${item[0]?.id}\r\n    - Yêu cầu tuyển dụng: ngành nghề: [${item[0]?.employer_Requirement?.profession}]; trình độ: ${item[0]?.employer_Requirement?.degree}; kinh nghiệm: ${item[0]?.employer_Requirement?.experience};\r\n    - Thông tin hồ sơ xin việc: ngành nghề: ${item[0]?.employee_Profile?.profession}; trình độ ${item[0]?.employee_Profile?.degree}; kinh nghiệm ${item[0]?.employee_Profile?.experience}\r\n    `;\r\n  });\r\n\r\n  const response = await sendChatGPTRequest(\r\n    RoundOneCheck,\r\n    messagesToSend\r\n  ).catch(() => []);\r\n\r\n  const result = Array.isArray(response)\r\n    ? response?.filter((item) => checkIsJSON(item))\r\n    : [];\r\n  setAnalyzedProfile(cvContentProfile);\r\n  handleGoToAnalyzeResult(true, result);\r\n};\r\n\r\nconst handleRoundTwo = async (\r\n  passRoundProfiles,\r\n  handleAnalyzeResult: (result: any[]) => Promise<void>\r\n) => {\r\n  console.log('Start round 2');\r\n\r\n  const dataSendToGPT = passRoundProfiles.map((item) => {\r\n    let profile;\r\n    if (item?.employee_Profile?.online_profile) {\r\n      const onlineProfile = item?.employee_Profile?.online_profile;\r\n      profile = {\r\n        jobTitle: onlineProfile.jobTitle,\r\n        skills: onlineProfile.skills,\r\n        another_degree: (onlineProfile.another_degree || []).map(\r\n          (degree) => degree.Name\r\n        ),\r\n        education_informations: (\r\n          onlineProfile.education_informations || []\r\n        ).map((education) => education.degreeName),\r\n        work_experiences: (onlineProfile.work_experiences || []).map(\r\n          (experience) => ({\r\n            jobTitle: experience?.jobTitle,\r\n            jobDescription: experience?.jobDescription\r\n          })\r\n        )\r\n      };\r\n    } else if (item?.employee_Profile?.attached_document) {\r\n      const attachedDocument = item?.employee_Profile?.attached_document;\r\n      profile = {\r\n        skills: attachedDocument.skills,\r\n        CV: attachedDocument.CV\r\n      };\r\n    } else {\r\n      profile = item?.employee_Profile?.application.CV;\r\n    }\r\n    return {\r\n      employer_Requirement: {\r\n        requiredSkills: item.employer_Requirement.requiredSkills\r\n      },\r\n      employee_Profile: {\r\n        profile: profile,\r\n        application_id: item?.employee_Profile?.application.application_id\r\n      }\r\n    };\r\n  });\r\n\r\n  const skillList = await Promise.all(\r\n    dataSendToGPT?.map(async (item) => {\r\n      const extractRequiredSkillList = dataSendToGPT?.map(\r\n        (data) => data?.employee_Profile?.profile\r\n      );\r\n      const skillsList = await sendChatGPTRequest(\r\n        extractSkill,\r\n        extractRequiredSkillList,\r\n        null,\r\n        { '58': 5, '60': 5 }\r\n      );\r\n      return {\r\n        id: item.employee_Profile.application_id,\r\n        employee_Profile: loadKeywords(skillsList)?.split(',') || '',\r\n        employer_Requirement:\r\n          item.employer_Requirement.requiredSkills.split(',') || ''\r\n      };\r\n    })\r\n  );\r\n\r\n  const responses = (await getEmbedding(skillList)) || [];\r\n\r\n  const result = responses?.map((item) => {\r\n    const matchingSkills = item?.employer_Requirement?.filter((require) =>\r\n      item?.employee_Profile?.some((skills) => {\r\n        if (skills?.result?.length === require?.result?.length) {\r\n          return dot(skills.result, require.result) > 0.6;\r\n        } else {\r\n          console.error('Vectors must have the same number of dimensions');\r\n          return false;\r\n        }\r\n      })\r\n    );\r\n    const matchPercentage = matchingSkills\r\n      ? (100 / item?.employer_Requirement?.length) * matchingSkills.length\r\n      : 0;\r\n    return {\r\n      id: item.id,\r\n      result: matchPercentage\r\n    };\r\n  });\r\n\r\n  handleAnalyzeResult(result.map((res) => JSON.stringify(res)));\r\n};\r\n\r\nconst handleRoundThree = async (\r\n  passRoundProfiles,\r\n  handleAnalyzeResult: (result: any[]) => Promise<void>\r\n) => {\r\n  console.log('Start round 3');\r\n\r\n  try {\r\n    // Step 1: Retrieve keywords for profiles\r\n    const profilesWithKeywords = await Promise.all(\r\n      passRoundProfiles.map(async (item) => {\r\n        if (\r\n          item?.employee_Profile?.application?.applicationType !== 'Nộp nhanh'\r\n        ) {\r\n          return item;\r\n        } else {\r\n          const keywords = await loadKeywords(\r\n            await sendChatGPTRequest(cvAnalysist, [\r\n              item?.employee_Profile?.application?.CV\r\n            ])\r\n          );\r\n          return {\r\n            ...item,\r\n            employee_Profile: {\r\n              application: {\r\n                keywords\r\n              }\r\n            }\r\n          };\r\n        }\r\n      })\r\n    );\r\n\r\n    // console.log('Profiles with keywords:', profilesWithKeywords);\r\n\r\n    // Step 2: Calculate similarity scores between profiles and job requirements\r\n    const response = await getEmbedding(\r\n      profilesWithKeywords.map((item) => ({\r\n        id: item.id,\r\n        employee_Profile:\r\n          item?.employee_Profile?.application.keywords?.split(','),\r\n        employer_Requirement: item?.employer_Requirement?.keywords?.split(',')\r\n      }))\r\n    );\r\n\r\n    // Step 3: Analyze results and provide hints\r\n    const resultList = await Promise.all(\r\n      response?.map(async (item) => {\r\n        let score = item?.employee_Profile?.reduce((acc, profile) => {\r\n          const hasMatch = item?.employer_Requirement?.some((requirement) => {\r\n            const cosineSimilarity = dot(profile.result, requirement.result);\r\n            return cosineSimilarity > 0.6;\r\n          });\r\n          return hasMatch ? acc + 5 : acc;\r\n        }, 0);\r\n\r\n        const lackOfSkillsList =\r\n          item?.employer_Requirement\r\n            ?.filter(\r\n              (require) =>\r\n                !item?.employee_Profile?.some(\r\n                  (skills) => dot(skills.result, require.result) > 0.6\r\n                )\r\n            )\r\n            ?.map((require) => require.word) || [];\r\n\r\n        const hints =\r\n          lackOfSkillsList.length > 0\r\n            ? `Để tăng tỉ lệ đậu bạn có thể trang bị thêm kĩ năng: ${[\r\n                ...new Set(lackOfSkillsList)\r\n              ]\r\n                .slice(0, 4)\r\n                .join(', ')}`\r\n            : 'Hồ sơ của bạn đã đáp ứng yêu cầu của tin tuyển dụng này';\r\n\r\n        return {\r\n          id: item.id,\r\n          result: score,\r\n          hints: hints\r\n        };\r\n      })\r\n    );\r\n\r\n    // Step 4: Convert results to list and pass to the handler function\r\n    const list = resultList.map((result) => JSON.stringify(result));\r\n    await handleAnalyzeResult(list);\r\n  } catch (error) {\r\n    console.error('Error in round 3 analysis:', error);\r\n    // Handle or log the error appropriately\r\n  }\r\n};\r\n\r\nexport const fetchDataFromUrl = async (url, type) => {\r\n  try {\r\n    const filePath = await getFileByUrl(url);\r\n    const response = await fetch(filePath);\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch file');\r\n    }\r\n    const blob = await response.blob();\r\n    return pdfToText(blob);\r\n  } catch (error) {\r\n    console.error('Error fetching data:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const readCVData = async (employee_Profile) => {\r\n  if (employee_Profile?.attached_document) {\r\n    const text = await fetchDataFromUrl(\r\n      employee_Profile.attached_document.CV,\r\n      'attached_document'\r\n    );\r\n    const preprocessedText = preprocessText(text);\r\n\r\n    return preprocessedText\r\n      ? {\r\n          ...employee_Profile,\r\n          attached_document: {\r\n            ...employee_Profile.attached_document,\r\n            CV: preprocessedText\r\n          }\r\n        }\r\n      : null;\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const readEnclosedCVData = async (employee_Profile) => {\r\n  if (\r\n    employee_Profile?.application?.applicationType === 'Nộp nhanh' &&\r\n    employee_Profile?.application?.CV\r\n  ) {\r\n    const text = await fetchDataFromUrl(\r\n      employee_Profile.application.CV,\r\n      'enclosed_CV'\r\n    );\r\n    const preprocessedText = preprocessText(text);\r\n\r\n    if (preprocessedText) {\r\n      return {\r\n        ...employee_Profile,\r\n        application: { ...employee_Profile.application, CV: preprocessedText }\r\n      };\r\n    }\r\n\r\n    return employee_Profile;\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const review = async ({\r\n  round,\r\n  handleAnalyzeResult,\r\n  setIsAnalyzing,\r\n  setAnalyzedProfile,\r\n  passRoundProfiles,\r\n  resetMatchingScoreList,\r\n  handleGoToAnalyzeResult\r\n}: {\r\n  round: number;\r\n  handleAnalyzeResult: (result: any[]) => Promise<void>;\r\n  setIsAnalyzing: (data: boolean) => void;\r\n  setAnalyzedProfile?: (data: ProfileApplicationType[]) => Promise<void>;\r\n  passRoundProfiles?: ProfileApplicationType[];\r\n  resetMatchingScoreList?: ProfileApplicationType[];\r\n  handleGoToAnalyzeResult?: any;\r\n}) => {\r\n  setIsAnalyzing(true);\r\n\r\n  switch (round) {\r\n    case 1:\r\n      await handleRoundOne(\r\n        resetMatchingScoreList,\r\n        setAnalyzedProfile,\r\n        handleAnalyzeResult,\r\n        handleGoToAnalyzeResult\r\n      );\r\n      break;\r\n    case 2:\r\n      await handleRoundTwo(passRoundProfiles, handleAnalyzeResult);\r\n      break;\r\n    case 3:\r\n      await handleRoundThree(passRoundProfiles, handleAnalyzeResult);\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport const parseResponseJSONData = async (result: any[]) => {\r\n  return Promise.all(\r\n    result.map(async (data) => {\r\n      if (data?.indexOf('{') >= 0 && data?.lastIndexOf('}') >= 0)\r\n        return JSON.parse(\r\n          data.substring(data.indexOf('{'), data.lastIndexOf('}') + 1)\r\n        );\r\n    })\r\n  );\r\n};\r\n\r\nexport const getKeywords = (item) => {\r\n  return (\r\n    item?.keywords ||\r\n    item?.employee?.online_profile?.keywords ||\r\n    item?.employee?.attached_document?.keywords\r\n  );\r\n};\r\n\r\nexport const calculateMatchingScore = (\r\n  profile: any,\r\n  responses: any[],\r\n  roundOneFinished: boolean\r\n) => {\r\n  const foundItem = responses.find((res) => res?.id === profile?.id);\r\n  const profileMatchingScore =\r\n    profile?.employee_Profile?.application?.matchingScore;\r\n\r\n  if (foundItem?.result != null) {\r\n    return (profileMatchingScore || 0) + foundItem.result;\r\n  } else if (\r\n    !roundOneFinished &&\r\n    (profile?.employee_Profile?.online_profile ||\r\n      profile?.employee_Profile?.attached_document)\r\n  ) {\r\n    return firstRoundForGeneralInfo(\r\n      profile?.employer_Requirement,\r\n      profile?.employee_Profile\r\n    );\r\n  } else {\r\n    return profileMatchingScore;\r\n  }\r\n};\r\n","import { Degree, Experience } from 'src/constants/enum';\r\n\r\nexport function compareExperience(\r\n  employee: string,\r\n  requirement: string\r\n): number {\r\n  // Chuyển đổi chuỗi sang giá trị enum tương ứng\r\n  const employeeIndex = Object.values(Experience).indexOf(\r\n    employee as Experience\r\n  );\r\n  const requirementIndex = Object.values(Experience).indexOf(\r\n    requirement as Experience\r\n  );\r\n  // So sánh giá trị enum\r\n  if (employeeIndex > requirementIndex) {\r\n    return -1; // idx cang lon trinh do cang thap\r\n  } else return 1;\r\n}\r\n\r\nexport function compareDegrees(employee: string, requirement: string): number {\r\n  const employeeIndex = Object.values(Degree).indexOf(employee as Degree);\r\n  const requirementIndex = Object.values(Degree).indexOf(requirement as Degree);\r\n  // So sánh giá trị enum\r\n  if (employeeIndex > requirementIndex) {\r\n    return -1; // idx cang lon trinh do cang thap\r\n  } else return 1; // employee lớn hơn requirement\r\n}\r\n","export function rewriteUrl(url) {\n  const Alphabet = {\n    à: 'a',\n    á: 'a',\n    ả: 'a',\n    ã: 'a',\n    ạ: 'a',\n    ă: 'a',\n    ắ: 'a',\n    ằ: 'a',\n    ẳ: 'a',\n    ẵ: 'a',\n    ặ: 'a',\n    â: 'a',\n    ấ: 'a',\n    ầ: 'a',\n    ẩ: 'a',\n    ẫ: 'a',\n    ậ: 'a',\n    đ: 'd',\n    è: 'e',\n    é: 'e',\n    ẻ: 'e',\n    ẽ: 'e',\n    ẹ: 'e',\n    ê: 'e',\n    ế: 'e',\n    ề: 'e',\n    ể: 'e',\n    ễ: 'e',\n    ệ: 'e',\n    ì: 'i',\n    í: 'i',\n    ỉ: 'i',\n    ĩ: 'i',\n    ị: 'i',\n    ò: 'o',\n    ó: 'o',\n    ỏ: 'o',\n    õ: 'o',\n    ọ: 'o',\n    ô: 'o',\n    ố: 'o',\n    ồ: 'o',\n    ổ: 'o',\n    ỗ: 'o',\n    ộ: 'o',\n    ơ: 'o',\n    ớ: 'o',\n    ờ: 'o',\n    ở: 'o',\n    ỡ: 'o',\n    ợ: 'o',\n    ù: 'u',\n    ú: 'u',\n    ủ: 'u',\n    ũ: 'u',\n    ụ: 'u',\n    ư: 'u',\n    ứ: 'u',\n    ừ: 'u',\n    ử: 'u',\n    ữ: 'u',\n    ự: 'u',\n    ỳ: 'y',\n    ý: 'y',\n    ỷ: 'y',\n    ỹ: 'y',\n    ỵ: 'y',\n    À: 'A',\n    Á: 'A',\n    Ả: 'A',\n    Ã: 'A',\n    Ạ: 'A',\n    Ă: 'A',\n    Ắ: 'A',\n    Ằ: 'A',\n    Ẳ: 'A',\n    Ẵ: 'A',\n    Ặ: 'A',\n    Â: 'A',\n    Ấ: 'A',\n    Ầ: 'A',\n    Ẩ: 'A',\n    Ẫ: 'A',\n    Ậ: 'A',\n    Đ: 'D',\n    È: 'E',\n    É: 'E',\n    Ẻ: 'E',\n    Ẽ: 'E',\n    Ẹ: 'E',\n    Ê: 'E',\n    Ế: 'E',\n    Ề: 'E',\n    Ể: 'E',\n    Ễ: 'E',\n    Ệ: 'E',\n    Ì: 'I',\n    Í: 'I',\n    Ỉ: 'I',\n    Ĩ: 'I',\n    Ị: 'I',\n    Ò: 'O',\n    Ó: 'O',\n    Ỏ: 'O',\n    Õ: 'O',\n    Ọ: 'O',\n    Ô: 'O',\n    Ố: 'O',\n    Ồ: 'O',\n    Ổ: 'O',\n    Ỗ: 'O',\n    Ộ: 'O',\n    Ơ: 'O',\n    Ớ: 'O',\n    Ờ: 'O',\n    Ở: 'O',\n    Ỡ: 'O',\n    Ợ: 'O',\n    Ù: 'U',\n    Ú: 'U',\n    Ủ: 'U',\n    Ũ: 'U',\n    Ụ: 'U',\n    Ư: 'U',\n    Ứ: 'U',\n    Ừ: 'U',\n    Ử: 'U',\n    Ữ: 'U',\n    Ự: 'U',\n    Ỳ: 'Y',\n    Ý: 'Y',\n    Ỷ: 'Y',\n    Ỹ: 'Y',\n    Ỵ: 'Y'\n  };\n  const specialCharacter = [\n    '!',\n    '@',\n    '#',\n    '$',\n    '%',\n    '^',\n    '&',\n    '*',\n    '_',\n    '-',\n    '+',\n    '=',\n    '{',\n    '}',\n    '[',\n    ']',\n    '|',\n    '\\\\',\n    ':',\n    ';',\n    '\"',\n    \"'\",\n    '<',\n    '>',\n    ',',\n    '.',\n    '/',\n    '?',\n    ' '\n  ];\n\n  let chuoiKhongDau = '';\n  for (var i = 0; i < url?.length; i++) {\n    if (Alphabet[url[i]]) {\n      chuoiKhongDau += Alphabet[url[i]];\n    } else if (!specialCharacter.includes(url[i])) {\n      // Không thay đổi các khoảng trắng\n      chuoiKhongDau += url[i];\n    } else if (!chuoiKhongDau.endsWith('-')) {\n      chuoiKhongDau += '-';\n    }\n  }\n  return chuoiKhongDau;\n}\n"],"names":["FollowButton","props","isFollow","isFollowing","setIsFollow","useState","useEffect","_jsx","Box","onClick","id","prev","sx","display","alignItem","children","FavoriteIcon","color","FavoriteBorderIcon","linkStyle","textDecoration","handleMouseEnter","e","currentTarget","style","forwardRef","ref","to","ReactLink","onMouseEnter","onMouseLeave","handleMouseLeave","defaultColor","ApplicationService","BaseService","CandidateProfilesService","UpdateStatusService","CheckApplied","useQueryAttachedDocument","isEmployee","useApp","setProfile","useDocumentHook","isLoggedIn","Boolean","getAccessToken","data","isLoading","isSuccess","refetch","useQuery","AttachedDocumentService","get","retry","failureCount","error","response","status","refetchOnWindowFocus","enabled","attachedDocument","_jsxs","alignItems","width","mr","LinearProgress","variant","minWidth","Typography","concat","Math","round","value","VisuallyHiddenInput","styled","ButtonWrapper","Button","_ref","theme","backgroundColor","colors","primary","lighter","ChipWrapper","Chip","_ref2","borderRadius","label","onChange","setIsChecked","setUrl","file","setFile","fileUrl","setFileUrl","percent","setPercent","console","log","handleUpload","date","dayjs","Date","format","storageRef","storage","name","uploadTask","uploadBytesResumable","on","snapshot","bytesTransferred","totalBytes","err","getDownloadURL","then","url","ApplicationType","cv_enclosed","component","startIcon","CloudUploadIcon","type","async","removeFileByUrl","event","target","files","accept","marginTop","LinearPercent","onDelete","deleteIcon","DeleteIcon","useMutateApplyJob","toast","queryClient","useQueryClient","mutate","onSaveData","useMutation","create","onSuccess","res","invalidateQueries","success","massage","message","onError","renderAnalyzeResult","analyzeResult","hints","rating","ratingStar","_Fragment","textAlign","fontWeight","fontSize","Rating","max","readOnly","flexDirection","mt","AnayzeProfileButton","selectedProfile","job","profileType","setShowResult","showResult","setHintsMessage","user","start","setStart","isAnalyzing","setIsAnalyzing","analyzedProfile","setAnalyzedProfile","passRoundProfiles","setPassOneProfiles","roundOneFinished","setRoundOneFinished","roundTwoFinished","setRoundTwoFinished","roundThreeFinished","setRoundThreeFinished","setAnalyzeResult","goToAnalyzeResult","setGoToAnalyzeResult","signal","resultData","setHints","finishedAll","alertDialog","hideCancelButton","title","handleSetAnalyzedProfile","handleIsAnalyzing","handleGoToAnalyzeResult","handleAnalyzeResult","result","JSON","parse","matchingScore","LOW_SCORE","_analyzedProfile$empl","_analyzedProfile$empl2","employee_Profile","online_profile","attached_document","firstRoundForGeneralInfo","employer_Requirement","_profileData","_profileData$personal","_profileData2","_profileData2$persona","_data$employee_Profil","_data$employee_Profil2","profileData","personal_information","application","CV","applicationType","dob","sex","preprocessJobData","_data$employee_Profil3","_data$employee_Profil4","_data$employee_Profil5","_data$employee_Profil6","keywords","analyzeResultData","stringify","review","resetMatchingScoreList","length","gap","LoadingButton","loading","disabled","GradeIcon","Title","margin","SubTitle","alpha","black","buttonStyle","px","ModalApply","isMobile","useResponsive","open","onClose","position","company","postId","profile","useProfileHook","onlineProfile","isLoadingOnline","useQueryOnlineProfile","isLoadingDocument","online","setOnline","useOnlineProfile","document","setDocument","isChecked","missInfo","setMissInfo","setSelectedProfile","hintsMessage","control","handleSubmit","reset","formState","errors","useForm","defaultValues","handleClose","uploadProfile","SuspenseLoader","Dialog","maxWidth","fullWidth","fullScreen","DialogTitle","DialogContent","Grid","container","spacing","item","xs","md","lg","AddIcon","bgcolor","FormControl","UploadButton","mb","fontStyle","element","TextField","required","pattern","DialogActions","justifyContent","sm","flexWrap","p","columnGap","submitProfile","v4","params","getById","keepPreviousData","isApplied","AvatarWrapper","Avatar","height","objectFit","LabelText","_ref3","ValueText","_ref4","marginLeft","_ref5","_data$employer","_data$employer2","_data$employer3","_data$employer4","_data$employer5","isEmployer","isAdmin","openFormApply","setOpenFormApply","navigate","useNavigate","useQueryCheckApplied","CustomContainer","pb","minHeight","src","employer","logo","defaultImage","companyAvatar","Link","rewriteUrl","companyName","btoa","userId","toString","jobTitle","PaidIcon","minSalary","maxSalary","wrap","overflow","DateRangeIcon","applicationDeadline","AccessibilityIcon","minAge","maxAge","LocationOnIcon","workAddress","handleOpenFormApply","state","from","window","location","pathname","search","SendIcon","FollowJobButton","onCloseFormApply","CompanyData","companyLocation","careerField","description","CompanyInfoTab","_CompanyData","companyPage","BusinessIcon","lineHeight","alignContent","map","index","InfoGrid","useMutateFollowJobById","onFollowJobById","FollowJobService","jobPosting","followJobsList","useFollowJobList","jobList","useJobList","useQueryFollowJobs","jobIds","join","includes","handleToggleFollow","useAppSelector","selectFollowJobList","dispatch","useAppDispatch","setFollowJobList","setFollowJobListAction","resetFollowJobList","useJob","itemDetail","selectJob","setItemDetail","setItemDetailAction","resetItemDetail","resetItemDetailAction","_data$data","_data$data2","_data$data2$meta","_res$data","_res$data$meta","meta","itemCount","_res$data2","_res$data2$items","idList","items","jobFollow","totalPages","useMutateCompany","mutationFunction","SetCompany","UserForm","_GENDER$find","close","onSaveUser","useMutateUserData","toInputDateString","GENDER","find","isMarried","multiline","DatePicker","maxDate","SelectInput","options","ISMARRIED_OPTION","ButtonGroup","formattedDob","toOutputDateString","newData","setUser","handleCancel","CompanyForm","onSaveCompany","Autocomplete","size","freeSolo","CAREER_FIELDS","autoComplete","autoSelect","autoHighlight","multiple","defaultValue","maxRows","minRows","InputLabel","fontFamily","typography","InputData","more","setMore","borderTop","borderColor","textOverflow","WebkitLineClamp","WebkitBoxOrient","mx","InfoField","editIcon","openForm","setOpen","myForm","Container","paddingX","EditButton","handleEdit","Divider","CommonInfo","padding","_data$requiredSkills","_data$requiredSkills$","noWrap","marginBottom","my","ListItem","ListItemAvatar","ListItemText","createAt","secondary","EventAvailableIcon","trialPeriod","HowToRegIcon","positionLevel","PeopleIcon","numberOfVacancies","ArticleIcon","employmentType","WcIcon","GppGoodIcon","degree","ApartmentIcon","experience","CakeIcon","requiredSkills","split","TextParser","content","jobDescription","jobRequirements","benefits","marginRight","contactAddress","py","JobContent","score","fetchAndProcessCVData","dataToAnalyze","dataProcessor","Promise","all","filterAndMapProfiles","dataList","filter","preprocessText","text","preprocessedText","replace","preProcessText","birthday","isValid","age","year","isProfileQualified","profession","employeeProfessionList","trim","jobProfessionList","some","employee","requirement","Object","values","Degree","indexOf","Experience","compareExperience","fetchDataFromUrl","filePath","getFileByUrl","fetch","ok","Error","blob","pdfToText","readCVData","readEnclosedCVData","_employee_Profile$app","_employee_Profile$app2","attachedDocumentDataList","_item$employee_Profil","cvEnclosedDataList","_item$employee_Profil2","attachedDocumentList","cvEnclosedList","attachProfileList","cvEnclosedProfileList","cvContentProfile","matchProfileById","foundItem","findMatchedProfile","profileId","cvItem","attachItem","messagesToSend","_item$employee_Profil3","_item$employee_Profil4","sendChatGPTRequest","extractCommonInfo","checkIsJSON","_item$employer_Requir","_item$employer_Requir2","_item$employer_Requir3","_item$employee_Profil5","_item$employee_Profil6","extractPromise","_item$","_item$2","_item$2$employer_Requ","_item$3","_item$3$employer_Requ","_item$4","_item$4$employer_Requ","_item$5","_item$5$employee_Prof","_item$6","_item$6$employee_Prof","_item$7","_item$7$employee_Prof","RoundOneCheck","catch","Array","isArray","handleRoundOne","dataSendToGPT","_item$employee_Profil7","_item$employee_Profil9","_item$employee_Profil12","_item$employee_Profil8","skills","another_degree","Name","education_informations","education","degreeName","work_experiences","_item$employee_Profil10","_item$employee_Profil11","application_id","skillList","_loadKeywords","extractRequiredSkillList","skillsList","extractSkill","loadKeywords","responses","getEmbedding","_item$employer_Requir4","_item$employer_Requir5","matchingSkills","require","_item$employee_Profil13","_skills$result","_require$result","dot","matchPercentage","handleRoundTwo","profilesWithKeywords","_item$employee_Profil14","_item$employee_Profil15","_item$employee_Profil16","_item$employee_Profil17","cvAnalysist","_item$employee_Profil18","_item$employee_Profil19","_item$employer_Requir6","_item$employer_Requir7","list","_item$employee_Profil20","_item$employer_Requir9","_item$employer_Requir10","reduce","acc","_item$employer_Requir8","lackOfSkillsList","_item$employee_Profil21","word","Set","slice","handleRoundThree","parseResponseJSONData","lastIndexOf","substring","getKeywords","_item$employee","_item$employee$online","_item$employee2","_item$employee2$attac","calculateMatchingScore","_profile$employee_Pro","_profile$employee_Pro2","_profile$employee_Pro3","_profile$employee_Pro4","profileMatchingScore","Alphabet","à","á","ả","ã","ạ","ă","ắ","ằ","ẳ","ẵ","ặ","â","ấ","ầ","ẩ","ẫ","ậ","đ","è","é","ẻ","ẽ","ẹ","ê","ế","ề","ể","ễ","ệ","ì","í","ỉ","ĩ","ị","ò","ó","ỏ","õ","ọ","ô","ố","ồ","ổ","ỗ","ộ","ơ","ớ","ờ","ở","ỡ","ợ","ù","ú","ủ","ũ","ụ","ư","ứ","ừ","ử","ữ","ự","ỳ","ý","ỷ","ỹ","ỵ","À","Á","Ả","Ã","Ạ","Ă","Ắ","Ằ","Ẳ","Ẵ","Ặ","Â","Ấ","Ầ","Ẩ","Ẫ","Ậ","Đ","È","É","Ẻ","Ẽ","Ẹ","Ê","Ế","Ề","Ể","Ễ","Ệ","Ì","Í","Ỉ","Ĩ","Ị","Ò","Ó","Ỏ","Õ","Ọ","Ô","Ố","Ồ","Ổ","Ỗ","Ộ","Ơ","Ớ","Ờ","Ở","Ỡ","Ợ","Ù","Ú","Ủ","Ũ","Ụ","Ư","Ứ","Ừ","Ử","Ữ","Ự","Ỳ","Ý","Ỷ","Ỹ","Ỵ","specialCharacter","chuoiKhongDau","i","endsWith"],"sourceRoot":""}