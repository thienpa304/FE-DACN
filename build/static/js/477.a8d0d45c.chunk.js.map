{"version":3,"file":"static/js/477.a8d0d45c.chunk.js","mappings":"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","sources":["modules/admin/hooks/useQueryPostingsReport.ts","modules/admin/hooks/useQueryCandidateStatistics.ts","pages/admin/StatisticsAndReports.tsx"],"sourcesContent":["import { AxiosError } from 'axios';\nimport { useQuery } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { AdminJobPostingsReportService } from '../adminService';\n\nconst useQueryJobPostingsReport = () => {\n  const { data, isLoading } = useQuery<\n    ResponseData<any[]>,\n    AxiosError<ResponseData<any[]>>\n  >(['get-job-postings-report'], () => AdminJobPostingsReportService.get({}), {\n    keepPreviousData: true,\n    retry: 1,\n    refetchOnWindowFocus: false\n  });\n\n  return {\n    jobPostingData: data?.data?.map((item) => ({ ...item })) || [],\n    isLoading\n  };\n};\n\nexport default useQueryJobPostingsReport;\n","import { AxiosError } from 'axios';\nimport { useQuery } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { AdminCandidateStatisticsService } from '../adminService';\n\nconst useQueryCandidateStatistics = () => {\n  const { data, isLoading } = useQuery<\n    ResponseData<any[]>,\n    AxiosError<ResponseData<any[]>>\n  >(\n    ['get-candidate-statistics'],\n    () => AdminCandidateStatisticsService.get({}),\n    {\n      keepPreviousData: true,\n      retry: 1,\n      refetchOnWindowFocus: false\n    }\n  );\n\n  return {\n    candidateStatistics: data?.data?.map((item) => ({ ...item })) || [],\n    isLoading\n  };\n};\n\nexport default useQueryCandidateStatistics;\n","import React from 'react';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Container,\n  Divider,\n  Grid,\n  Typography\n} from '@mui/material';\nimport {\n  BarChart,\n  Bar,\n  PieChart, // Corrected component name\n  Pie, // Corrected component name\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  Cell\n} from 'recharts';\nimport useQueryJobPostingsReport from 'src/modules/admin/hooks/useQueryPostingsReport';\nimport useQueryCandidateStatistics from 'src/modules/admin/hooks/useQueryCandidateStatistics';\n\nconst StatisticsAndReports = () => {\n  // Example Data\n  // const jobPostingData = [\n  //   { name: 'January', value: 65 },\n  //   { name: 'February', value: 59 },\n  //   { name: 'March', value: 80 },\n  //   { name: 'April', value: 81 },\n  //   { name: 'May', value: 56 }\n  // ];\n\n  const applicantData = [\n    { name: 'Engineer', value: 12 },\n    { name: 'Designer', value: 19 },\n    { name: 'Manager', value: 3 },\n    { name: 'Analyst', value: 5 },\n    { name: 'Developer', value: 2 }\n  ];\n\n  const recruitmentStatusData = [\n    { name: 'Open', value: 10 },\n    { name: 'Closed', value: 5 },\n    { name: 'In Progress', value: 8 }\n  ];\n\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#814289'];\n\n  const { jobPostingData } = useQueryJobPostingsReport();\n  const { candidateStatistics } = useQueryCandidateStatistics();\n\n  return (\n    <Container maxWidth=\"xl\">\n      <Grid\n        container\n        direction=\"row\"\n        justifyContent=\"center\"\n        alignItems=\"stretch\"\n        spacing={3}\n        marginTop={0}\n      >\n        <Grid item xs={12}>\n          <Card>\n            <CardHeader title=\"Thống kê và Báo cáo\" />\n            <Divider />\n            <CardContent>\n              <Grid container>\n                <Grid item xs={8}>\n                  {/* Bar Chart - Job Postings */}\n                  <Typography variant=\"h6\">\n                    Số Lượng Công Việc Đăng Tuyển\n                  </Typography>\n                  <BarChart\n                    width={500}\n                    height={300}\n                    data={jobPostingData}\n                    margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n                  >\n                    <XAxis dataKey=\"name\" />\n                    {/* <YAxis type=\"number\" domain={[0, 20]}/> */}\n                    <YAxis type=\"number\" domain={[0, 'dataMax + 5']} />\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <Tooltip />\n                    <Legend />\n                    <Bar dataKey=\"value\" fill=\"#8884d8\" />\n                  </BarChart>\n                </Grid>\n                <Grid item xs={4}>\n                  {/* Pie Chart - Applicant Statistics */}\n                  <Typography variant=\"h6\">Thống Kê Ứng Viên</Typography>\n                  <PieChart width={300} height={300}>\n                    {' '}\n                    {/* Corrected component name */}\n                    <Tooltip />\n                    <Legend />\n                    <Pie\n                      data={candidateStatistics}\n                      dataKey=\"value\"\n                      nameKey=\"name\"\n                      outerRadius={80}\n                      fill=\"#8884d8\"\n                    >\n                      {/* </Pie> />{' '} */}\n                      {applicantData.map((entry, index) => (\n                        <Cell\n                          key={`cell-${index}`}\n                          fill={COLORS[index % COLORS.length]}\n                        />\n                      ))}\n                    </Pie>\n                    {/* Corrected component name */}\n                  </PieChart>\n                </Grid>\n              </Grid>\n              {/* Line Chart - Recruitment Status */}\n              <Typography variant=\"h6\">Tình Trạng Tuyển Dụng</Typography>\n              <LineChart\n                width={600}\n                height={300}\n                data={recruitmentStatusData}\n                margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n              >\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <Tooltip />\n                <Legend />\n                <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" />\n              </LineChart>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default StatisticsAndReports;\n"],"names":["useQueryJobPostingsReport","_data$data","data","isLoading","useQuery","AdminJobPostingsReportService","get","keepPreviousData","retry","refetchOnWindowFocus","jobPostingData","map","item","useQueryCandidateStatistics","AdminCandidateStatisticsService","candidateStatistics","StatisticsAndReports","COLORS","_jsx","Container","maxWidth","children","Grid","container","direction","justifyContent","alignItems","spacing","marginTop","xs","_jsxs","Card","CardHeader","title","Divider","CardContent","Typography","variant","BarChart","width","height","margin","top","right","left","bottom","XAxis","dataKey","YAxis","type","domain","CartesianGrid","strokeDasharray","Tooltip","Legend","Bar","fill","PieChart","Pie","nameKey","outerRadius","name","value","entry","index","Cell","length","concat","LineChart","Line","stroke"],"sourceRoot":""}