{"version":3,"file":"static/js/9706.af05b645.chunk.js","mappings":"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","sources":["components/LinkText/index.tsx","components/Typography/index.tsx","modules/jobs/hooks/useQueryJobByOwner.ts","modules/getEmployee/hook/useQueryEmployeeByKeywords.ts","modules/getEmployee/components/RecommendProfile.tsx","pages/recommend-profiles/index.tsx","modules/jobs/hooks/useDeleteJobById.ts","pages/recruitment-list/TablePost.tsx","../node_modules/@mui/icons-material/DeleteOutline.js","../node_modules/@mui/icons-material/RemoveRedEye.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { styled } from '@mui/material/styles';\n\nconst LinkWrapper = styled(Link)(({ theme }) => ({\n  textDecoration: 'none',\n  color: theme.colors.info.dark,\n  '&:active': {\n    color: theme.colors.primary.light\n  },\n  '&:visited': {\n    color: theme.colors.info.dark\n  }\n}));\nconst LinkText = (props) => {\n  return <LinkWrapper {...props} />;\n};\n\nexport default LinkText;\n","import { styled } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\n\nexport const TypographyEllipsis = styled(Typography)(({ theme }) => ({\n  whiteSpace: 'nowrap',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis'\n}));\n","import { AxiosError } from 'axios';\nimport { useQuery } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { JobService } from '../jobService';\nimport { Job } from '../model';\nimport { useApp } from 'src/modules/app/hooks';\n\ntype PropsType = {\n  totalResults: number;\n  result: Job[];\n};\nconst useQueryJobByOwner = (params?) => {\n  const { isEmployer } = useApp();\n  const { data, isLoading } = useQuery<\n    ResponseData<PropsType>,\n    AxiosError<ResponseData<PropsType>>\n  >(\n    ['jobOwner-getList', params?.status, params?.page],\n    () => JobService.get({ params }),\n    {\n      retry: 1,\n      refetchOnWindowFocus: false,\n      keepPreviousData: true,\n      enabled: isEmployer\n    }\n  );\n\n  return {\n    jobs:\n      data?.data?.result?.map((item) => ({ ...item, id: item.postId })) || [],\n    totalResults: data?.data?.totalResults || 0,\n    isLoading\n  };\n};\n\nexport default useQueryJobByOwner;\n","import { AxiosError } from 'axios';\nimport { useQuery } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { Employee, User } from 'src/modules/users/model';\nimport { RecommendEmployeeService } from '../getEmployeeService';\nimport { useApp } from 'src/modules/app/hooks';\nimport { Job } from 'src/modules/jobs/model';\nimport { ProfileShowType } from '../model';\nimport { TotalResults } from 'src/modules/jobs/jobService';\n\ntype PropsType = {\n  totalCount: number;\n  result: ProfileShowType[];\n};\n\nconst useQueryEmployeeByKeywords = (params?) => {\n  const { isEmployer } = useApp();\n  const { data, isLoading, refetch } = useQuery<\n    ResponseData<PropsType>,\n    AxiosError<ResponseData<PropsType>>\n  >(\n    [\n      'get-ProfileByKeywords',\n      params?.keywords,\n      params?.page,\n      params?.profession,\n      params?.experience,\n      params?.degree,\n      params?.employmentType,\n      params?.sex,\n      params?.jobTitle,\n      params?.currentPosition,\n      params?.positionLevel\n    ],\n    () => {\n      for (const key in params) {\n        if (params[key] === 'Tất cả' || params[key] === undefined) {\n          params[key] = '';\n        }\n      }\n      const item = { ...params, currentPosition: params?.positionLevel };\n      delete item.positionLevel;\n\n      return RecommendEmployeeService.get({ params: item });\n    },\n    {\n      retry: 1,\n      refetchOnWindowFocus: false,\n      enabled: isEmployer && Boolean(params?.keywords)\n    }\n  );\n\n  return {\n    profile: data?.data?.result || [],\n    totalResults: data?.data?.totalCount,\n    isLoading,\n    refetch\n  };\n};\n\nexport default useQueryEmployeeByKeywords;\n","import {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  CircularProgress,\n  Container,\n  Divider,\n  Grid,\n  IconButton,\n  Typography\n} from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport ProfileCard from './ProfileCard';\nimport SuspenseLoader from 'src/components/SuspenseLoader';\nimport useQueryJobByOwner from 'src/modules/jobs/hooks/useQueryJobByOwner';\nimport TableData from 'src/components/TableData';\nimport { GridColDef } from '@mui/x-data-grid';\nimport { renderJobTitle } from 'src/pages/recruitment-list/TablePost';\nimport useQueryEmployeeByKeywords from '../hook/useQueryEmployeeByKeywords';\nimport Pagination from 'src/components/Pagination';\nimport JobFilter from 'src/modules/jobs/components/JobFilter';\n\nexport default function RecommendProfile() {\n  const jobPageSize = 9;\n  const profilePageSize = 8;\n  const [jobCurrentPage, setJobCurrentPage] = useState(1);\n  const [profileCurrentPage, setProfleCurrentPage] = useState(1);\n  const [keywords, setKeywords] = useState('');\n  const [showProfile, setShowProfile] = useState([]);\n  const [jobInfo, setJobInfo] = useState(null);\n  const [filter, setFilter] = useState(null);\n  const {\n    jobs,\n    totalResults: totalJobResults,\n    isLoading\n  } = useQueryJobByOwner({\n    page: jobCurrentPage,\n    num: jobPageSize,\n    status: 'Đã duyệt'\n  });\n\n  const {\n    profile,\n    totalResults: totalProfileResults,\n    isLoading: isLoadingProfile\n  } = useQueryEmployeeByKeywords({\n    page: profileCurrentPage,\n    num: profilePageSize,\n    keywords: keywords,\n    ...jobInfo,\n    ...filter\n  });\n\n  const totalJobPages = Math.ceil(totalJobResults / jobPageSize) || 1;\n  const totalProfilePages =\n    Math.ceil(totalProfileResults / profilePageSize) || 1;\n\n  const addInfo = (job) => {\n    setJobInfo({\n      profession: job?.profession\n      // degree: job?.degree,\n      // experience: job?.experience,\n      // sex: job?.sex,\n      // minAge: job?.minAge,\n      // maxAge: job?.maxAge\n    });\n  };\n\n  const handleFilter = (data) => {\n    setFilter((prev) => ({\n      ...prev,\n      ...data\n    }));\n  };\n\n  const renderAtion = (data) => {\n    return (\n      <Button\n        onClick={() => {\n          setKeywords(data?.row?.keywords);\n          addInfo(data?.row);\n        }}\n        variant=\"contained\"\n      >\n        Bắt đầu\n      </Button>\n    );\n  };\n  const columns: GridColDef[] = [\n    {\n      field: 'jobTitle',\n      headerName: 'Tên tin đăng',\n      minWidth: 550,\n      headerAlign: 'center',\n      renderCell: renderJobTitle\n    },\n    {\n      field: 'keywords',\n      headerName: 'Từ khóa',\n      minWidth: 400,\n      headerAlign: 'center'\n      // renderCell: renderJobTitle\n    },\n    {\n      field: 'action',\n      headerName: 'Tìm hồ sơ',\n      minWidth: 150,\n      headerAlign: 'center',\n      align: 'center',\n      renderCell: renderAtion\n    }\n  ];\n\n  useEffect(() => {\n    if (!profile) return;\n    const testProfiles = profile?.map((item) => {\n      return {\n        ...item,\n        personal_information: {\n          sex: item?.employee?.user?.sex,\n          dob: item?.employee?.user?.dob\n        },\n        online_profile: {\n          profession: item?.profession,\n          degree: item?.degree,\n          experience: item?.experience\n        }\n      };\n    });\n\n    // const passRoundProfile = testProfiles.filter(\n    //   (item) => firstRoundForGeneralInfo(jobInfo, item) >= 30\n    // );\n    setShowProfile(profile);\n    const section = document.getElementById('recommend-profile');\n    section?.scrollIntoView({ behavior: 'smooth' });\n  }, [JSON.stringify(profile)]);\n\n  if (isLoading) return <SuspenseLoader />;\n\n  return (\n    <Container maxWidth=\"xl\" sx={{ p: 3 }}>\n      <Typography fontSize={22} fontWeight={700}>\n        Gợi ý hồ sơ tiềm năng\n      </Typography>\n      <Grid\n        container\n        direction=\"row\"\n        justifyContent=\"center\"\n        alignItems=\"stretch\"\n        spacing={3}\n        marginTop={0}\n      >\n        <Grid item xs={12}>\n          <Card>\n            <CardHeader title=\"Tìm kiếm theo tin tuyển dụng\" />\n            <Divider />\n            <CardContent>\n              <TableData\n                rows={jobs}\n                columns={columns}\n                initialState={{\n                  pagination: {\n                    paginationModel: {\n                      pageSize: jobPageSize\n                    }\n                  }\n                }}\n                sx={{\n                  minHeight: '74vh',\n                  justifySelf: 'center',\n                  mx: 'auto'\n                }}\n                hideFooter\n              />\n              <Pagination\n                currentPage={jobCurrentPage}\n                totalPages={totalJobPages}\n                handlePageChange={setJobCurrentPage}\n              />\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n\n      <Typography id=\"recommend-profile\" fontWeight={700} fontSize={22} my={3}>\n        Hồ sơ gợi ý\n      </Typography>\n      <JobFilter handleFilter={handleFilter} />\n      <Grid container xs={12} sx={{ width: '100%' }}>\n        <Grid item xs={12}>\n          <Container\n            sx={{\n              mb: 3,\n              p: 3,\n              bgcolor: '#fbfeff',\n              minHeight: '72vh'\n            }}\n          >\n            {isLoadingProfile && <CircularProgress />}\n            <Grid container spacing={1} mb={2}>\n              {showProfile?.map((item, index) => (\n                <Grid key={index} item xs={12} sm={6} md={3}>\n                  <Box sx={{ display: 'flex', justifyContent: 'center' }}>\n                    <ProfileCard profile={item} />\n                  </Box>\n                </Grid>\n              ))}\n            </Grid>\n\n            {!Boolean(showProfile?.length) ? (\n              <Box\n                sx={{\n                  display: 'flex',\n                  justifyContent: 'center'\n                }}\n              >\n                <Typography\n                  mt={10}\n                  textAlign=\"center\"\n                  fontStyle=\"italic\"\n                  color=\"#9999\"\n                >\n                  Không tìm được hồ sơ phù hợp\n                </Typography>\n              </Box>\n            ) : (\n              <Pagination\n                currentPage={profileCurrentPage}\n                totalPages={totalProfilePages}\n                handlePageChange={setProfleCurrentPage}\n              />\n            )}\n          </Container>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n","import React from 'react';\nimport FindProfiles from 'src/modules/getEmployee/components/FindProfiles';\nimport RecommendProfile from 'src/modules/getEmployee/components/RecommendProfile';\n\nexport default function index() {\n  return <RecommendProfile />;\n}\n","import { AxiosError } from 'axios';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { useApp } from 'src/modules/app/hooks';\nimport { JobService } from '../jobService';\nimport { Job } from '../model';\n\nconst useDeleteJobById = () => {\n  const queryClient = useQueryClient();\n  const { toast } = useApp();\n  const { mutate: onDeleteById, isLoading } = useMutation<\n    ResponseData<Job>,\n    AxiosError<ResponseData<Job>>,\n    [id: string]\n  >(([id]) => JobService.remove(id), {\n    onSuccess: (res) => {\n      if (res.status === 200) {\n        queryClient.invalidateQueries(['jobOwner-getList']);\n        toast.success({ massage: res.message });\n      } else {\n        toast.error({ massage: res.message });\n      }\n    },\n    onError: (error) => {\n      toast.error({ massage: error.response.data.message });\n    }\n  });\n\n  return {\n    onDeleteById,\n    isLoading\n  };\n};\n\nexport default useDeleteJobById;\n","import Box from '@mui/material/Box';\nimport { GridColDef } from '@mui/x-data-grid';\nimport LinkText from 'src/components/LinkText';\nimport TableData from 'src/components/TableData';\nimport RemoveRedEyeIcon from '@mui/icons-material/RemoveRedEye';\nimport { Chip, Grid } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport Tooltip from '@mui/material/Tooltip';\nimport { useNavigate } from 'react-router';\nimport { APPROVAL_STATUS } from 'src/constants';\nimport { TypographyEllipsis } from 'src/components/Typography';\nimport dayjs from 'dayjs';\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\nimport ModeEditOutlineIcon from '@mui/icons-material/ModeEditOutline';\nimport useDeleteJobById from 'src/modules/jobs/hooks/useDeleteJobById';\nimport alertDialog from 'src/utils/alertDialog';\nimport { rewriteUrl } from 'src/utils/rewriteUrl';\n\nexport const renderJobTitle = (data) => {\n  const jobTitle = rewriteUrl(data?.row?.jobTitle);\n  const navigate = useNavigate();\n  const handleLinkToDetail = () => {\n    navigate(`/job/${jobTitle}?id=${btoa(data?.row?.postId)}`, {\n      state: { postId: data?.row?.postId }\n    });\n  };\n  return (\n    <>\n      <Grid container alignItems={'center'}>\n        <Grid item xs={1}>\n          <Tooltip title=\"Xem trực tiếp\">\n            <IconButton size=\"small\" onClick={handleLinkToDetail}>\n              <RemoveRedEyeIcon sx={{ width: 18, height: 18, color: 'gray' }} />\n            </IconButton>\n          </Tooltip>\n        </Grid>\n        <Grid item xs={11}>\n          <LinkText\n            to={`/employer/recruitment/list/${rewriteUrl(data?.row?.jobTitle)}`}\n            state={{ postId: data?.row?.postId }}\n          >\n            <TypographyEllipsis> {data.value}</TypographyEllipsis>\n          </LinkText>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nconst renderStatus = (data) => {\n  const color = APPROVAL_STATUS.find((item) => item.label === data.value).color;\n  return (\n    <Chip label={data.value} size=\"small\" color={color} variant=\"outlined\" />\n  );\n};\n\nconst rederDate = (data) => {\n  const date = dayjs(data?.value).format('DD/MM/YYYY');\n  return <>{date}</>;\n};\n\nconst renderAtion = (data) => {\n  const { onDeleteById } = useDeleteJobById();\n\n  const handleConfirmDelete = (id) => {\n    onDeleteById([id]);\n  };\n\n  const handleDelete = (data) => {\n    alertDialog({\n      selectedId: data.id,\n      handleConfirm: handleConfirmDelete\n    });\n  };\n\n  return (\n    <>\n      <IconButton onClick={() => handleDelete(data)}>\n        <DeleteOutlineIcon />\n      </IconButton>\n    </>\n  );\n};\n\nconst columns: GridColDef[] = [\n  {\n    field: 'jobTitle',\n    headerName: 'Tên tin đăng',\n    minWidth: 400,\n    maxWidth: 450,\n    headerAlign: 'center',\n    renderCell: renderJobTitle\n  },\n  {\n    field: 'createAt',\n    headerName: 'Ngày đăng tin',\n    minWidth: 150,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: rederDate,\n    sortable: true\n  },\n  {\n    field: 'applicationDeadline',\n    headerName: 'Hạn nộp hồ sơ',\n    minWidth: 150,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: rederDate,\n    sortable: true\n  },\n  {\n    field: 'submissionCount',\n    headerName: 'Lượt nộp',\n    minWidth: 100,\n    headerAlign: 'center',\n    align: 'center',\n    sortable: true\n  },\n  {\n    field: 'view',\n    headerName: 'Lượt xem',\n    minWidth: 100,\n    headerAlign: 'center',\n    align: 'center',\n    sortable: true\n  },\n  {\n    field: 'status',\n    headerName: 'Trạng thái',\n    minWidth: 120,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: renderStatus,\n    sortable: true\n  },\n  {\n    field: 'action',\n    headerName: 'Xóa tin đăng',\n    minWidth: 120,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: renderAtion\n  }\n];\n\nexport default function TablePost({ data, pageSize }) {\n  return (\n    <TableData\n      rows={data}\n      columns={columns}\n      initialState={{\n        pagination: {\n          paginationModel: {\n            pageSize: pageSize\n          }\n        }\n      }}\n      hideFooter\n      sx={{ height: '74vh', width: '100%' }}\n    />\n  );\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9zm7.5-5-1-1h-5l-1 1H5v2h14V4z\"\n}), 'DeleteOutline');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'RemoveRedEye');\n\nexports.default = _default;"],"names":["LinkWrapper","styled","Link","_ref","theme","textDecoration","color","colors","info","dark","primary","light","props","_jsx","TypographyEllipsis","Typography","whiteSpace","overflow","textOverflow","params","_data$data","_data$data$result","_data$data2","isEmployer","useApp","data","isLoading","useQuery","status","page","JobService","get","retry","refetchOnWindowFocus","keepPreviousData","enabled","jobs","result","map","item","id","postId","totalResults","refetch","keywords","profession","experience","degree","employmentType","sex","jobTitle","currentPosition","positionLevel","key","undefined","RecommendEmployeeService","Boolean","profile","totalCount","RecommendProfile","jobCurrentPage","setJobCurrentPage","useState","profileCurrentPage","setProfleCurrentPage","setKeywords","showProfile","setShowProfile","jobInfo","setJobInfo","filter","setFilter","totalJobResults","useQueryJobByOwner","num","totalProfileResults","isLoadingProfile","useQueryEmployeeByKeywords","totalJobPages","Math","ceil","totalProfilePages","columns","field","headerName","minWidth","headerAlign","renderCell","renderJobTitle","align","Button","onClick","_data$row","job","row","variant","children","useEffect","_item$employee","_item$employee$user","_item$employee2","_item$employee2$user","personal_information","employee","user","dob","online_profile","section","document","getElementById","scrollIntoView","behavior","JSON","stringify","SuspenseLoader","_jsxs","Container","maxWidth","sx","p","fontSize","fontWeight","Grid","container","direction","justifyContent","alignItems","spacing","marginTop","xs","Card","CardHeader","title","Divider","CardContent","TableData","rows","initialState","pagination","paginationModel","pageSize","minHeight","justifySelf","mx","hideFooter","Pagination","currentPage","totalPages","handlePageChange","my","JobFilter","handleFilter","prev","width","mb","bgcolor","CircularProgress","index","sm","md","Box","display","ProfileCard","length","mt","textAlign","fontStyle","useDeleteJobById","queryClient","useQueryClient","toast","mutate","onDeleteById","useMutation","remove","onSuccess","res","invalidateQueries","success","massage","message","error","onError","response","_data$row4","_data$row5","rewriteUrl","navigate","useNavigate","_Fragment","Tooltip","IconButton","size","handleLinkToDetail","_data$row2","_data$row3","concat","btoa","state","RemoveRedEyeIcon","height","LinkText","to","value","rederDate","date","dayjs","format","sortable","APPROVAL_STATUS","find","label","Chip","handleConfirmDelete","alertDialog","selectedId","handleConfirm","handleDelete","DeleteOutlineIcon","TablePost","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}