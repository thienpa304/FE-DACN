{"version":3,"file":"static/js/741.620034b0.chunk.js","mappings":"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","sources":["components/ButtonGroup/index.tsx","components/DatePicker/index.tsx","components/EditButton/index.tsx","components/NumberFormatCustom/index.tsx","components/SelectInput/index.tsx","components/TextField/index.tsx","components/UploadError/index.tsx","constants/uploadFileRule.ts","modules/jobProfile/GeneralForm.tsx","modules/jobProfile/Personal.tsx","modules/jobProfile/SubmitBox.tsx","modules/jobProfile/TableOfContent.tsx","modules/users/hooks/useMutateAvatar.ts","modules/users/hooks/useMutateUserHook.ts","utils/keywords.ts"],"sourcesContent":["import { Box, Button } from '@mui/material';\r\n\r\nexport default function ButtonGroup(props) {\r\n  const { handleSubmit, handleCancel } = props;\r\n  return (\r\n    <Box display=\"flex\" justifyContent=\"center\" sx={{ gap: 3 }}>\r\n      <Button\r\n        onClick={handleCancel}\r\n        variant=\"outlined\"\r\n        color=\"secondary\"\r\n        sx={{ width: 120 }}\r\n      >\r\n        Hủy\r\n      </Button>\r\n      <Button\r\n        color=\"success\"\r\n        onClick={handleSubmit}\r\n        variant=\"contained\"\r\n        sx={{ width: 120 }}\r\n      >\r\n        Xác nhận\r\n      </Button>\r\n    </Box>\r\n  );\r\n}\r\n","import { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { DatePicker as DatePickerMui } from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport dayjs from 'dayjs';\n\nexport default function DatePicker(props) {\n  return (\n    <LocalizationProvider dateAdapter={AdapterDayjs}>\n      <DatePickerMui\n        format=\"DD/MM/YYYY\"\n        {...props}\n        value={props.value ? dayjs(props.value) : null}\n        slotProps={{ textField: { size: 'small', fullWidth: true } }}\n      />\n    </LocalizationProvider>\n  );\n}\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, Typography, ButtonProps } from '@mui/material';\r\nimport AutoFixHighOutlinedIcon from '@mui/icons-material/AutoFixHighOutlined';\r\n\r\nexport default function EditButton(props: ButtonProps) {\r\n  return (\r\n    <Button\r\n      {...props}\r\n      variant=\"outlined\"\r\n      color=\"secondary\"\r\n      startIcon={<AutoFixHighOutlinedIcon fontSize=\"large\" />}\r\n      sx={{ borderRadius: 5 }}\r\n    >\r\n      <Typography textTransform=\"none\">Chỉnh sửa</Typography>\r\n    </Button>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { NumericFormat, NumericFormatProps } from 'react-number-format';\r\n\r\ninterface CustomProps {\r\n  onChange: (event: { target: { name: string; value: string } }) => void;\r\n  name: string;\r\n}\r\n\r\nconst NumericFormatCustom = React.forwardRef<NumericFormatProps, CustomProps>(\r\n  function NumericFormatCustom(props, ref) {\r\n    const { onChange, ...other } = props;\r\n\r\n    return (\r\n      <NumericFormat\r\n        {...other}\r\n        getInputRef={ref}\r\n        onValueChange={(values) => {\r\n          onChange({\r\n            target: {\r\n              name: props.name,\r\n              value: values.value\r\n            }\r\n          });\r\n        }}\r\n        thousandSeparator\r\n        valueIsNumericString\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nexport default NumericFormatCustom;\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select, { SelectChangeEvent, SelectProps } from '@mui/material/Select';\r\n\r\nexport type Option = {\r\n  value: number | string;\r\n  label: string | React.ReactElement;\r\n};\r\nexport type PropsSelectInput = SelectProps & {\r\n  options?: Option[];\r\n  labelmargintop?: string;\r\n};\r\nexport default function SelectInput(props: PropsSelectInput) {\r\n  const { options = [], label, labelmargintop = 0 } = props;\r\n  return (\r\n    <FormControl fullWidth>\r\n      <InputLabel size=\"small\" sx={{ mt: labelmargintop }}>\r\n        {label}\r\n      </InputLabel>\r\n      <Select size=\"small\" {...props}>\r\n        {options.map((item, idx) => (\r\n          <MenuItem key={idx} value={item.value}>\r\n            {item.label}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n","import { TextFieldProps, TextField as TextInput } from '@mui/material';\n\nconst TextField = (props: TextFieldProps) => {\n  return <TextInput size=\"small\" fullWidth {...props} />;\n};\n\nexport default TextField;\n","import { Typography } from '@mui/material';\r\nimport {\r\n  avatarFormat,\r\n  CVFormat,\r\n  coverImgFormat\r\n} from 'src/constants/uploadFileRule';\r\n\r\nconst generateErrorText = (\r\n  object: string,\r\n  acceptTypes: string[],\r\n  acceptSize: number,\r\n  fileType: string\r\n) => {\r\n  const typeRegex = new RegExp(`${fileType}/`, 'g');\r\n  return (\r\n    <Typography color=\"error\" my={1} fontWeight={700} fontSize={13}>\r\n      {object} phải có định dạng&nbsp;\r\n      {acceptTypes.join(', ').replace(typeRegex, '.')} và dung lượng{' '}\r\n      {` <=${acceptSize / 1024 / 1024}MB`}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nconst generateOverTokenErrorText = () => {\r\n  return (\r\n    <Typography color=\"error\" my={1} fontWeight={700} fontSize={13}>\r\n      Rất tiếc, hệ thống chỉ có thể phân tích hồ sơ chứa tối đa 4000 từ. Vui\r\n      lòng tải hồ sơ khác !\r\n    </Typography>\r\n  );\r\n};\r\n\r\nconst generateFailedOCRErrorText = () => {\r\n  return (\r\n    <Typography color=\"error\" my={1} fontWeight={700} fontSize={13}>\r\n      Không nhận diện được nội dung trong file hồ sơ của bạn. Vui lòng tải hồ sơ\r\n      khác !\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport const avatarErrorText = generateErrorText(\r\n  'Ảnh đại diện',\r\n  avatarFormat.acceptTypes,\r\n  avatarFormat.acceptSize,\r\n  'image'\r\n);\r\nexport const coverErrorText = generateErrorText(\r\n  'Ảnh bìa',\r\n  coverImgFormat.acceptTypes,\r\n  coverImgFormat.acceptSize,\r\n  'image'\r\n);\r\nexport const applicationErrorText = generateErrorText(\r\n  'CV',\r\n  CVFormat.acceptTypes,\r\n  CVFormat.acceptSize,\r\n  'application'\r\n);\r\nexport const overTokenErrorText = generateOverTokenErrorText();\r\nexport const failedOCRErrorText = generateFailedOCRErrorText();\r\n","export const defaultImage = {\r\n  companyAvatar:\r\n    'https://th.bing.com/th/id/OIP.EK1rvrib-MWNflZRM2XiDQHaH_?pid=ImgDet&w=183&h=197&c=7&dpr=1.3',\r\n  companyCover:\r\n    'https://png.pngtree.com/background/20210706/original/pngtree-business-background-white-collar-jobs-picture-image_216619.jpg'\r\n};\r\n\r\nexport const avatarFormat = {\r\n  acceptTypes: ['image/jpeg', 'image/png', 'image/gif'],\r\n  acceptSize: 1 * 1024 * 1024\r\n};\r\nexport const CVFormat = {\r\n  acceptTypes: ['application/pdf'],\r\n  acceptSize: 2 * 1024 * 1024\r\n};\r\nexport const coverImgFormat = {\r\n  acceptTypes: ['image/jpeg', 'image/png', 'image/gif'],\r\n  acceptSize: 4 * 1024 * 1024\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Box, Grid, Typography, Container, Divider } from '@mui/material';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport FormControl from 'src/components/FormControl';\r\nimport SelectInput from 'src/components/SelectInput';\r\nimport TextField from 'src/components/TextField';\r\nimport Autocomplete from 'src/components/Autocomplete';\r\nimport { useForm } from 'react-hook-form';\r\nimport {\r\n  convertObjectListToString,\r\n  convertObjectListToStringForSkill,\r\n  convertToObjectsForSkill,\r\n  findObjectKey\r\n} from 'src/utils/inputOutputFormat';\r\nimport NumericFormatCustom from 'src/components/NumberFormatCustom';\r\nimport EditButton from 'src/components/EditButton';\r\nimport ButtonGroup from 'src/components/ButtonGroup';\r\nimport {\r\n  Degree,\r\n  EmploymentType,\r\n  Experience,\r\n  PositionLevel\r\n} from 'src/constants/enum';\r\nimport GeneralViewUI from './GeneralViewUI';\r\nimport TagInput from 'src/components/TagInput';\r\nimport skills from 'src/constants/skills';\r\nimport { SKILLS } from 'src/constants';\r\ninterface Option {\r\n  value: any;\r\n  label: any;\r\n}\r\n\r\ninterface FormProps {\r\n  jobTitle: string;\r\n  profession: string | Option[];\r\n  currentPosition: string;\r\n  desiredPosition: string;\r\n  desiredSalary: number;\r\n  degree: string;\r\n  experience: string;\r\n  workAddress: string | Option[];\r\n  employmentType: string;\r\n  careerGoal: string;\r\n  skills: string;\r\n}\r\n\r\ninterface GeneralFormProps {\r\n  data: FormProps;\r\n  options: {\r\n    profession: Option[];\r\n    workAddress: Option[];\r\n    positionLevel: Option[];\r\n    degree: Option[];\r\n    experience: Option[];\r\n    workingForm: Option[];\r\n  };\r\n  onSubmit: (data: FormProps) => void;\r\n}\r\n\r\nconst GeneralForm: React.FC<GeneralFormProps> = ({\r\n  data,\r\n  options,\r\n  onSubmit\r\n}) => {\r\n  const defaultValues: FormProps = {\r\n    jobTitle: '',\r\n    profession: '',\r\n    currentPosition: '',\r\n    desiredPosition: '',\r\n    desiredSalary: null,\r\n    degree: '',\r\n    experience: '',\r\n    workAddress: '',\r\n    employmentType: '',\r\n    careerGoal: '',\r\n    skills: ''\r\n  };\r\n\r\n  const {\r\n    control,\r\n    reset,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm<FormProps>({\r\n    defaultValues: defaultValues\r\n  });\r\n\r\n  const ref = React.useRef(null);\r\n  const [isReadOnly, setIsReadOnly] = useState(false);\r\n  const [employeeSkills, setSetEmployeeSkills] = useState(null);\r\n\r\n  const handleSaveProfile = (data: FormProps) => {\r\n    const newData = processDataPayload(data);\r\n    console.log('newData', newData);\r\n\r\n    onSubmit(newData);\r\n    setIsReadOnly(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    reset(data);\r\n    setIsReadOnly(true);\r\n  };\r\n\r\n  const onEdit = () => setIsReadOnly(false);\r\n\r\n  const processDataPayload = (data: FormProps) => {\r\n    console.log(data.skills);\r\n\r\n    return {\r\n      ...data,\r\n      profession: convertObjectListToString(data?.profession as Option[]),\r\n      workAddress: convertObjectListToString(data?.workAddress as Option[]),\r\n      skills: Array.isArray(data.skills)\r\n        ? data.skills.map((item) => item.value || item).join(', ')\r\n        : data.skills\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    reset(data);\r\n    data?.skills &&\r\n      setSetEmployeeSkills(convertToObjectsForSkill(data?.skills));\r\n  }, [data]);\r\n\r\n  return (\r\n    <Container id=\"general\">\r\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Box display=\"flex\">\r\n          <Typography fontWeight={700} fontSize={21} lineHeight={3}>\r\n            Thông tin chung\r\n          </Typography>\r\n        </Box>\r\n        {isReadOnly && <EditButton onClick={onEdit} />}\r\n      </Box>\r\n      <Divider />\r\n      {isReadOnly ? (\r\n        <GeneralViewUI\r\n          user={{\r\n            ...data,\r\n            degree: Degree[data.degree] ? Degree[data.degree] : data.degree\r\n          }}\r\n        />\r\n      ) : (\r\n        <Grid sx={{ mt: 1 }} py={2}>\r\n          <Grid container mb={4} spacing={3}>\r\n            <Grid item xs={12}>\r\n              <FormControl\r\n                element={<TextField />}\r\n                control={control}\r\n                errors={errors}\r\n                fullWidth\r\n                id=\"jobTitle\"\r\n                label=\"Vị trí mong muốn\"\r\n                name=\"jobTitle\"\r\n                required\r\n                disabled={isReadOnly}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControl\r\n                element={<Autocomplete />}\r\n                control={control}\r\n                errors={errors}\r\n                fullWidth\r\n                id=\"profession\"\r\n                label=\"Nghề nghiệp\"\r\n                name=\"profession\"\r\n                options={options.profession}\r\n                required\r\n                disabled={isReadOnly}\r\n                defaultValue={data?.profession}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <FormControl\r\n                element={<SelectInput />}\r\n                options={options.positionLevel}\r\n                control={control}\r\n                errors={errors}\r\n                fullWidth\r\n                id=\"currentPosition\"\r\n                label=\"Cấp bậc hiện tại\"\r\n                name=\"currentPosition\"\r\n                required\r\n                disabled={isReadOnly}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <FormControl\r\n                element={<SelectInput />}\r\n                options={options.positionLevel}\r\n                control={control}\r\n                errors={errors}\r\n                fullWidth\r\n                id=\"desiredPosition\"\r\n                label=\"Cấp bậc mong muốn\"\r\n                name=\"desiredPosition\"\r\n                required\r\n                disabled={isReadOnly}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <FormControl\r\n                element={<TextField />}\r\n                control={control}\r\n                errors={errors}\r\n                fullWidth\r\n                id=\"desiredSalary\"\r\n                label=\"Mức lương mong muốn\"\r\n                name=\"desiredSalary\"\r\n                pattern=\"integer\"\r\n                required\r\n                disabled={isReadOnly}\r\n                InputProps={{\r\n                  inputComponent: NumericFormatCustom as any,\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">triệu VNĐ</InputAdornment>\r\n                  )\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <FormControl\r\n                element={<SelectInput />}\r\n                options={options.degree}\r\n                control={control}\r\n                errors={errors}\r\n                fullWidth\r\n                id=\"degree\"\r\n                label=\"Trình độ học vấn\"\r\n                name=\"degree\"\r\n                required\r\n                disabled={isReadOnly}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <FormControl\r\n                element={<SelectInput />}\r\n                options={options.experience}\r\n                control={control}\r\n                errors={errors}\r\n                fullWidth\r\n                id=\"experience\"\r\n                label=\"Số năm kinh nghiệm\"\r\n                name=\"experience\"\r\n                required\r\n                disabled={isReadOnly}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <FormControl\r\n                element={<SelectInput />}\r\n                options={options.workingForm}\r\n                control={control}\r\n                errors={errors}\r\n                fullWidth\r\n                id=\"employmentType\"\r\n                label=\"Hình thức làm việc\"\r\n                name=\"employmentType\"\r\n                required\r\n                disabled={isReadOnly}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControl\r\n                element={<Autocomplete />}\r\n                options={options.workAddress}\r\n                control={control}\r\n                errors={errors}\r\n                defaultValue={data?.workAddress}\r\n                fullWidth\r\n                id=\"workAddress\"\r\n                label=\"Địa chỉ làm việc\"\r\n                name=\"workAddress\"\r\n                required\r\n                disabled={isReadOnly}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControl\r\n                element={<TextField />}\r\n                control={control}\r\n                errors={errors}\r\n                fullWidth\r\n                id=\"careerGoal\"\r\n                label=\"Mục tiêu nghề nghiệp\"\r\n                name=\"careerGoal\"\r\n                required\r\n                disabled={isReadOnly}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControl\r\n                element={\r\n                  <Autocomplete\r\n                    freeSolo={true}\r\n                    limitTags={7}\r\n                    options={SKILLS.map((item) => item.value)}\r\n                  />\r\n                }\r\n                defaultValue={data?.skills?.split(', ')}\r\n                control={control}\r\n                errors={errors}\r\n                id=\"skills\"\r\n                label=\"Kĩ năng bắt buộc\"\r\n                name=\"skills\"\r\n                required\r\n              />\r\n              <Typography\r\n                fontSize={12}\r\n                color=\"secondary\"\r\n                fontStyle={'italic'}\r\n                sx={{ display: 'flex', justifyContent: 'center' }}\r\n              >\r\n                Hãy liệt kê tối đa 10 từ khóa. Ví dụ: Python, ReactJS, HTML,\r\n                Go... Sẽ giúp hệ thống tìm kiếm được doanh nghiệp phù hợp với hồ\r\n                sơ bạn nhất\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          {!isReadOnly && (\r\n            <ButtonGroup\r\n              handleSubmit={handleSubmit(handleSaveProfile)}\r\n              handleCancel={handleCancel}\r\n            />\r\n          )}\r\n        </Grid>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default GeneralForm;\r\n","import { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Container,\r\n  styled,\r\n  Divider,\r\n  Avatar\r\n} from '@mui/material';\r\nimport AddPhotoAlternateOutlinedIcon from '@mui/icons-material/AddPhotoAlternateOutlined';\r\nimport DoNotDisturbOnOutlinedIcon from '@mui/icons-material/DoNotDisturbOnOutlined';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport FormControl from 'src/components/FormControl';\r\nimport SelectInput from 'src/components/SelectInput';\r\nimport DatePicker from 'src/components/DatePicker';\r\nimport TextField from 'src/components/TextField';\r\nimport EditButton from 'src/components/EditButton';\r\nimport { useForm } from 'react-hook-form';\r\nimport dayjs from 'dayjs';\r\nimport { User } from '../users/model';\r\nimport { useApp } from 'src/modules/app/hooks';\r\nimport useMutateUserData from '../users/hooks/useMutateUserHook';\r\nimport { GENDER, ISMARRIED, ISMARRIED_OPTION } from 'src/constants/option';\r\nimport {\r\n  GetFileByUserId,\r\n  UploadFileByUserId,\r\n  RemoveFileByUserId,\r\n  DocumentType,\r\n  getFileByUrl,\r\n  uploadFile,\r\n  removeFileByUrl\r\n} from 'src/common/firebaseService';\r\nimport { avatarFormat } from 'src/constants/uploadFileRule';\r\nimport {\r\n  toOutputDateString,\r\n  toInputDateString\r\n} from 'src/utils/inputOutputFormat';\r\nimport ButtonGroup from 'src/components/ButtonGroup';\r\nimport { avatarErrorText } from 'src/components/UploadError';\r\nimport useMutateAvatar from 'src/modules/users/hooks/useMutateAvatar';\r\nimport PersonalViewUI from './PersonalViewUI';\r\n\r\nconst Input = styled('input')({\r\n  display: 'none'\r\n});\r\n\r\nexport default function Personal() {\r\n  const [avatarState, setAvatarState] = useState({\r\n    avatar: null,\r\n    avatarError: false,\r\n    storageAvatar: null,\r\n    uploadFile: null\r\n  });\r\n  const { user, setUserApp } = useApp();\r\n  const { onSaveData: onSavaAvatar } = useMutateAvatar();\r\n  const { onSaveData } = useMutateUserData();\r\n  const { acceptTypes, acceptSize } = avatarFormat;\r\n  const [isReadOnly, setIsReadOnly] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    reset(defaultUserValues);\r\n    handleGetAvatar();\r\n  }, [user]);\r\n\r\n  const handleEdit = () => setIsReadOnly(false);\r\n\r\n  const handleSaveProfile = async (data) => {\r\n    setLoading(true);\r\n\r\n    let avatarUrl = user.avatar;\r\n    if (avatarState.uploadFile)\r\n      avatarUrl = await uploadFile(avatarState.uploadFile).catch(() => '');\r\n    if (!avatarState.avatar) {\r\n      await removeFileByUrl(user.avatar);\r\n      avatarUrl = '';\r\n    }\r\n\r\n    const newData = {\r\n      ...data,\r\n      dob: toOutputDateString(data.dob),\r\n      isMarried: data.isMarried === 'Đã kết hôn' ? '1' : '0',\r\n      avatar: avatarUrl\r\n    };\r\n    setUserApp({\r\n      ...newData,\r\n      isMarried: newData.isMarried === '1',\r\n      sex: GENDER.find((item) => item.value === newData.sex)?.label,\r\n      avatar: avatarUrl\r\n    });\r\n    onSaveData(newData);\r\n\r\n    onSavaAvatar(newData);\r\n    setLoading(false);\r\n    setIsReadOnly(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    reset(defaultUserValues);\r\n    setAvatarState({ ...avatarState, avatar: avatarState.storageAvatar });\r\n    setIsReadOnly(true);\r\n  };\r\n\r\n  const handleGetAvatar = async () => {\r\n    const avatarUrl = await getFileByUrl(user?.avatar).catch(() => '');\r\n    setAvatarState({\r\n      ...avatarState,\r\n      avatar: avatarUrl,\r\n      storageAvatar: avatarUrl\r\n    });\r\n  };\r\n\r\n  const handleUploadAvatar = (e) => {\r\n    const image = e.target.files[0];\r\n    if (!image) return;\r\n    if (!acceptTypes.includes(image.type) || image.size > acceptSize) {\r\n      setAvatarState({ ...avatarState, avatarError: true });\r\n      return;\r\n    }\r\n    const imageUrl = URL.createObjectURL(image);\r\n    setAvatarState({\r\n      ...avatarState,\r\n      avatar: imageUrl,\r\n      uploadFile: image,\r\n      avatarError: false\r\n    });\r\n  };\r\n\r\n  const handleDeleteAvatar = () => {\r\n    setAvatarState({ ...avatarState, avatar: null, avatarError: false });\r\n  };\r\n\r\n  const defaultUserValues = {\r\n    ...user,\r\n    dob: toInputDateString(user.dob as string, 'DD-MM-YYYY'),\r\n    sex: GENDER.find((item) => item.label === user.sex)?.value,\r\n    isMarried: user.isMarried ? 'Đã kết hôn' : 'Độc thân'\r\n  };\r\n\r\n  const {\r\n    control,\r\n    reset,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm<User>({\r\n    defaultValues: defaultUserValues\r\n  });\r\n\r\n  return (\r\n    <Container id=\"personal\">\r\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Box display=\"flex\">\r\n          <Typography fontWeight={700} fontSize={21} lineHeight={3}>\r\n            Thông tin cá nhân\r\n          </Typography>\r\n        </Box>\r\n        {isReadOnly && <EditButton onClick={handleEdit} />}\r\n      </Box>\r\n      <Divider />\r\n      <Grid container sx={{ mt: 1 }} py={2}>\r\n        <Grid item xs={3} pr={2}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            rowGap={2}\r\n          >\r\n            <Avatar\r\n              alt={user.name}\r\n              src={avatarState.avatar}\r\n              sx={{\r\n                borderRadius: 2,\r\n                width: '75%',\r\n                height: 180,\r\n                bgcolor: '#a0b9cfc2'\r\n              }}\r\n            />\r\n            {!avatarState.avatar && !isReadOnly && (\r\n              <label htmlFor=\"userAvatar\">\r\n                <Button\r\n                  component=\"label\"\r\n                  size=\"small\"\r\n                  startIcon={<AddPhotoAlternateOutlinedIcon />}\r\n                  variant=\"text\"\r\n                  color=\"secondary\"\r\n                >\r\n                  <FormControl\r\n                    element={<Input type=\"file\" accept=\"image/*\" />}\r\n                    control={control}\r\n                    name=\"userAvatar\"\r\n                    id=\"userAvatar\"\r\n                    label=\"Ảnh đại diện\"\r\n                    onChange={handleUploadAvatar}\r\n                    // sx={{ fontSize: 15 }}\r\n                  />\r\n                  <Typography sx={{ fontSize: 15, fontWeight: 700 }}>\r\n                    Tải lên\r\n                  </Typography>\r\n                </Button>\r\n              </label>\r\n            )}\r\n\r\n            {avatarState.avatar && !isReadOnly && (\r\n              <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\r\n                <Button\r\n                  component=\"label\"\r\n                  size=\"small\"\r\n                  startIcon={<AddPhotoAlternateOutlinedIcon />}\r\n                  variant=\"text\"\r\n                  color=\"secondary\"\r\n                >\r\n                  <FormControl\r\n                    element={<Input type=\"file\" accept=\"image/*\" />}\r\n                    control={control}\r\n                    name=\"userAvatar\"\r\n                    id=\"userAvatar\"\r\n                    label=\"Ảnh đại diện\"\r\n                    onChange={handleUploadAvatar}\r\n                  />\r\n                  <Typography sx={{ fontSize: 15, fontWeight: 700 }}>\r\n                    Thay đổi\r\n                  </Typography>\r\n                </Button>\r\n                <Button\r\n                  component=\"label\"\r\n                  onClick={handleDeleteAvatar}\r\n                  size=\"small\"\r\n                  startIcon={<DoNotDisturbOnOutlinedIcon />}\r\n                  variant=\"text\"\r\n                  color=\"secondary\"\r\n                >\r\n                  <Typography sx={{ fontSize: 15, fontWeight: 700 }}>\r\n                    Xóa\r\n                  </Typography>\r\n                </Button>\r\n              </Box>\r\n            )}\r\n            {avatarState.avatarError && avatarErrorText}\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={9}>\r\n          {!isReadOnly ? (\r\n            <Grid container mb={4} spacing={3}>\r\n              <Grid item xs={12} sm={6}>\r\n                <FormControl\r\n                  element={<TextField />}\r\n                  control={control}\r\n                  errors={errors}\r\n                  fullWidth\r\n                  id=\"name\"\r\n                  label=\"Họ và tên\"\r\n                  name=\"name\"\r\n                  required\r\n                  disabled={isReadOnly}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <FormControl\r\n                  element={<TextField />}\r\n                  control={control}\r\n                  errors={errors}\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  pattern=\"email\"\r\n                  required\r\n                  disabled={isReadOnly}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <FormControl\r\n                  element={<TextField />}\r\n                  control={control}\r\n                  errors={errors}\r\n                  fullWidth\r\n                  id=\"phone\"\r\n                  label=\"Số điện thoại\"\r\n                  name=\"phone\"\r\n                  pattern=\"phone\"\r\n                  required\r\n                  disabled={isReadOnly}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <FormControl\r\n                  element={<DatePicker maxDate={dayjs()} />}\r\n                  control={control}\r\n                  errors={errors}\r\n                  fullWidth\r\n                  id=\"dob\"\r\n                  label=\"Ngày sinh\"\r\n                  name=\"dob\"\r\n                  required\r\n                  disabled={isReadOnly}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <FormControl\r\n                  element={<SelectInput />}\r\n                  options={GENDER}\r\n                  control={control}\r\n                  errors={errors}\r\n                  fullWidth\r\n                  id=\"sex\"\r\n                  label=\"Giới tính\"\r\n                  name=\"sex\"\r\n                  disabled={isReadOnly}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <FormControl\r\n                  element={<SelectInput />}\r\n                  options={ISMARRIED_OPTION}\r\n                  control={control}\r\n                  errors={errors}\r\n                  fullWidth\r\n                  id=\"isMarried\"\r\n                  label=\"Tình trạng hôn nhân\"\r\n                  name=\"isMarried\"\r\n                  disabled={isReadOnly}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <FormControl\r\n                  element={<TextField />}\r\n                  control={control}\r\n                  errors={errors}\r\n                  fullWidth\r\n                  id=\"address\"\r\n                  label=\"Địa chỉ\"\r\n                  name=\"address\"\r\n                  required\r\n                  disabled={isReadOnly}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <PersonalViewUI user={user} />\r\n          )}\r\n          {!isReadOnly && (\r\n            <Box display=\"flex\" justifyContent=\"center\" sx={{ gap: 3 }}>\r\n              {loading ? (\r\n                <CircularProgress size={20} />\r\n              ) : (\r\n                <ButtonGroup\r\n                  handleSubmit={handleSubmit(handleSaveProfile)}\r\n                  handleCancel={handleCancel}\r\n                />\r\n              )}\r\n            </Box>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","import { Box, styled } from '@mui/material';\r\n\r\nconst SubmitBox = styled(Box)(({ theme }) => ({\r\n  background: '#ffff',\r\n  height: 70,\r\n  width: '100%',\r\n  boxShadow: '0px 0px 10px #aae2f7',\r\n  left: 0,\r\n  right: 0,\r\n  bottom: 0,\r\n  zIndex: 1,\r\n  position: 'sticky',\r\n  display: 'flex',\r\n  justifyContent: 'flex-end',\r\n  alignItems: 'center',\r\n  gap: theme.spacing(4)\r\n}));\r\n\r\nexport default SubmitBox;\r\n","import { List, ListItem, Button, Typography, Grid } from '@mui/material';\r\n\r\nconst handleScrollToSection = (sectionId) => {\r\n  const element = document.getElementById(sectionId);\r\n  if (element) {\r\n    element.scrollIntoView({ behavior: 'smooth' });\r\n  }\r\n};\r\n\r\nconst TableOfContents = ({ sections }) => {\r\n  return (\r\n    <List component=\"nav\" sx={{ px: 0 }}>\r\n      <ListItem>\r\n        <Typography fontSize={14} fontWeight={700}>\r\n          Hồ sơ trực tuyến của bạn\r\n        </Typography>\r\n      </ListItem>\r\n      {sections.map((section) => (\r\n        <ListItem key={section.id} sx={{ p: 0 }}>\r\n          <Button\r\n            sx={{ py: 1 }}\r\n            fullWidth\r\n            onClick={() => handleScrollToSection(section.id)}\r\n            color=\"secondary\"\r\n          >\r\n            <Grid container>\r\n              <Grid\r\n                item\r\n                xs={2}\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n              >\r\n                {section.icon}\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={10}\r\n                display=\"flex\"\r\n                justifyContent=\"left\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Typography fontSize={13}>{section.title}</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Button>\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default TableOfContents;\r\n","import { AxiosError } from 'axios';\r\nimport { useMutation } from 'react-query';\r\nimport { ResponseData } from 'src/common/http-request';\r\nimport { useApp } from 'src/modules/app/hooks';\r\nimport { UploadAvatar } from '../userService';\r\nimport { User } from '../model';\r\n\r\nconst useMutateAvatar = () => {\r\n  const { toast, setUserApp } = useApp();\r\n  const mutationFunction = UploadAvatar.create;\r\n  const { mutate: onSaveData, isLoading } = useMutation<\r\n    ResponseData<Partial<User>>,\r\n    AxiosError<ResponseData<Partial<User>>>,\r\n    string\r\n  >(mutationFunction, {\r\n    onSuccess: (res) => {\r\n      if (res.status === 200) {\r\n        toast.success({ massage: res.message });\r\n        setUserApp({ avatar: res.data.avatar });\r\n      } else {\r\n        toast.error({ massage: res.message });\r\n      }\r\n    },\r\n    onError: (error) => {\r\n      toast.error({ massage: error.response.data.message });\r\n    }\r\n  });\r\n  return {\r\n    onSaveData,\r\n    isLoading\r\n  };\r\n};\r\n\r\nexport default useMutateAvatar;\r\n","import { AxiosError } from 'axios';\r\nimport { useMutation, useQueryClient } from 'react-query';\r\nimport { ResponseData } from 'src/common/http-request';\r\nimport { useApp } from 'src/modules/app/hooks';\r\nimport { User } from '../model';\r\nimport { SetProfile } from '../userService';\r\n\r\nconst useMutateUserData = () => {\r\n  const queryClient = useQueryClient();\r\n  const { toast } = useApp();\r\n  const mutationFunction = SetProfile.create;\r\n  const { mutate: onSaveData, isLoading } = useMutation<\r\n    ResponseData<User>,\r\n    AxiosError<ResponseData<User>>,\r\n    User\r\n  >(mutationFunction, {\r\n    onSuccess: (res) => {\r\n      if (res.status === 200) {\r\n        queryClient.invalidateQueries('get-Profile');\r\n        toast.success({ massage: res.message });\r\n      } else {\r\n        toast.error({ massage: res.message });\r\n      }\r\n    },\r\n    onError: (error) => {\r\n      toast.error({ massage: error.response.data.message });\r\n    }\r\n  });\r\n  return {\r\n    onSaveData,\r\n    isLoading\r\n  };\r\n};\r\n\r\nexport default useMutateUserData;\r\n","import _ from 'lodash';\r\nimport { AttachedDocument, OnlineProfile } from 'src/modules/jobProfile/model';\r\n\r\n// export function tfidfReview(keywordArray: string[], documentText: string) {\r\n//   const termFreq = keywordArray.reduce((result, keywordArray) => {\r\n//     const regex = new RegExp(`\\\\b${keywordArray}\\\\b`, 'gi');\r\n//     const matches = documentText.match(regex) || [];\r\n//     result[keywordArray] = matches.length;\r\n//     return result;\r\n//   }, {});\r\n\r\n//   const totalWords = documentText.split(/\\s+/).length;\r\n\r\n//   const tfidf = {};\r\n\r\n//   Object.entries(termFreq).forEach(([word, termCount]) => {\r\n//     if (typeof termCount === 'number') {\r\n//       // Check if termCount is a number\r\n//       const tf = termCount / totalWords;\r\n//       const idf = Math.log(keywordArray.length / (termCount || 1));\r\n//       tfidf[word] = tf * idf;\r\n//     } else {\r\n//       // Handle the case where termCount is not a number\r\n//       console.error(`Term count for \"${word}\" is not a number.`);\r\n//     }\r\n//   });\r\n\r\n//   return _.entries(tfidf)\r\n//     .sort((a, b) => b[1] - a[1])\r\n//     .map((entry) => entry[0]);\r\n// }\r\n\r\nexport const loadKeywords = (analysisResults: any[], document?: any) => {\r\n  if (analysisResults.length <= 0 && !Boolean(analysisResults[0])) return;\r\n\r\n  const result = analysisResults[0];\r\n\r\n  const startIndex = result.indexOf('[');\r\n  if (startIndex === -1) {\r\n    console.log(\"Không tìm thấy ký tự '['\");\r\n    return;\r\n  }\r\n\r\n  // Tìm vị trí kết thúc của ']'\r\n  const endIndex = result.lastIndexOf(']');\r\n  if (endIndex === -1) {\r\n    console.log(\"Không tìm thấy ký tự ']'\");\r\n    return;\r\n  }\r\n\r\n  // Trích xuất chuỗi con từ vị trí startIndex đến endIndex\r\n  const extractedString = result\r\n    .substring(startIndex + 1, endIndex)\r\n    .replace(/[\"]/g, '');\r\n  console.log('extractedString: ', extractedString);\r\n\r\n  // B1: Thay thế dấu \"'\" thành dấu '\"' để đảm bảo JSON hợp lệ\r\n  const jsonString = extractedString.replace(/[_!@#$%^&*;|<>'\"\\n\\t\\r]/g, '');\r\n  console.log('jsonString: ', jsonString);\r\n\r\n  // B2: Parse string sang array\r\n  const keywordArray = jsonString.split(',');\r\n  console.log('keywordArray', keywordArray);\r\n\r\n  const keywordList = keywordArray.slice(0, 20);\r\n  console.log('keywordList?.join(', ')', keywordList?.join(', '));\r\n  return keywordList?.join(', ');\r\n};\r\n\r\nfunction removeDateAttributes(data) {\r\n  return data.map((item) => {\r\n    const { startDate, endDate, id, isDoing, ...rest } = item;\r\n    return rest;\r\n  });\r\n}\r\n\r\nconst removeAttributes = (\r\n  profile: Partial<OnlineProfile | AttachedDocument>,\r\n  profileType: string,\r\n  cvText?: string\r\n) => {\r\n  // if profile type is OnlineProfile then return\r\n  if (profileType === 'online') {\r\n    const profileData = profile as Partial<OnlineProfile>;\r\n    return {\r\n      jobTitle: profileData?.jobTitle,\r\n      profession: profileData?.profession,\r\n      work_experiences: profileData?.work_experiences.map((experience) => {\r\n        return {\r\n          jobTitle: experience.jobTitle,\r\n          jobDescription: experience.jobDescription\r\n        };\r\n      }),\r\n      education_informations: profileData?.education_informations.map(\r\n        (education) => education.specialization\r\n      ),\r\n      another_degrees: profileData?.another_degrees?.map(\r\n        (degree) => degree.degreeName\r\n      )\r\n    };\r\n  } else {\r\n    return {\r\n      jobTitle: profile?.jobTitle,\r\n      profession: profile?.profession,\r\n      cvContent: cvText\r\n    };\r\n  }\r\n};\r\n\r\ntype profileType = 'online' | 'document';\r\nexport function preProcessData(\r\n  object,\r\n  profileType: profileType,\r\n  cvText?: string\r\n) {\r\n  const dataToAnalyze = removeAttributes(object, profileType, cvText);\r\n  return dataToAnalyze;\r\n}\r\n"],"names":["ButtonGroup","props","handleSubmit","handleCancel","_jsxs","Box","display","justifyContent","sx","gap","children","_jsx","Button","onClick","variant","color","width","DatePicker","LocalizationProvider","dateAdapter","AdapterDayjs","DatePickerMui","format","value","dayjs","slotProps","textField","size","fullWidth","EditButton","startIcon","AutoFixHighOutlinedIcon","fontSize","borderRadius","Typography","textTransform","React","ref","onChange","other","NumericFormat","getInputRef","onValueChange","values","target","name","thousandSeparator","valueIsNumericString","SelectInput","options","label","labelmargintop","FormControl","InputLabel","mt","Select","map","item","idx","MenuItem","TextInput","generateErrorText","object","acceptTypes","acceptSize","fileType","typeRegex","RegExp","concat","my","fontWeight","join","replace","avatarErrorText","avatarFormat","coverErrorText","coverImgFormat","applicationErrorText","CVFormat","overTokenErrorText","failedOCRErrorText","defaultImage","companyAvatar","companyCover","_ref","_data$skills","data","onSubmit","control","reset","formState","errors","useForm","defaultValues","jobTitle","profession","currentPosition","desiredPosition","desiredSalary","degree","experience","workAddress","employmentType","careerGoal","skills","isReadOnly","setIsReadOnly","useState","employeeSkills","setSetEmployeeSkills","processDataPayload","console","log","convertObjectListToString","Array","isArray","useEffect","convertToObjectsForSkill","Container","id","alignItems","lineHeight","onEdit","Divider","GeneralViewUI","user","Degree","Grid","py","container","mb","spacing","xs","element","TextField","required","disabled","Autocomplete","defaultValue","sm","positionLevel","pattern","InputProps","inputComponent","NumericFormatCustom","endAdornment","InputAdornment","position","workingForm","freeSolo","limitTags","SKILLS","split","fontStyle","newData","Input","styled","Personal","_GENDER$find2","avatarState","setAvatarState","avatar","avatarError","storageAvatar","uploadFile","setUserApp","useApp","onSaveData","onSavaAvatar","useMutateAvatar","useMutateUserData","loading","setLoading","defaultUserValues","handleGetAvatar","async","avatarUrl","getFileByUrl","catch","handleUploadAvatar","e","image","files","includes","type","imageUrl","URL","createObjectURL","dob","toInputDateString","sex","GENDER","find","isMarried","handleEdit","pr","flexDirection","rowGap","Avatar","alt","src","height","bgcolor","htmlFor","component","AddPhotoAlternateOutlinedIcon","accept","handleDeleteAvatar","DoNotDisturbOnOutlinedIcon","PersonalViewUI","maxDate","ISMARRIED_OPTION","CircularProgress","_GENDER$find","removeFileByUrl","toOutputDateString","theme","background","boxShadow","left","right","bottom","zIndex","sections","List","px","ListItem","section","p","sectionId","document","getElementById","scrollIntoView","behavior","handleScrollToSection","icon","title","toast","mutationFunction","UploadAvatar","create","mutate","isLoading","useMutation","onSuccess","res","status","success","massage","message","error","onError","response","queryClient","useQueryClient","SetProfile","invalidateQueries","loadKeywords","analysisResults","length","Boolean","result","startIndex","indexOf","endIndex","lastIndexOf","extractedString","substring","jsonString","keywordArray","keywordList","slice","removeAttributes","profile","profileType","cvText","_profileData$another_","profileData","work_experiences","jobDescription","education_informations","education","specialization","another_degrees","degreeName","cvContent","preProcessData"],"sourceRoot":""}