{"version":3,"file":"static/js/853.b91d4645.chunk.js","mappings":"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","sources":["components/Link/index.tsx","components/SearchBar/SearchBar.tsx","modules/getEmployee/hook/useQueryEmployee.ts","modules/getEmployee/components/FindProfiles.tsx","pages/find-profiles/index.tsx","../node_modules/@mui/icons-material/Search.js"],"sourcesContent":["import React, { forwardRef, useMemo } from 'react';\nimport { Link as ReactLink } from 'react-router-dom';\n\ninterface CustomLinkProps {\n  to?: string;\n  children: React.ReactNode;\n  sx?: any;\n  state?: any;\n  onClick?: () => void;\n}\n\nconst linkStyle = {\n  textDecoration: 'none',\n  color: '#551a8b'\n};\n\nconst handleMouseEnter = (e: React.MouseEvent<HTMLAnchorElement>) => {\n  e.currentTarget.style.color = '#FF7D55'; // Truy cập style thông qua currentTarget\n};\n\nconst handleMouseLeave = (\n  e: React.MouseEvent<HTMLAnchorElement>,\n  defaultColor\n) => {\n  e.currentTarget.style.color = defaultColor || '#551a8b'; // Truy cập style thông qua currentTarget\n};\n\nconst Link = forwardRef<HTMLButtonElement, CustomLinkProps>((props, ref) => {\n  const { to, children, sx } = props;\n\n  return (\n    <ReactLink\n      {...props}\n      to={to}\n      style={{ ...linkStyle, ...sx }}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={(e) => handleMouseLeave(e, sx?.color)}\n    >\n      {children}\n    </ReactLink>\n  );\n});\n\nexport default Link;\n","import { Box, Button, Grid, InputAdornment, TextField } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport Link from 'src/components/Link';\r\nimport SelectInput from 'src/components/SelectInput';\r\nimport { PROFESSION } from 'src/constants';\r\nimport { rewriteUrl } from 'src/utils/rewriteUrl';\r\n\r\nconst ProfessionOptions = [\r\n  {\r\n    label: 'Tất cả',\r\n    value: ''\r\n  },\r\n  ...PROFESSION\r\n];\r\n\r\nexport default function SearchBar({ to, sx }: { to: string; sx?: any }) {\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [selectedProfession, setSelectedProfession] = useState('');\r\n\r\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchValue(() => event.target.value);\r\n  };\r\n\r\n  const handleSelectProfession = (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => { \r\n    setSelectedProfession(() => event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      display=\"flex\"\r\n      sx={{\r\n        border: '1px solid #98E4FF',\r\n        borderRadius: '5px',\r\n        ...sx\r\n      }}\r\n    >\r\n      <Grid item md={8} xs={12}>\r\n        <TextField\r\n          value={searchValue}\r\n          onChange={handleSearchChange}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <SearchIcon />\r\n              </InputAdornment>\r\n            )\r\n          }}\r\n          placeholder=\"Nhập vị trí muốn ứng tuyển\"\r\n          fullWidth\r\n          sx={{\r\n            backgroundColor: 'white',\r\n            boxShadow: '2px 2px 6px #98E4FF'\r\n          }}\r\n        />\r\n      </Grid>\r\n      <Grid item md={2} xs={6}>\r\n        <SelectInput\r\n          options={ProfessionOptions}\r\n          onChange={handleSelectProfession}\r\n          label=\"Nghề nghiệp\"\r\n          placeholder=\"Nghề nghiệp\"\r\n          fullWidth\r\n          sx={{\r\n            backgroundColor: 'white',\r\n            boxShadow: '2px 2px 6px #98E4FF',\r\n            borderRadius: '0px'\r\n          }}\r\n          labelmargintop=\"5px\"\r\n          size=\"medium\"\r\n        />\r\n      </Grid>\r\n      <Grid item md={2} xs={6}>\r\n        <Link\r\n          to={\r\n            selectedProfession || searchValue\r\n              ? `${to}/${\r\n                  rewriteUrl(selectedProfession) || 'Tat-ca'\r\n                }?search=${searchValue}`\r\n              : ''\r\n          }\r\n          sx={{ color: '#000' }}\r\n          state={{\r\n            jobTitle: searchValue?.trim(),\r\n            profession: selectedProfession,\r\n            pageTitle: searchValue\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n            sx={{ opacity: 0.8, height: '100%', borderRadius: '0px' }}\r\n            fullWidth\r\n          >\r\n            <SearchIcon />\r\n            Tìm kiếm\r\n          </Button>\r\n        </Link>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import { AxiosError } from 'axios';\nimport { useQuery } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { Employee, User } from 'src/modules/users/model';\nimport { GetEmployeeService } from '../getEmployeeService';\nimport { useApp } from 'src/modules/app/hooks';\nimport { AttachedDocument, OnlineProfile } from 'src/modules/jobProfile/model';\nimport { ProfileShowType } from '../model';\n\nconst useQueryEmployee = (params?) => {\n  const { isEmployer } = useApp();\n  const { data, isLoading, refetch } = useQuery<\n    ResponseData<ProfileShowType[]>,\n    AxiosError<ResponseData<ProfileShowType[]>>\n  >(\n    [\n      'get-AllEmployees',\n      params?.page,\n      params?.profession,\n      params?.experience,\n      params?.degree,\n      params?.employmentType,\n      params?.sex,\n      params?.jobTitle,\n      params?.currentPosition,\n      params?.positionLevel\n    ],\n    () => {\n      for (const key in params) {\n        if (params[key] === 'Tất cả' || params[key] === undefined) {\n          params[key] = '';\n        }\n      }\n      const item = { ...params, currentPosition: params?.positionLevel };\n      delete item.positionLevel;\n      return GetEmployeeService.get({ params: item });\n    },\n    {\n      keepPreviousData: true,\n      retry: 1,\n      refetchOnWindowFocus: false,\n      enabled: isEmployer\n    }\n  );\n\n  return {\n    profile: data?.data || [],\n    isLoading,\n    refetch\n  };\n};\n\nexport default useQueryEmployee;\n","import { Box, Container, Grid, Typography } from '@mui/material';\nimport { useState } from 'react';\nimport ProfileCard from './ProfileCard';\nimport useQueryEmployee from '../hook/useQueryEmployee';\nimport SearchBar from 'src/components/SearchBar/SearchBar';\nimport JobFilter from '../../jobs/components/JobFilter';\nimport { useLocation } from 'react-router';\nimport SuspenseLoader from 'src/components/SuspenseLoader';\n\nexport default function FindProfiles() {\n  const [page, setPage] = useState(1);\n  const [filter, setFilter] = useState(null);\n  const { state } = useLocation();\n  const locationState = state as any;\n\n  const pageSize = 12;\n  const { profile, isLoading } = useQueryEmployee({\n    page: page,\n    num: pageSize,\n    ...filter,\n    profession: locationState?.profession,\n    jobTitle: locationState?.jobTitle\n  });\n\n  const handleFilter = (data: any) => {\n    setFilter((prev) => ({\n      ...prev,\n      ...data\n    }));\n  };\n\n  if (isLoading) return <SuspenseLoader />;\n\n  return (\n    <Container sx={{ p: 3 }}>\n      <Typography mb={2} fontSize={22} fontWeight={700}>\n        Tìm kiếm ứng viên\n      </Typography>\n      <SearchBar to=\"/employer/find-profiles\" sx={{ my: 3 }} />\n      <JobFilter handleFilter={handleFilter} />\n      <Container\n        sx={{\n          mb: 3,\n          p: 3,\n          bgcolor: '#fbfeff',\n          minHeight: '65vh'\n        }}\n      >\n        <Grid container spacing={1}>\n          {profile.map((item, index) => (\n            <Grid key={index} item xs={12} sm={6} md={3}>\n              <Box sx={{ display: 'flex', justifyContent: 'center' }}>\n                <ProfileCard profile={item} />\n              </Box>\n            </Grid>\n          ))}\n        </Grid>\n        {profile?.length === 0 && (\n          <Box\n            sx={{\n              display: 'flex',\n              justifyContent: 'center'\n            }}\n          >\n            <Typography\n              mt={10}\n              textAlign=\"center\"\n              fontStyle=\"italic\"\n              color=\"#9999\"\n            >\n              Không tìm được hồ sơ phù hợp\n            </Typography>\n          </Box>\n        )}\n      </Container>\n    </Container>\n  );\n}\n","import React from 'react';\nimport FindProfiles from 'src/modules/getEmployee/components/FindProfiles';\n\nexport default function index() {\n  return <FindProfiles />;\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexports.default = _default;"],"names":["linkStyle","textDecoration","color","handleMouseEnter","e","currentTarget","style","forwardRef","props","ref","to","children","sx","_jsx","ReactLink","onMouseEnter","onMouseLeave","handleMouseLeave","defaultColor","ProfessionOptions","label","value","PROFESSION","SearchBar","_ref","searchValue","setSearchValue","useState","selectedProfession","setSelectedProfession","_jsxs","Grid","container","display","border","borderRadius","item","md","xs","TextField","onChange","event","target","InputProps","startAdornment","InputAdornment","position","SearchIcon","placeholder","fullWidth","backgroundColor","boxShadow","SelectInput","options","labelmargintop","size","Link","concat","rewriteUrl","state","jobTitle","trim","profession","pageTitle","Button","variant","opacity","height","params","isEmployer","useApp","data","isLoading","refetch","useQuery","page","experience","degree","employmentType","sex","currentPosition","positionLevel","key","undefined","GetEmployeeService","get","keepPreviousData","retry","refetchOnWindowFocus","enabled","profile","FindProfiles","setPage","filter","setFilter","useLocation","locationState","useQueryEmployee","num","SuspenseLoader","Container","p","Typography","mb","fontSize","fontWeight","my","JobFilter","handleFilter","prev","bgcolor","minHeight","spacing","map","index","sm","Box","justifyContent","ProfileCard","length","mt","textAlign","fontStyle","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}