{"version":3,"file":"static/js/435.78ea2c86.chunk.js","mappings":"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","sources":["components/FileFormatInfo/index.tsx","components/FollowButton/index.tsx","components/LinkText/index.tsx","components/SelectInput/index.tsx","components/UploadError/index.tsx","constants/uploadFileRule.ts","gpt/roles.ts","gpt/sendChatGPTRequest.ts","modules/jobProfile/attachedDocument/hooks/useQueryAttachedDocument.ts","modules/jobProfile/onlineProfile/hooks/useQueryOnlineProfile.ts","modules/jobs/hooks/useMutateFollowJobById.ts","modules/jobs/components/FollowJobButton.tsx","modules/jobs/components/JobFilter.tsx","modules/jobs/components/SmallJobCard.tsx","modules/jobs/hooks/useQueryFollowJobs.ts","modules/jobs/hooks/useQueryTotalResultOfJobs.ts","pages/job-recommend/JobRecommendTab.tsx","components/FileUploader/index.tsx","pages/job-recommend/ProfileInfo.tsx","pages/job-recommend/AnalyzeProfile.tsx","pages/job-recommend/index.tsx","utils/keywords.ts","utils/rewriteUrl.ts","../node_modules/@mui/icons-material/CloudUpload.js","../node_modules/@mui/icons-material/ContactPage.js","../node_modules/@mui/icons-material/FavoriteBorder.js","../node_modules/@mui/icons-material/FilterAlt.js","../node_modules/@mui/icons-material/LocalAtm.js","../node_modules/@mui/icons-material/LocationOnOutlined.js"],"sourcesContent":["import React from 'react';\nimport { Typography } from '@mui/material';\n\nconst FileFormatInfo = ({ acceptTypes, acceptSize_MB }) => (\n  <Typography fontSize={13} color=\"grey.600\" mt={1}>\n    Định dạng file {acceptTypes.join(', ').replace(/application\\//g, '.')} và\n    dung lượng {` <= ${acceptSize_MB} MB`}\n  </Typography>\n);\n\nexport default FileFormatInfo;\n","import React, { useEffect, useState } from 'react';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport { Box } from '@mui/material';\n\nexport default function FollowButton(props) {\n  const { isFollow: isFollowing } = props;\n  const [isFollow, setIsFollow] = useState(isFollowing);\n\n  const handleToggleFollow = (id) => {\n    setIsFollow((prev) => !prev);\n  };\n\n  useEffect(() => {\n    setIsFollow(isFollowing);\n  }, [isFollowing]);\n\n  return (\n    <Box\n      onClick={handleToggleFollow}\n      sx={{ display: 'flex', alignItem: 'center' }}\n    >\n      {isFollow ? (\n        <FavoriteIcon\n          sx={{\n            display: 'flex',\n            color: 'red',\n            '&:hover': {\n              color: 'darkred'\n            }\n          }}\n        />\n      ) : (\n        <FavoriteBorderIcon\n          sx={{\n            display: 'flex',\n            color: 'red',\n            '&:hover': {\n              color: 'darkred'\n            }\n          }}\n        />\n      )}\n    </Box>\n  );\n}\n","import { styled } from '@mui/material';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst LinkWrapper = styled(Link)(({ theme }) => ({\n  textDecoration: 'none',\n  color: theme.colors.info.dark,\n  '&:active': {\n    color: theme.colors.primary.light\n  },\n  '&:visited': {\n    color: theme.colors.info.dark\n  }\n}));\nconst LinkText = (props) => {\n  return <LinkWrapper {...props} />;\n};\n\nexport default LinkText;\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select, { SelectChangeEvent, SelectProps } from '@mui/material/Select';\n\nexport type Option = {\n  value: number | string;\n  label: string | React.ReactElement;\n};\nexport type PropsSelectInput = SelectProps & {\n  options?: Option[];\n  labelmargintop?: string;\n};\nexport default function SelectInput(props: PropsSelectInput) {\n  const { options = [], label, labelmargintop = 0 } = props;\n  return (\n    <FormControl fullWidth>\n      <InputLabel size=\"small\" sx={{ mt: labelmargintop }}>\n        {label}\n      </InputLabel>\n      <Select size=\"small\" {...props}>\n        {options.map((item, idx) => (\n          <MenuItem key={idx} value={item.value}>\n            {item.label}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n}\n","import { Typography } from '@mui/material';\nimport {\n  avatarFormat,\n  CVFormat,\n  coverImgFormat\n} from 'src/constants/uploadFileRule';\n\nconst generateErrorText = (\n  object: string,\n  acceptTypes: string[],\n  acceptSize: number,\n  fileType: string\n) => {\n  const typeRegex = new RegExp(`${fileType}/`, 'g');\n  return (\n    <Typography color=\"error\" my={1} fontWeight={700} fontSize={13}>\n      {object} phải có định dạng&nbsp;\n      {acceptTypes.join(', ').replace(typeRegex, '.')} và dung lượng{' '}\n      {` <=${acceptSize / 1024 / 1024}MB`}\n    </Typography>\n  );\n};\n\nconst generateOverTokenErrorText = () => {\n  return (\n    <Typography color=\"error\" my={1} fontWeight={700} fontSize={13}>\n      Rất tiếc, hệ thống chỉ có thể phân tích hồ sơ chứa tối đa 4000 từ. Vui\n      lòng tải hồ sơ khác !\n    </Typography>\n  );\n};\n\nconst generateFailedOCRErrorText = () => {\n  return (\n    <Typography color=\"error\" my={1} fontWeight={700} fontSize={13}>\n      Không nhận diện được nội dung trong file hồ sơ của bạn. Vui lòng tải hồ sơ\n      khác !\n    </Typography>\n  );\n};\n\nexport const avatarErrorText = generateErrorText(\n  'Ảnh đại diện',\n  avatarFormat.acceptTypes,\n  avatarFormat.acceptSize,\n  'image'\n);\nexport const coverErrorText = generateErrorText(\n  'Ảnh bìa',\n  coverImgFormat.acceptTypes,\n  coverImgFormat.acceptSize,\n  'image'\n);\nexport const applicationErrorText = generateErrorText(\n  'CV',\n  CVFormat.acceptTypes,\n  CVFormat.acceptSize,\n  'application'\n);\nexport const overTokenErrorText = generateOverTokenErrorText();\nexport const failedOCRErrorText = generateFailedOCRErrorText();\n","export const defaultImage = {\n  companyAvatar:\n    'https://th.bing.com/th/id/OIP.EK1rvrib-MWNflZRM2XiDQHaH_?pid=ImgDet&w=183&h=197&c=7&dpr=1.3',\n  companyCover:\n    'https://png.pngtree.com/background/20210706/original/pngtree-business-background-white-collar-jobs-picture-image_216619.jpg'\n};\n\nexport const avatarFormat = {\n  acceptTypes: ['image/jpeg', 'image/png', 'image/gif'],\n  acceptSize: 1 * 1024 * 1024\n};\nexport const CVFormat = {\n  acceptTypes: ['application/pdf'],\n  acceptSize: 2 * 1024 * 1024\n};\nexport const coverImgFormat = {\n  acceptTypes: ['image/jpeg', 'image/png', 'image/gif'],\n  acceptSize: 4 * 1024 * 1024\n};\n","export const cvAnalysist = `Bây giờ, bạn là một chuyên gia lâu năm trong lĩnh vực Nhân sự. Bạn có khả năng phân tích từ khóa quan trọng trong hồ sơ xin việc. Tôi cần xác định những yếu tố quan trọng trong hồ sơ xin việc sau. Hãy liệt kê 10 từ khóa quan trọng liên quan đến công việc của trong nội dung hồ sơ tôi cung cấp. Các từ khóa này bao gồm cả kỹ năng cứng và mềm, cũng như kinh nghiệm và trình độ chuyên môn. Sắp xếp chúng theo mức độ quan trọng dựa trên tần số xuất hiện trong phần mô tả công việc và yêu cầu công việc. Hãy chú ý những kỹ năng chuyên môn thường theo sau các cụm từ như 'có hiểu biết', 'thành thạo', 'có kinh nghiệm', 'có kiến thức về' để xác định từ khóa kĩ năng cứng (kĩ năng chuyên môn). Đồng thời, cũng phải chú ý tới tên các chứng chỉ, chuyên ngành để xác định từ khóa về trình độ chuyên môn. Ngoài ra, tìm các mô tả về tính cách, cách hành xử, thái độ và sức khỏe của con người để xác định từ khóa về kỹ năng mềm. Kết quả trả về dưới dạng mảng các chuỗi từ khóa (nếu không tìm được từ khóa nào thì trả về danh sách rỗng []). Lưu ý rằng: Mỗi từ khóa tìm được không được quá 20 kí tự.\r\n***Quan trọng: Câu trả lời của bạn (ChatGPT) chứa 10 từ khóa và câu trả lời là ở dạng Array duy nhất, không chứa bất kì lời nào khác. Ví dụ về câu trả lời minh họa là: [\"PHP\", \"Backend\", \"Tiếng hoa\", \"Đàm phán\", \"Làm việc nhóm\", \"Giao tiếp\", \"Thuyết trình\"]\r\nNội dung hồ sơ xin việc cung cấp như sau:\r\n`;\r\n\r\nexport const jobAnalysist = `Bây giờ, bạn là một chuyên gia lâu năm trong lĩnh vực Nhân sự. Bạn có khả năng phân tích từ khóa quan trọng trong tin tuyển dụng. Tôi cần xác định những yếu tố mà nhà tuyển dụng quan tâm trong tin tuyển dụng sau. Hãy liệt kê 10 từ khóa quan trọng liên quan đến công việc của trong nội dung tin tuyển dụng tôi cung cấp. Các từ khóa này bao gồm cả kỹ năng cứng và mềm, cũng như kinh nghiệm chuyên môn. Sắp xếp chúng theo mức độ quan trọng dựa trên tần số xuất hiện trong phần mô tả công việc và yêu cầu công việc. Hãy chú ý những kỹ năng chuyên môn thường theo sau các cụm từ như 'có hiểu biết', 'thành thạo', 'có kinh nghiệm', 'có kiến thức về' để tìm ra từ khóa kĩ năng cứng (kĩ năng chuyên môn). Ngoài ra, tìm các mô tả về tính cách, cách hành xử, thái độ và sức khỏe của con người để tìm ra từ khóa về kỹ năng mềm. Kết quả trả về dưới dạng mảng các chuỗi từ khóa, viết hoa chữ cái đầu tiên của mỗi cụm từ khóa (nếu không tìm được từ khóa nào thì trả về danh sách rỗng []). Lưu ý rằng: Mỗi từ khóa tìm được không được quá 20 kí tự.\r\n***Quan trọng: Câu trả lời của bạn (ChatGPT) là có duy nhất 1 danh sách các từ khóa sau khi dịch sang tiếng Việt và câu trả lời là ở dạng Array duy nhất, không chứa bất kì lời nào khác. Ví dụ về câu trả lời minh họa là: [\"PHP\", \"Backend\", \"Tiếng hoa\", \"Đàm phán\", \"Làm việc nhóm\", \"Giao tiếp\", \"Thuyết trình\"]\r\nNội dung tin tuyển dụng cung cấp như sau:\r\n`;\r\n\r\nexport const RoundOneCheck = `Bây giờ, bạn là một chuyên gia phân tích hồ sơ xin việc.\r\nHãy đọc hồ sơ xin việc (emplyee_Profile) và thông tin tuyển dụng (employer_Requirement) sau đó so sánh và đánh giá xem thông tin emplyee_Profile có phù hợp với thông tin tuyển dụng hay không. Hãy đánh giá xem emplyee_Profile theo các tiêu chí sau.\r\nSau đó, trích lọc ra các thông tin sau: giới tính (sex), ngày sinh (dob), ngành nghề (profession), bằng cấp (degree), kinh nghiệm (experience) và so sánh với yêu cầu tương ứng trong tin tuyển dụng theo các tiêu chí sau:\r\n- 1. Nếu emplyee_Profile thiếu bất kì 1 thông tin sex, dob, profession, degree, experience thì không đạt.\r\n- 2. sex trong emplyee_Profile phải hoàn toàn phù hợp với sex trong employer_Requirement thì mới đạt yêu cầu (ví dụ cùng là Nam hoặc cùng là Nữ).\r\n- 3. Dựa vào ngày sinh (dob) tính ra độ tuổi hiện tại, độ tuổi hiện tại phải lớn hơn minAge và nhỏ hơn maxAge trong employer_Requirement thì mới đạt.\r\n- 4. profession trong emplyee_Profile phải có ít nhất 1 ngành nghề chung ngành với ngành trong profession trong employer_Requirement thì mới đạt yêu cầu, Sử dụng các phương pháp như Phân tích ngữ cảnh, Phân tích ngữ cảnh dựa trên ngữ nghĩa, mạng ngữ nghĩa (Semantic Networks) để đánh giá mức độ liên quan giữa các từ khóa. (Ví dụ Kỹ sư phần mềm, Công nghệ thông tin, Khoa học Máy tính, Web, Frontend, Backend... là mức độ liên quan cao; Quảng cáo, sale, bán sỉ, bán lẻ, Marketing, Bán hàng, Kinh doanh... là mức độ liên quan cao).\r\n- 5. degree trong emplyee_Profile phải cao hơn hoặc bằng với degree trong employer_Requirement thì mới đạt yêu cầu (ví dụ Tiến sĩ > Thạc sĩ > cử nhân > cao đẳng > trung cấp > phổ thông, ... tương tự).\r\n- 6. experience trong emplyee_Profile phải lớn hơn experience trong employer_Requirement thì mới đạt yêu cầu (ví dụ trên 5 năm trở > 5 năm > 4 năm > ...> 1 năm > dưới 1 năm, ... tương tự).\r\n* result chỉ có thể là 1 trong 2 con số -10 hoặc 30.\r\n* Nếu đạt hết TẤT CẢ 6 tiêu chí trên thì result là con số 30. Ví dụ result là: 30\r\n* Nếu có bất kì 1 tiêu chí nào không đạt yêu cầu thì dừng phân tích ngay, đồng thời trả ra result là con số -10. Ví dụ result là: -10\r\n***Lưu ý quan trọng: câu trả lời của bạn (ChatGPT) không quá 25 kí tự, câu trả lời là ở dạng Object bao gồm 2 thuộc tính là id (tương ứng với application_id trong emplyee_Profile.application) và result (là con số result sau khi phân tích, là 1 trong 2 con số 30 hoặc -10). Ngoài ra không kèm theo lời giải thích nào cả. Ví dụ nếu emplyee_Profile.application.id = 1, emplyee_Profile đạt hết tất cả tiêu chí thì trả về:\r\n{\r\n    \"id\": 1,\r\n    \"result\": 30\r\n}`;\r\n\r\nexport const checkContent = `Bây giờ bạn là 1 chuyên gia kiểm duyệt văn bản. Hãy kiểm tra xem trong văn bản có chứa những từ ngữ nhạy cảm, thô tục, vi phạm pháp luật hay không. Kết quả lưu trong thuộc tính result. Nếu có vi phạm thì result = true, nếu không vi phạm thì result = false. \r\n***Lưu ý quan trọng: câu trả lời của bạn (ChatGPT) không quá 25 kí tự, câu trả lời là ở dạng Object như ví dụ bên dưới bao gồm 2 thuộc tính là id (tương ứng với postId) và result (là true nếu vi phạm, false nếu không vi phạm). Ví dụ nếu văn bản có chứa từ ngữ nhạy cảm, thô tục, vi phạm pháp luật thì trả về:\r\n{\r\n    \"id\": 1,\r\n    \"result\": true\r\n}\r\n`;\r\n\r\nexport const extractSkill = `Trích ra danh sách các kĩ năng (bao gồm kĩ năng cứng và kĩ năng mềm, kinh nghiệm chuyên môn) trong hồ sơ xin việc sau. \r\n***Lưu ý quan trọng: Câu trả lời của bạn (ChatGPT) là ở dạng Array duy nhất, không chứa bất kì lời nào khác. Ví dụ câu trả lời là: [\"PHP\", \"Backend\", \"Tiếng hoa\", \"Đàm phán\", \"Làm việc nhóm\", \"Giao tiếp\", \"Thuyết trình\"]. Hãy dịch các kĩ năng sang tiếng Việt, và viết lại từng kĩ năng đã dịch ở dạng từ khóa, viết hoa chữ cái đầu.`;\r\n\r\nexport const translate = `Hãy dịch các từ khóa sau sang tiếng Việt, và viết hoa chữ cái đầu. \r\n***Lưu ý quan trọng: Câu trả lời của bạn (ChatGPT) là ở dạng Array duy nhất, không chứa bất kì lời nào khác. Ví dụ câu trả lời là: [\"PHP\", \"Backend\", \"Tiếng hoa\", \"Đàm phán\", \"Làm việc nhóm\", \"Giao tiếp\", \"Thuyết trình\"]. `;\r\n","const sendChatGPTRequest = async (\r\n  request: string,\r\n  content: any[],\r\n  max_tokens = null,\r\n  logit_bias = null\r\n) => {\r\n  const responses = [];\r\n\r\n  if (!content || content.length === 0) {\r\n    return responses;\r\n  }\r\n\r\n  const sendMessage = async (inputText) => {\r\n    if (!inputText.trim()) return;\r\n\r\n    try {\r\n      const response = await fetch(\r\n        'https://api.chatanywhere.cn/v1/chat/completions',\r\n        {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization:\r\n              'Bearer sk-ASMcBs6iBFaFfCxCizltjPPGTLCkB9tyESkmxxsQb9Tie4Fx'\r\n            // 'Bearer sk-idLv1WJ8H0Xec0FjTujkzGClFhuOLvUcVw7FJBA0ERBhN8Y2' //free\r\n          },\r\n          body: JSON.stringify({\r\n            model: 'gpt-3.5-turbo',\r\n            messages: [\r\n              {\r\n                role: 'system',\r\n                content: request\r\n              },\r\n              { role: 'user', content: inputText }\r\n            ],\r\n            temperature: 0,\r\n            presence_penalty: 0.7,\r\n            frequency_penalty: 0.7,\r\n            max_tokens: max_tokens,\r\n            logit_bias: logit_bias\r\n          })\r\n        }\r\n      );\r\n\r\n      const data = await response.json();\r\n      return data?.choices?.[0]?.message?.content;\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  await Promise.all(\r\n    content.map(async (inputText) => {\r\n      const response = await sendMessage(JSON.stringify(inputText)).catch(\r\n        () => ''\r\n      );\r\n      responses.push(response);\r\n    })\r\n  );\r\n\r\n  return responses;\r\n};\r\n\r\nexport const getEmbedding = async (content: any[]) => {\r\n  const responses = [];\r\n\r\n  if (!content || content.length === 0) {\r\n    return responses;\r\n  }\r\n\r\n  const sendMessage = async (inputText) => {\r\n    if (!inputText) return;\r\n\r\n    try {\r\n      const response = await fetch(\r\n        'https://api.chatanywhere.cn/v1/embeddings',\r\n        {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization:\r\n              'Bearer sk-ASMcBs6iBFaFfCxCizltjPPGTLCkB9tyESkmxxsQb9Tie4Fx'\r\n            // 'Bearer sk-idLv1WJ8H0Xec0FjTujkzGClFhuOLvUcVw7FJBA0ERBhN8Y2' //free\r\n          },\r\n          body: JSON.stringify({\r\n            model: 'text-embedding-3-large',\r\n            input: inputText\r\n            // dimensions: 100\r\n          })\r\n        }\r\n      );\r\n\r\n      const data = await response.json();\r\n      return data?.data?.map((item) => item.embedding);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  await Promise.all(\r\n    content.map(async (inputText) => {\r\n      let i = 0;\r\n      const employer_Requirement = (\r\n        await sendMessage(inputText?.employer_Requirement)\r\n      ).map((res) => ({\r\n        word: inputText?.employer_Requirement[i++],\r\n        result: res\r\n      }));\r\n\r\n      i = 0;\r\n\r\n      const employee_Profile = (\r\n        await sendMessage(inputText?.employee_Profile)\r\n      ).map((res) => ({\r\n        word: inputText?.employee_Profile[i++],\r\n        result: res\r\n      }));\r\n\r\n      responses.push({\r\n        id: inputText?.id,\r\n        employer_Requirement: employer_Requirement,\r\n        employee_Profile: employee_Profile\r\n      });\r\n      console.log(responses);\r\n    })\r\n  );\r\n\r\n  return responses;\r\n};\r\n\r\nexport default sendChatGPTRequest;\r\n","import { AxiosError } from 'axios';\nimport { useQuery } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { AttachedDocument } from 'src/modules/jobProfile/model/index';\nimport { AttachedDocumentService } from 'src/modules/jobProfile/employeeProfileService';\nimport { useEffect, useState } from 'react';\nimport { getAccessToken } from 'src/utils/localStorage';\nimport { useApp } from 'src/modules/app/hooks';\nimport useDocumentHook from './useDocumentHook';\n\nconst useQueryAttachedDocument = () => {\n  const { isEmployee } = useApp();\n  const { setProfile } = useDocumentHook();\n  const isLoggedIn = Boolean(getAccessToken());\n\n  const { data, isLoading, isSuccess, refetch } = useQuery<\n    ResponseData<AttachedDocument>,\n    AxiosError<ResponseData<AttachedDocument>>\n  >(['get-AttachedDocument'], AttachedDocumentService.get, {\n    retry: (failureCount, error) =>\n      error.response.status === 400 ? false : failureCount < 2,\n    refetchOnWindowFocus: false,\n    enabled: isLoggedIn && isEmployee\n  });\n\n  useEffect(() => {\n    // Handle the data or error here\n    if (data) {\n      setProfile(data.data);\n    }\n  }, [isSuccess]);\n\n  return {\n    attachedDocument: data?.data,\n    isLoading,\n    refetch\n  };\n};\n\nexport default useQueryAttachedDocument;\n","import { AxiosError } from 'axios';\nimport { useQuery } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { OnlineProfile } from 'src/modules/jobProfile/model/index';\nimport { OnlineProfileService } from 'src/modules/jobProfile/employeeProfileService';\nimport { useEffect, useState } from 'react';\nimport { getAccessToken } from 'src/utils/localStorage';\nimport { useApp } from 'src/modules/app/hooks';\nimport useOnlineProfile from './useOnlineProfile';\n\nconst useQueryOnlineProfile = () => {\n  const { isEmployee } = useApp();\n  const { setProfile } = useOnlineProfile();\n  const isLoggedIn = Boolean(getAccessToken());\n\n  const { data, isLoading, isSuccess, refetch } = useQuery<\n    ResponseData<OnlineProfile>,\n    AxiosError<ResponseData<OnlineProfile>>\n  >(['get-OnlineProfile'], OnlineProfileService.get, {\n    retry: (failureCount, error) =>\n      error.response.status === 400 ? false : failureCount < 2,\n    refetchOnWindowFocus: false,\n    enabled: isLoggedIn && isEmployee\n  });\n\n  // console.log(data?.data);\n  useEffect(() => {\n    // Handle the data or error here\n    if (data && isSuccess) {\n      setProfile(data?.data);\n    }\n  }, [isSuccess]);\n\n  return {\n    onlineProfile: data?.data,\n    isLoading,\n    refetch\n  };\n};\n\nexport default useQueryOnlineProfile;\n","import { AxiosError } from 'axios';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { useApp } from 'src/modules/app/hooks';\nimport { FollowJobService } from '../jobService';\n\nconst useMutateFollowJobById = () => {\n  const queryClient = useQueryClient();\n  const { toast } = useApp();\n  const { mutate: onFollowJobById, isLoading } = useMutation<\n    ResponseData<any[]>,\n    AxiosError<ResponseData<any[]>>,\n    [id: number]\n  >(([id]) => FollowJobService.create({ jobPosting: id }), {\n    onSuccess: (res) => {\n      if (res.status === 200) {\n        queryClient.invalidateQueries(['get-FollowJobs']);\n        toast.success({ massage: res.message });\n      } else {\n        toast.error({ massage: res.message });\n      }\n    },\n    onError: (error) => {\n      toast.error({ massage: error.response.data.message });\n    }\n  });\n\n  return {\n    onFollowJobById,\n    isLoading\n  };\n};\n\nexport default useMutateFollowJobById;\n","import React, { useEffect, useState } from 'react';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport useQueryFollowJobs from '../hooks/useQueryFollowJobs';\nimport { Box, IconButton } from '@mui/material';\nimport useMutateFollowJobById from '../hooks/useMutateFollowJobById';\nimport { useApp } from 'src/modules/app/hooks';\nimport SuspenseLoader from 'src/components/SuspenseLoader';\nimport { Job } from '../model';\nimport FollowButton from 'src/components/FollowButton';\n\nexport default function FollowJobButton(props) {\n  const { job, sx } = props;\n  const { jobFollow } = useQueryFollowJobs();\n  const { onFollowJobById } = useMutateFollowJobById();\n  const { isEmployee } = useApp();\n  const [isFollow, setIsFollow] = useState(false);\n\n  const handleToggleFollow = (id) => {\n    onFollowJobById([id]);\n    setIsFollow((prev) => !prev);\n  };\n\n  useEffect(() => {\n    const foundItem = jobFollow?.find((item) => item.postId === job?.postId);\n    foundItem && setIsFollow(true);\n  }, [jobFollow, job]);\n\n  if (!job || !isEmployee) return;\n\n  return (\n    <Box\n      onClick={() => handleToggleFollow(job?.postId)}\n      sx={{ display: 'flex', alignItem: 'center', ...sx }}\n    >\n      <FollowButton isFollow={isFollow} />\n    </Box>\n  );\n}\n","import React from 'react';\nimport { Box, Button, Grid, Typography } from '@mui/material';\nimport SelectInput from 'src/components/SelectInput';\nimport FormControl from 'src/components/FormControl';\nimport { useForm } from 'react-hook-form';\nimport {\n  DEGREE,\n  EXPERIENCE,\n  GENDER_OPTION,\n  POSITION_LEVEL,\n  WORKING_FORM\n} from 'src/constants';\nimport FilterAltIcon from '@mui/icons-material/FilterAlt';\nimport { useTheme } from '@emotion/react';\nimport { checkIsMobile } from 'src/utils/responsive';\n\ninterface Option {\n  value: any;\n  label: any;\n}\n\ninterface FormProps {\n  profession: Option | string;\n  workAddress: Option | string;\n  positionLevel: Option | string;\n  degree: Option | string;\n  experience: Option | string;\n  employmentType: Option | string;\n  gender: Option | string;\n}\n\nconst addAllOption = (optionsArray) => {\n  return [{ value: 'Tất cả', label: 'Tất cả' }, ...optionsArray];\n};\n\nconst options = {\n  experience: addAllOption(EXPERIENCE),\n  positionLevel: addAllOption(POSITION_LEVEL),\n  degree: addAllOption(DEGREE),\n  employmentType: addAllOption(WORKING_FORM),\n  sex: GENDER_OPTION\n};\n\nconst defaultValues = {\n  experience: '',\n  positionLevel: '',\n  degree: '',\n  employmentType: '',\n  sex: ''\n};\n\nexport default function JobFilter(props) {\n  const { handleFilter, sx } = props;\n  const {\n    control,\n    reset,\n    handleSubmit,\n    formState: { errors }\n  } = useForm<FormProps>({ defaultValues: defaultValues });\n  const [currentValue, setCurrentValue] = React.useState<any>({});\n\n  const filter = (data) => {\n    handleFilter(data);\n  };\n\n  const clear = () => {\n    setCurrentValue({});\n    reset(defaultValues);\n    handleFilter(defaultValues);\n  };\n\n  const renderFormControl = (option, label) => (\n    <Grid item xs={1.9} key={option}>\n      <FormControl\n        element={<SelectInput />}\n        options={options[option]}\n        control={control}\n        errors={errors}\n        fullWidth\n        id={option}\n        label={label}\n        name={option}\n        onChange={(e) => {\n          filter({ [option]: e.target.value });\n          const curr = { ...currentValue, [option]: e.target.value };\n          setCurrentValue(() => curr);\n          reset(curr);\n        }}\n        sx={{ bgcolor: '#ffff', borderRadius: '5px' }}\n      />\n    </Grid>\n  );\n\n  return (\n    <Box\n      sx={[\n        {\n          borderTopLeftRadius: '10px',\n          borderTopRightRadius: '10px',\n          boxShadow: '2px 2px 6px #d2d7db',\n          height: 80,\n          // bgcolor: '#ffdd9f',\n          bgcolor: '#fee9f7',\n          display: 'flex',\n          alignItems: 'center',\n          pl: 2,\n          ...sx\n        }\n      ]}\n    >\n      <Grid container spacing={0.3} display=\"flex\" alignItems=\"center\">\n        <Grid item xs={0.5}>\n          <FilterAltIcon />\n        </Grid>\n        {['experience', 'positionLevel', 'degree', 'employmentType', 'sex'].map(\n          (option) =>\n            renderFormControl(\n              option,\n              option === 'employmentType'\n                ? 'Hình thức'\n                : option === 'sex'\n                ? 'Giới tính'\n                : option === 'positionLevel'\n                ? 'Cấp bậc'\n                : option === 'degree'\n                ? 'Trình độ'\n                : 'Kinh nghiệm'\n            )\n        )}\n        <Grid item xs={0.9}>\n          <Button\n            onClick={handleSubmit(filter)}\n            variant=\"text\"\n            sx={{ height: 30, color: '#042a8f' }}\n          >\n            Lọc\n          </Button>\n        </Grid>\n        <Grid item xs={0.9}>\n          <Button\n            onClick={clear}\n            variant=\"text\"\n            sx={{ height: 30, color: '#646464' }}\n          >\n            Huỷ\n          </Button>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n","import { useState } from 'react';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  Typography,\n  Grid\n} from '@mui/material';\nimport BusinessIcon from '@mui/icons-material/Business';\nimport LocalAtmIcon from '@mui/icons-material/LocalAtm';\nimport LocationOnOutlinedIcon from '@mui/icons-material/LocationOnOutlined';\nimport LinkText from 'src/components/LinkText';\nimport { defaultImage } from 'src/constants/uploadFileRule';\nimport FollowJobButton from './FollowJobButton';\nimport { rewriteUrl } from 'src/utils/rewriteUrl';\n\nfunction SmallJobCard({ job }) {\n  const [companyAvatar, setCompanyAvatar] = useState(\n    job?.employer?.logo || defaultImage.companyAvatar\n  );\n\n  return (\n    <Card\n      sx={{\n        border: 1,\n        borderRadius: '3px',\n        borderColor: '#98E4FF',\n        height: 170\n      }}\n    >\n      <CardHeader\n        sx={{\n          py: 1,\n          color: '#aa720a',\n          overflow: 'hidden',\n          textOverflow: 'ellipsis',\n          display: '-webkit-box',\n          WebkitBoxOrient: 'vertical',\n          WebkitLineClamp: 2,\n          whiteSpace: 'normal',\n          height: '3.5em'\n        }}\n        title={\n          <Box display={'flex'}>\n            <Box\n              component={LinkText}\n              to={`/job/${rewriteUrl(job?.jobTitle)}?id=${btoa(job?.postId)}`}\n              state={{\n                postId: job?.postId\n              }}\n              flex={1}\n              sx={{\n                ':hover': {\n                  color: '#ce8b0e'\n                }\n              }}\n            >\n              {job?.jobTitle}\n            </Box>\n            <FollowJobButton job={job} />\n          </Box>\n        }\n      />\n      <CardContent\n        sx={{ display: 'flex', flexDirection: 'row', gap: 4, pt: 1 }}\n      >\n        <Grid container spacing={2}>\n          <Grid item md={4} sm={6} xs={3}>\n            <Avatar\n              src={companyAvatar}\n              variant=\"rounded\"\n              sx={{\n                maxWidth: 100,\n                width: 'auto',\n                maxHeight: 90,\n                height: 'auto',\n                objectFit: 'cover'\n              }}\n            />\n          </Grid>\n          <Grid item md={8} sm={6} xs={9}>\n            <Box display=\"flex\" flexDirection=\"column\" gap={1}>\n              <Box display=\"flex\">\n                <BusinessIcon sx={{ maxHeight: 20, color: 'grey.700' }} />\n                <Typography\n                  sx={{\n                    overflow: 'hidden',\n                    textOverflow: 'ellipsis',\n                    display: '-webkit-box',\n                    WebkitBoxOrient: 'vertical',\n                    WebkitLineClamp: 2,\n                    whiteSpace: 'normal',\n                    maxWidth: '90%'\n                  }}\n                >\n                  {job?.employer?.companyName}\n                </Typography>\n              </Box>\n              <Box display=\"flex\">\n                <LocalAtmIcon sx={{ maxHeight: 20, color: 'grey.700' }} />\n                <Typography color=\"secondary\" fontWeight={700}>\n                  {job?.minSalary || job?.maxSalary\n                    ? `${job?.minSalary || 'Thương lượng'} - ${\n                        job?.maxSalary || 'Thương lượng'\n                      } triệu`\n                    : 'Thương lượng'}\n                </Typography>\n              </Box>\n              <Box display=\"flex\">\n                <LocationOnOutlinedIcon\n                  sx={{ maxHeight: 18, color: 'grey.700' }}\n                />\n                <Typography\n                  sx={{\n                    overflow: 'hidden',\n                    textOverflow: 'ellipsis',\n                    whiteSpace: 'nowrap',\n                    maxWidth: '90%'\n                  }}\n                >\n                  {job?.workAddress}\n                </Typography>\n              </Box>\n            </Box>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default SmallJobCard;\n","import { AxiosError } from 'axios';\nimport { useQuery } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { Job } from '../model';\nimport { FollowJobService } from '../jobService';\nimport { useApp } from 'src/modules/app/hooks';\n\ninterface responseType {\n  userId: number;\n  jobs: any[];\n}\n\nconst useQueryFollowJobs = (params?) => {\n  const { isEmployee } = useApp();\n  const { data, isLoading, refetch } = useQuery<\n    ResponseData<responseType>,\n    AxiosError<ResponseData<responseType>>\n  >(['get-FollowJobs', params?.page], () => FollowJobService.get({ params }), {\n    keepPreviousData: true,\n    retry: 1,\n    refetchOnWindowFocus: false,\n    enabled: isEmployee\n  });\n\n  return {\n    jobFollow: data?.data?.jobs,\n    isLoading,\n    refetch\n  };\n};\n\nexport default useQueryFollowJobs;\n","import { AxiosError } from 'axios';\nimport { useQuery } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { TotalResults } from '../jobService';\n\ninterface responseType {\n  totalResults: number;\n}\n\nconst useQueryTotalResultOfJobs = (params?, querykey = null) => {\n  // debugger;\n  const { data, isLoading, refetch } = useQuery<\n    ResponseData<responseType>,\n    AxiosError<ResponseData<responseType>>\n  >(\n    [querykey || 'get-TotalResultOfJobs', params],\n    () => {\n      for (const key in params) {\n        if (params[key] === 'Tất cả') {\n          params[key] = '';\n        }\n      }\n      return TotalResults.get({ params });\n    },\n    {\n      retry: 1,\n      refetchOnWindowFocus: false\n    }\n  );\n\n  return {\n    totalResults: data?.data?.totalResults,\n    isLoading,\n    refetch\n  };\n};\n\nexport default useQueryTotalResultOfJobs;\n","import { Box, Card, Grid, Typography, useTheme } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport Link from 'src/components/Link';\nimport Pagination from 'src/components/Pagination';\nimport SuspenseLoader from 'src/components/SuspenseLoader';\nimport JobFilter from 'src/modules/jobs/components/JobFilter';\nimport SmallJobCard from 'src/modules/jobs/components/SmallJobCard';\nimport useQueryAllJob from 'src/modules/jobs/hooks/useQueryAllJob';\nimport useQueryTotalResultOfJobs from 'src/modules/jobs/hooks/useQueryTotalResultOfJobs';\nimport { Job } from 'src/modules/jobs/model';\nimport { compareDegrees, compareExperience } from 'src/utils/compareEnum';\n\nexport default function JobRecommendTab(props) {\n  const { id, profile } = props;\n  const { keywords, profession, degree, experience, sex } = profile;\n  const [currentPage, setCurrentPage] = useState(1);\n  const [filteredJob, setFilteredJob] = useState<Job[]>([]);\n  const [filter, setFilter] = useState({\n    profession: profession,\n    employmentType: '',\n    degree: '',\n    experience: '',\n    positionLevel: '',\n    sex: sex\n  });\n\n  console.log(filter);\n  const { totalResults, refetch: refetchTotal } = useQueryTotalResultOfJobs(\n    {\n      keywords: keywords,\n      profession: profession,\n      sex: sex,\n      ...filter\n    },\n    id\n  );\n\n  const pageSize = 4;\n  const totalPages = Math.ceil(totalResults / pageSize) || 1;\n  // if (id === 'online') {\n  //   setOnlineTotalPage(totalPages);\n  // } else if (id === 'document') setDocumentTotalPage(totalPages);\n\n  const { jobs, isLoading, isFetching } = useQueryAllJob({\n    keywords: keywords,\n    profession: profession,\n    page: currentPage,\n    num: pageSize,\n    ...filter\n  });\n\n  const handlePageChange = (pageNumber: number) => {\n    setCurrentPage(pageNumber);\n  };\n\n  const handleFilter = (data: any) => {\n    setFilter((prev) => ({ ...prev, ...data }));\n  };\n\n  useEffect(() => {\n    // filter jobs by profession, degree, experience\n    if (profession && degree && experience) {\n      const result = jobs.filter(\n        (job) => profession.includes(job.profession)\n        // && compareDegrees(degree, job.degree) > 0 &&\n        // compareExperience(experience, job.experience) > 0\n      );\n      // if (JSON.stringify(result) === JSON.stringify(filteredJob)) return;\n      setFilteredJob(jobs);\n    } else setFilteredJob(jobs);\n\n    const section = document.getElementById(id);\n    // if (section) section.scrollIntoView({ behavior: 'smooth' });\n  }, [JSON.stringify(jobs)]);\n\n  if (isLoading) return <SuspenseLoader />;\n  return (\n    <Card sx={{ borderRadius: 0, boxShadow: '2px 2px 6px #aae2f7' }}>\n      <Box\n        display=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        sx={{\n          bgcolor: '#f0e9fe',\n          borderTopRadius: 1,\n          px: 3,\n          py: 2\n        }}\n      >\n        <Box display=\"flex\" justifyContent=\"space-between\">\n          <Typography fontWeight={700} fontSize={20} alignSelf=\"end\">\n            Việc làm gợi ý\n          </Typography>\n        </Box>\n      </Box>\n      <JobFilter\n        handleFilter={handleFilter}\n        sx={{ bgcolor: '#fee9f7', borderRadius: 0, border: 0 }}\n      />\n      <Box p={3}>\n        <Grid container mb={3} spacing={2}>\n          {filteredJob.map((job, index) => (\n            <Grid key={job?.postId} item xs={12} sm={6}>\n              <SmallJobCard key={index} job={job} />\n            </Grid>\n          ))}\n          {filteredJob.length === 0 && (\n            <Grid item xs={12}>\n              <Typography\n                fontSize={16}\n                color=\"#9999\"\n                fontStyle=\"italic\"\n                textAlign=\"center\"\n              >\n                Không tìm được việc làm phù hợp\n              </Typography>\n            </Grid>\n          )}\n        </Grid>\n        <Pagination\n          totalPages={totalPages}\n          currentPage={currentPage}\n          handlePageChange={handlePageChange}\n        />\n      </Box>\n    </Card>\n  );\n}\n","import React from 'react';\nimport { Box, Button, styled } from '@mui/material';\nimport { useForm } from 'react-hook-form';\nimport FormControl from 'src/components/FormControl';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport { User } from 'src/modules/users/model';\n\nconst Input = styled('input')({\n  display: 'none'\n});\n\nconst FileUploader = ({ isLoading, handleUploadFile }) => {\n  const { control } = useForm<User>({});\n  return (\n    <Box>\n      <Button\n        component=\"label\"\n        startIcon={<CloudUploadIcon />}\n        variant=\"outlined\"\n        color=\"secondary\"\n        disabled={isLoading}\n      >\n        <FormControl\n          element={<Input type=\"file\" accept=\".pdf\" />}\n          control={control}\n          name=\"CV\"\n          id=\"CV\"\n          label=\"CV đính kèm\"\n          onChange={handleUploadFile}\n          disabled={isLoading}\n        />\n        Tải file\n      </Button>\n    </Box>\n  );\n};\n\nexport default FileUploader;\n","import React from 'react';\nimport { Box, Typography, Link } from '@mui/material';\n\nconst ProfileInfo = ({ id, profile, uploadedCV }) => {\n  const isUploadCV = id === 'upload-cv';\n\n  if (isUploadCV || !profile?.userId) {\n    return (\n      <Box display=\"flex\">\n        <Typography mb={1} color=\"grey.700\" mr={2}>\n          {isUploadCV ? (\n            !uploadedCV.url && <em>* Vui lòng gửi lên CV xin việc của bạn !</em>\n          ) : (\n            <em>* Chưa có hồ sơ trong hệ thống !</em>\n          )}\n        </Typography>\n        {!isUploadCV && (\n          <Link href=\"/employee/recruitment-profile\">\n            <em>Đến tạo hồ sơ</em>\n          </Link>\n        )}\n      </Box>\n    );\n  }\n\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <img\n        src={\n          id === 'online'\n            ? 'https://cdn-icons-png.flaticon.com/128/1309/1309245.png'\n            : 'https://cdn-icons-png.flaticon.com/512/3135/3135796.png'\n        }\n        width={50}\n        color=\"secondary\"\n        alt=\"Profile Image\"\n      />\n      <Typography fontWeight={700} fontSize={16} lineHeight={3} ml={2}>\n        {profile?.jobTitle}\n      </Typography>\n    </Box>\n  );\n};\n\nexport default ProfileInfo;\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Divider,\r\n  CircularProgress,\r\n  Grid\r\n} from '@mui/material';\r\nimport ContactPageIcon from '@mui/icons-material/ContactPage';\r\nimport CustomContainer from 'src/components/CustomContainer';\r\nimport pdfToText from 'react-pdftotext';\r\nimport JobRecommendTab from './JobRecommendTab';\r\nimport { cvAnalysist } from 'src/gpt/roles';\r\nimport {\r\n  applicationErrorText,\r\n  failedOCRErrorText,\r\n  overTokenErrorText\r\n} from 'src/components/UploadError';\r\nimport { CVFormat } from 'src/constants/uploadFileRule';\r\nimport { pdfjs } from 'react-pdf';\r\nimport useOnlineProfile from 'src/modules/jobProfile/onlineProfile/hooks/useOnlineProfile';\r\nimport useDocumentHook from 'src/modules/jobProfile/attachedDocument/hooks/useDocumentHook';\r\nimport { getFileByUrl } from 'src/common/firebaseService';\r\nimport FileUploader from 'src/components/FileUploader';\r\nimport FileFormatInfo from 'src/components/FileFormatInfo';\r\nimport ProfileInfo from './ProfileInfo';\r\nimport { loadKeywords, preProcessData } from 'src/utils/keywords';\r\nimport { AttachedDocument, OnlineProfile } from 'src/modules/jobProfile/model';\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\nimport sendChatGPTRequest from 'src/gpt/sendChatGPTRequest';\r\n\r\nconst ACCEPTED_FILE_TYPES = CVFormat.acceptTypes;\r\nconst ACCEPTED_FILE_SIZE = CVFormat.acceptSize;\r\nconst ACCEPTED_FILE_SIZE_MB = CVFormat.acceptSize / 1024 / 1024;\r\n\r\nconst onlineRecommend = JobRecommendTab;\r\nconst documentRecommend = JobRecommendTab;\r\n\r\nconst AnalyzeProfile = (props) => {\r\n  const { id } = props;\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [failedOCR, setFailedOCR] = useState(false);\r\n  const [overToken, setOverToken] = useState(false);\r\n  const [currentDoc, setCurrentDoc] = useState({\r\n    file: null,\r\n    url: ''\r\n  });\r\n  const [analysisResults, setAnalysisResults] = useState([]);\r\n  const [keywords, setKeywords] = useState('');\r\n  const [profile, setProfile] = useState<\r\n    Partial<OnlineProfile> | Partial<AttachedDocument>\r\n  >(null);\r\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\r\n  const [message, setMessage] = useState([]);\r\n  const { profile: onlineProfile } = useOnlineProfile();\r\n  const { profile: documentProfile } = useDocumentHook();\r\n\r\n  const handleUploadFile = async (e) => {\r\n    setFailedOCR(false);\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n    if (isFileValid(file)) {\r\n      processFile(file);\r\n    } else {\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n  const isFileValid = (file) => {\r\n    return (\r\n      ACCEPTED_FILE_TYPES.includes(file.type) && file.size <= ACCEPTED_FILE_SIZE\r\n    );\r\n  };\r\n\r\n  const processFile = async (file) => {\r\n    setError(false);\r\n    setOverToken(false);\r\n    setIsLoading(true);\r\n    const fileUrl = URL.createObjectURL(file);\r\n    try {\r\n      const text = await pdfToText(file);\r\n      const tokens = text.split(/\\s+/);\r\n      const tokenCount = tokens.length;\r\n      if (tokenCount > 4000) {\r\n        setOverToken(true);\r\n      } else {\r\n        setCurrentDoc({ url: fileUrl, file: file });\r\n        setMessage(() => [text]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to extract text from pdf');\r\n      setFailedOCR(true);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleAnalysis = async () => {\r\n    if (id === 'upload-cv' && !currentDoc.url) return;\r\n    if (id !== 'upload-cv' && !profile?.userId) return;\r\n\r\n    if (profile?.keywords) {\r\n      setKeywords(profile?.keywords?.split(', ')?.slice(0, 15).join(', '));\r\n      return;\r\n    }\r\n\r\n    setIsAnalyzing(true);\r\n    if (id === 'upload-cv') {\r\n      const result = await sendChatGPTRequest(cvAnalysist, message, null, {\r\n        '58': 5,\r\n        '60': 5\r\n      });\r\n      setAnalysisResults(result);\r\n      return;\r\n    }\r\n    const processedProfile = preProcessData(profile, id);\r\n    const skillsArray = profile?.skills?.split(', ');\r\n    if (id === 'document') {\r\n      try {\r\n        const filePath = await getFileByUrl(documentProfile?.CV);\r\n        const response = await fetch(filePath);\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch file');\r\n        }\r\n        const blob = await response.blob();\r\n        const text = await pdfToText(blob);\r\n\r\n        setMessage((prev) => [{ ...prev, CV: text }]);\r\n        const result = await sendChatGPTRequest(\r\n          cvAnalysist,\r\n          [{ ...processedProfile, CV: text }],\r\n          null,\r\n          {\r\n            '58': 5,\r\n            '60': 5\r\n          }\r\n        );\r\n        setAnalysisResults([...skillsArray, ...result]);\r\n      } catch (error) {\r\n        console.error('Error creating local URL:', error);\r\n      }\r\n    } else {\r\n      setMessage(() => [processedProfile]);\r\n      const result = await sendChatGPTRequest(\r\n        cvAnalysist,\r\n        [processedProfile],\r\n        null,\r\n        {\r\n          '58': 5,\r\n          '60': 5\r\n        }\r\n      );\r\n      setAnalysisResults([...skillsArray, ...result]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (id === 'online') setProfile(onlineProfile);\r\n    else if (id === 'document') setProfile(documentProfile);\r\n  }, [onlineProfile, documentProfile]);\r\n\r\n  useEffect(() => {\r\n    const keywords = loadKeywords(analysisResults, JSON.stringify(message));\r\n    setKeywords(keywords);\r\n    setIsAnalyzing(false);\r\n    const section = document.getElementById(`recommend-${id}`);\r\n\r\n    if (section) section.scrollIntoView({ behavior: 'smooth' });\r\n  }, [analysisResults]);\r\n\r\n  return (\r\n    <Box id={id}>\r\n      <CustomContainer sx={{ mb: 1, mt: 3 }}>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box display=\"flex\">\r\n            <Typography fontWeight={700} fontSize={21} lineHeight={3}>\r\n              Phân tích Hồ sơ{' '}\r\n              {id === 'online'\r\n                ? 'trực tuyến'\r\n                : id === 'document'\r\n                ? 'đính kèm'\r\n                : 'từ máy tính'}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        <Divider />\r\n        <Box py={2}>\r\n          <ProfileInfo id={id} profile={profile} uploadedCV={currentDoc} />\r\n          {id === 'upload-cv' && currentDoc.url && (\r\n            <Box display=\"flex\">\r\n              <ContactPageIcon sx={{ width: 50, height: 50 }} color=\"info\" />\r\n              <Box\r\n                textAlign=\"left\"\r\n                justifyContent=\"left\"\r\n                component={Button}\r\n                color=\"inherit\"\r\n                width=\"100%\"\r\n                onClick={() => window.open(currentDoc.url, '_blank')}\r\n              >\r\n                {currentDoc.file.name}\r\n                {isLoading && <CircularProgress />}\r\n              </Box>\r\n            </Box>\r\n          )}\r\n          {error && applicationErrorText}\r\n          {overToken && overTokenErrorText}\r\n          {failedOCR && failedOCRErrorText}\r\n          <Box display=\"flex\" mt={2}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleAnalysis}\r\n              disabled={isAnalyzing || (!profile?.userId && !currentDoc?.url)}\r\n              sx={{ mr: 2 }}\r\n            >\r\n              Phân tích Hồ sơ\r\n            </Button>\r\n\r\n            {id === 'upload-cv' && (\r\n              <FileUploader\r\n                isLoading={isLoading}\r\n                handleUploadFile={handleUploadFile}\r\n              />\r\n            )}\r\n          </Box>\r\n          {id === 'upload-cv' && (\r\n            <FileFormatInfo\r\n              acceptTypes={ACCEPTED_FILE_TYPES}\r\n              acceptSize_MB={ACCEPTED_FILE_SIZE_MB}\r\n            />\r\n          )}\r\n          {isAnalyzing && <CircularProgress sx={{ mx: '50%' }} />}\r\n          {keywords && (\r\n            <Grid item xs={12}>\r\n              <Divider />\r\n              <Typography mt={2}>\r\n                <b>Từ khóa:</b> <em>{keywords}</em>\r\n              </Typography>\r\n            </Grid>\r\n          )}\r\n        </Box>\r\n      </CustomContainer>\r\n\r\n      {keywords && (\r\n        <JobRecommendTab id={id} profile={profile || { keywords: keywords }} />\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AnalyzeProfile;\r\n","import React, { useEffect, useState } from 'react';\nimport {\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Container,\n  Divider,\n  Grid,\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  Input,\n  FormControlLabel,\n  Checkbox\n} from '@mui/material';\nimport useOnlineProfile from 'src/modules/jobProfile/onlineProfile/hooks/useOnlineProfile';\nimport useDocumentHook from 'src/modules/jobProfile/attachedDocument/hooks/useDocumentHook';\nimport useQueryOnlineProfile from 'src/modules/jobProfile/onlineProfile/hooks/useQueryOnlineProfile';\nimport useQueryAttachedDocument from 'src/modules/jobProfile/attachedDocument/hooks/useQueryAttachedDocument';\nimport AnalyzeProfile from './AnalyzeProfile';\nimport SuspenseLoader from 'src/components/SuspenseLoader';\n\nconst JobRecommend = () => {\n  const { isLoading: isLoadingOnline } = useQueryOnlineProfile();\n  const { isLoading: isLoadingDocument } = useQueryAttachedDocument();\n\n  if (isLoadingOnline || isLoadingDocument) return <SuspenseLoader />;\n  return (\n    <Container maxWidth=\"md\" style={{ marginTop: 30 }}>\n      <AnalyzeProfile id=\"online\" />\n      <AnalyzeProfile id=\"document\" />\n      <AnalyzeProfile id=\"upload-cv\" />\n    </Container>\n  );\n};\n\nexport default JobRecommend;\n","import _ from 'lodash';\r\nimport { AttachedDocument, OnlineProfile } from 'src/modules/jobProfile/model';\r\n\r\n// export function tfidfReview(keywordArray: string[], documentText: string) {\r\n//   const termFreq = keywordArray.reduce((result, keywordArray) => {\r\n//     const regex = new RegExp(`\\\\b${keywordArray}\\\\b`, 'gi');\r\n//     const matches = documentText.match(regex) || [];\r\n//     result[keywordArray] = matches.length;\r\n//     return result;\r\n//   }, {});\r\n\r\n//   const totalWords = documentText.split(/\\s+/).length;\r\n\r\n//   const tfidf = {};\r\n\r\n//   Object.entries(termFreq).forEach(([word, termCount]) => {\r\n//     if (typeof termCount === 'number') {\r\n//       // Check if termCount is a number\r\n//       const tf = termCount / totalWords;\r\n//       const idf = Math.log(keywordArray.length / (termCount || 1));\r\n//       tfidf[word] = tf * idf;\r\n//     } else {\r\n//       // Handle the case where termCount is not a number\r\n//       console.error(`Term count for \"${word}\" is not a number.`);\r\n//     }\r\n//   });\r\n\r\n//   return _.entries(tfidf)\r\n//     .sort((a, b) => b[1] - a[1])\r\n//     .map((entry) => entry[0]);\r\n// }\r\n\r\nexport const loadKeywords = (analysisResults: any[], document?: any) => {\r\n  if (analysisResults.length <= 0 && !Boolean(analysisResults[0])) return '';\r\n\r\n  const result = analysisResults[0];\r\n  if (!result) return '';\r\n\r\n  const startIndex = result.indexOf('[');\r\n  if (startIndex === -1) {\r\n    console.log(\"Không tìm thấy ký tự '['\");\r\n    return '';\r\n  }\r\n\r\n  // Tìm vị trí kết thúc của ']'\r\n  const endIndex = result.lastIndexOf(']');\r\n  if (endIndex === -1) {\r\n    console.log(\"Không tìm thấy ký tự ']'\");\r\n    return '';\r\n  }\r\n\r\n  // Trích xuất chuỗi con từ vị trí startIndex đến endIndex\r\n  const extractedString = result\r\n    .substring(startIndex + 1, endIndex)\r\n    .replace(/[\"]/g, '');\r\n\r\n  // B1: Thay thế dấu \"'\" thành dấu '\"' để đảm bảo JSON hợp lệ\r\n  const jsonString = extractedString.replace(/[_!@#$%^&*;|<>'\"\\n\\t\\r]/g, '');\r\n\r\n  // B2: Parse string sang array\r\n  const keywordArray = jsonString.split(',');\r\n\r\n  const keywordList = keywordArray.slice(0, 20);\r\n  return keywordList?.join(', ');\r\n};\r\n\r\nfunction removeDateAttributes(data) {\r\n  return data.map((item) => {\r\n    const { startDate, endDate, id, isDoing, ...rest } = item;\r\n    return rest;\r\n  });\r\n}\r\n\r\nconst removeAttributes = (\r\n  profile: Partial<OnlineProfile | AttachedDocument>,\r\n  profileType: string,\r\n  cvText?: string\r\n) => {\r\n  // if profile type is OnlineProfile then return\r\n  if (profileType === 'online') {\r\n    const profileData = profile as Partial<OnlineProfile>;\r\n    return {\r\n      jobTitle: profileData?.jobTitle,\r\n      profession: profileData?.profession,\r\n      work_experiences: profileData?.work_experiences.map((experience) => {\r\n        return {\r\n          jobTitle: experience.jobTitle,\r\n          jobDescription: experience.jobDescription\r\n        };\r\n      }),\r\n      education_informations: profileData?.education_informations.map(\r\n        (education) => education.specialization\r\n      ),\r\n      another_degrees: profileData?.another_degrees?.map(\r\n        (degree) => degree.degreeName\r\n      )\r\n    };\r\n  } else {\r\n    return {\r\n      jobTitle: profile?.jobTitle,\r\n      profession: profile?.profession,\r\n      cvContent: cvText\r\n    };\r\n  }\r\n};\r\n\r\ntype profileType = 'online' | 'document';\r\nexport function preProcessData(\r\n  object,\r\n  profileType: profileType,\r\n  cvText?: string\r\n) {\r\n  const dataToAnalyze = removeAttributes(object, profileType, cvText);\r\n  return dataToAnalyze;\r\n}\r\n","export function rewriteUrl(url) {\n  const Alphabet = {\n    à: 'a',\n    á: 'a',\n    ả: 'a',\n    ã: 'a',\n    ạ: 'a',\n    ă: 'a',\n    ắ: 'a',\n    ằ: 'a',\n    ẳ: 'a',\n    ẵ: 'a',\n    ặ: 'a',\n    â: 'a',\n    ấ: 'a',\n    ầ: 'a',\n    ẩ: 'a',\n    ẫ: 'a',\n    ậ: 'a',\n    đ: 'd',\n    è: 'e',\n    é: 'e',\n    ẻ: 'e',\n    ẽ: 'e',\n    ẹ: 'e',\n    ê: 'e',\n    ế: 'e',\n    ề: 'e',\n    ể: 'e',\n    ễ: 'e',\n    ệ: 'e',\n    ì: 'i',\n    í: 'i',\n    ỉ: 'i',\n    ĩ: 'i',\n    ị: 'i',\n    ò: 'o',\n    ó: 'o',\n    ỏ: 'o',\n    õ: 'o',\n    ọ: 'o',\n    ô: 'o',\n    ố: 'o',\n    ồ: 'o',\n    ổ: 'o',\n    ỗ: 'o',\n    ộ: 'o',\n    ơ: 'o',\n    ớ: 'o',\n    ờ: 'o',\n    ở: 'o',\n    ỡ: 'o',\n    ợ: 'o',\n    ù: 'u',\n    ú: 'u',\n    ủ: 'u',\n    ũ: 'u',\n    ụ: 'u',\n    ư: 'u',\n    ứ: 'u',\n    ừ: 'u',\n    ử: 'u',\n    ữ: 'u',\n    ự: 'u',\n    ỳ: 'y',\n    ý: 'y',\n    ỷ: 'y',\n    ỹ: 'y',\n    ỵ: 'y',\n    À: 'A',\n    Á: 'A',\n    Ả: 'A',\n    Ã: 'A',\n    Ạ: 'A',\n    Ă: 'A',\n    Ắ: 'A',\n    Ằ: 'A',\n    Ẳ: 'A',\n    Ẵ: 'A',\n    Ặ: 'A',\n    Â: 'A',\n    Ấ: 'A',\n    Ầ: 'A',\n    Ẩ: 'A',\n    Ẫ: 'A',\n    Ậ: 'A',\n    Đ: 'D',\n    È: 'E',\n    É: 'E',\n    Ẻ: 'E',\n    Ẽ: 'E',\n    Ẹ: 'E',\n    Ê: 'E',\n    Ế: 'E',\n    Ề: 'E',\n    Ể: 'E',\n    Ễ: 'E',\n    Ệ: 'E',\n    Ì: 'I',\n    Í: 'I',\n    Ỉ: 'I',\n    Ĩ: 'I',\n    Ị: 'I',\n    Ò: 'O',\n    Ó: 'O',\n    Ỏ: 'O',\n    Õ: 'O',\n    Ọ: 'O',\n    Ô: 'O',\n    Ố: 'O',\n    Ồ: 'O',\n    Ổ: 'O',\n    Ỗ: 'O',\n    Ộ: 'O',\n    Ơ: 'O',\n    Ớ: 'O',\n    Ờ: 'O',\n    Ở: 'O',\n    Ỡ: 'O',\n    Ợ: 'O',\n    Ù: 'U',\n    Ú: 'U',\n    Ủ: 'U',\n    Ũ: 'U',\n    Ụ: 'U',\n    Ư: 'U',\n    Ứ: 'U',\n    Ừ: 'U',\n    Ử: 'U',\n    Ữ: 'U',\n    Ự: 'U',\n    Ỳ: 'Y',\n    Ý: 'Y',\n    Ỷ: 'Y',\n    Ỹ: 'Y',\n    Ỵ: 'Y'\n  };\n  const specialCharacter = [\n    '!',\n    '@',\n    '#',\n    '$',\n    '%',\n    '^',\n    '&',\n    '*',\n    '_',\n    '-',\n    '+',\n    '=',\n    '{',\n    '}',\n    '[',\n    ']',\n    '|',\n    '\\\\',\n    ':',\n    ';',\n    '\"',\n    \"'\",\n    '<',\n    '>',\n    ',',\n    '.',\n    '/',\n    '?',\n    ' '\n  ];\n\n  let chuoiKhongDau = '';\n  for (var i = 0; i < url?.length; i++) {\n    if (Alphabet[url[i]]) {\n      chuoiKhongDau += Alphabet[url[i]];\n    } else if (!specialCharacter.includes(url[i])) {\n      // Không thay đổi các khoảng trắng\n      chuoiKhongDau += url[i];\n    } else if (!chuoiKhongDau.endsWith('-')) {\n      chuoiKhongDau += '-';\n    }\n  }\n  return chuoiKhongDau;\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM14 13v4h-4v-4H7l5-5 5 5h-3z\"\n}), 'CloudUpload');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M14 2H6c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V8l-6-6zm-2 8c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2zm4 8H8v-.57c0-.81.48-1.53 1.22-1.85.85-.37 1.79-.58 2.78-.58.99 0 1.93.21 2.78.58.74.32 1.22 1.04 1.22 1.85V18z\"\n}), 'ContactPage');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z\"\n}), 'FavoriteBorder');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61z\"\n}), 'FilterAlt');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M11 17h2v-1h1c.55 0 1-.45 1-1v-3c0-.55-.45-1-1-1h-3v-1h4V8h-2V7h-2v1h-1c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1h3v1H9v2h2v1zm9-13H4c-1.11 0-1.99.89-1.99 2L2 18c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V6c0-1.11-.89-2-2-2zm0 14H4V6h16v12z\"\n}), 'LocalAtm');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zM7 9c0-2.76 2.24-5 5-5s5 2.24 5 5c0 2.88-2.88 7.19-5 9.88C9.92 16.21 7 11.85 7 9z\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"12\",\n  cy: \"9\",\n  r: \"2.5\"\n}, \"1\")], 'LocationOnOutlined');\nexports.default = _default;"],"names":["_ref","acceptTypes","acceptSize_MB","_jsxs","Typography","fontSize","color","mt","children","join","replace","concat","FollowButton","props","isFollow","isFollowing","setIsFollow","useState","useEffect","_jsx","Box","onClick","id","prev","sx","display","alignItem","FavoriteIcon","FavoriteBorderIcon","LinkWrapper","styled","Link","theme","textDecoration","colors","info","dark","primary","light","SelectInput","options","label","labelmargintop","FormControl","fullWidth","InputLabel","size","Select","map","item","idx","MenuItem","value","generateErrorText","object","acceptSize","fileType","typeRegex","RegExp","my","fontWeight","avatarErrorText","avatarFormat","coverErrorText","coverImgFormat","applicationErrorText","CVFormat","overTokenErrorText","failedOCRErrorText","defaultImage","companyAvatar","companyCover","cvAnalysist","jobAnalysist","RoundOneCheck","checkContent","extractSkill","translate","getEmbedding","async","responses","content","length","sendMessage","inputText","_data$data","response","fetch","method","headers","Authorization","body","JSON","stringify","model","input","data","json","embedding","error","console","Promise","all","i","employer_Requirement","res","word","result","employee_Profile","push","log","request","max_tokens","arguments","undefined","logit_bias","trim","_data$choices","_data$choices$","_data$choices$$messag","messages","role","temperature","presence_penalty","frequency_penalty","choices","message","catch","useQueryAttachedDocument","isEmployee","useApp","setProfile","useDocumentHook","isLoggedIn","Boolean","getAccessToken","isLoading","isSuccess","refetch","useQuery","AttachedDocumentService","get","retry","failureCount","status","refetchOnWindowFocus","enabled","attachedDocument","useQueryOnlineProfile","useOnlineProfile","OnlineProfileService","onlineProfile","useMutateFollowJobById","queryClient","useQueryClient","toast","mutate","onFollowJobById","useMutation","FollowJobService","create","jobPosting","onSuccess","invalidateQueries","success","massage","onError","FollowJobButton","job","jobFollow","useQueryFollowJobs","find","postId","handleToggleFollow","addAllOption","optionsArray","experience","EXPERIENCE","positionLevel","POSITION_LEVEL","degree","DEGREE","employmentType","WORKING_FORM","sex","GENDER_OPTION","defaultValues","JobFilter","handleFilter","control","reset","handleSubmit","formState","errors","useForm","currentValue","setCurrentValue","React","filter","borderTopLeftRadius","borderTopRightRadius","boxShadow","height","bgcolor","alignItems","pl","Grid","container","spacing","xs","FilterAltIcon","option","renderFormControl","element","name","onChange","e","target","curr","borderRadius","Button","variant","clear","_job$employer","_job$employer2","setCompanyAvatar","employer","logo","Card","border","borderColor","CardHeader","py","overflow","textOverflow","WebkitBoxOrient","WebkitLineClamp","whiteSpace","title","component","LinkText","to","rewriteUrl","jobTitle","btoa","state","flex","CardContent","flexDirection","gap","pt","md","sm","Avatar","src","maxWidth","width","maxHeight","objectFit","BusinessIcon","companyName","LocalAtmIcon","minSalary","maxSalary","LocationOnOutlinedIcon","workAddress","params","page","keepPreviousData","jobs","querykey","key","TotalResults","totalResults","JobRecommendTab","profile","keywords","profession","currentPage","setCurrentPage","filteredJob","setFilteredJob","setFilter","refetchTotal","useQueryTotalResultOfJobs","totalPages","Math","ceil","isFetching","useQueryAllJob","num","includes","document","getElementById","SuspenseLoader","justifyContent","borderTopRadius","px","alignSelf","p","mb","index","SmallJobCard","fontStyle","textAlign","Pagination","handlePageChange","pageNumber","Input","handleUploadFile","startIcon","CloudUploadIcon","disabled","type","accept","uploadedCV","isUploadCV","userId","mr","url","href","alt","lineHeight","ml","pdfjs","GlobalWorkerOptions","workerSrc","version","ACCEPTED_FILE_TYPES","ACCEPTED_FILE_SIZE","ACCEPTED_FILE_SIZE_MB","setIsLoading","setError","failedOCR","setFailedOCR","overToken","setOverToken","currentDoc","setCurrentDoc","file","analysisResults","setAnalysisResults","setKeywords","isAnalyzing","setIsAnalyzing","setMessage","documentProfile","isFileValid","processFile","fileUrl","URL","createObjectURL","text","pdfToText","tokens","split","loadKeywords","section","scrollIntoView","behavior","CustomContainer","Divider","ProfileInfo","ContactPageIcon","window","open","CircularProgress","_profile$skills","_profile$keywords","_profile$keywords$spl","slice","sendChatGPTRequest","processedProfile","preProcessData","skillsArray","skills","filePath","getFileByUrl","CV","ok","Error","blob","FileUploader","files","FileFormatInfo","mx","JobRecommend","isLoadingOnline","isLoadingDocument","Container","style","marginTop","AnalyzeProfile","startIndex","indexOf","endIndex","lastIndexOf","keywordList","substring","removeAttributes","profileType","cvText","_profileData$another_","profileData","work_experiences","jobDescription","education_informations","education","specialization","another_degrees","degreeName","cvContent","Alphabet","à","á","ả","ã","ạ","ă","ắ","ằ","ẳ","ẵ","ặ","â","ấ","ầ","ẩ","ẫ","ậ","đ","è","é","ẻ","ẽ","ẹ","ê","ế","ề","ể","ễ","ệ","ì","í","ỉ","ĩ","ị","ò","ó","ỏ","õ","ọ","ô","ố","ồ","ổ","ỗ","ộ","ơ","ớ","ờ","ở","ỡ","ợ","ù","ú","ủ","ũ","ụ","ư","ứ","ừ","ử","ữ","ự","ỳ","ý","ỷ","ỹ","ỵ","À","Á","Ả","Ã","Ạ","Ă","Ắ","Ằ","Ẳ","Ẵ","Ặ","Â","Ấ","Ầ","Ẩ","Ẫ","Ậ","Đ","È","É","Ẻ","Ẽ","Ẹ","Ê","Ế","Ề","Ể","Ễ","Ệ","Ì","Í","Ỉ","Ĩ","Ị","Ò","Ó","Ỏ","Õ","Ọ","Ô","Ố","Ồ","Ổ","Ỗ","Ộ","Ơ","Ớ","Ờ","Ở","Ỡ","Ợ","Ù","Ú","Ủ","Ũ","Ụ","Ư","Ứ","Ừ","Ử","Ữ","Ự","Ỳ","Ý","Ỷ","Ỹ","Ỵ","specialCharacter","chuoiKhongDau","endsWith","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","cx","cy","r"],"sourceRoot":""}