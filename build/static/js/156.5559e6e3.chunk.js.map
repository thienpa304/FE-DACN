{"version":3,"file":"static/js/156.5559e6e3.chunk.js","mappings":"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","sources":["components/LinkText/index.tsx","components/TabWrapper/index.tsx","modules/jobs/hooks/useMutateJobStatus.ts","modules/jobs/hooks/useQueryJobByAdmin.ts","pages/admin-job-approval/ViewJobDialog.tsx","pages/admin-job-approval/Table.tsx","modules/jobs/hooks/useQueryTotalJobsEachProfessionByAdmin.ts","pages/admin-job-approval/index.tsx","../node_modules/@mui/icons-material/Check.js"],"sourcesContent":["import { styled } from '@mui/material';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst LinkWrapper = styled(Link)(({ theme }) => ({\n  textDecoration: 'none',\n  color: theme.colors.info.dark,\n  '&:active': {\n    color: theme.colors.primary.light\n  },\n  '&:visited': {\n    color: theme.colors.info.dark\n  }\n}));\nconst LinkText = (props) => {\n  return <LinkWrapper {...props} />;\n};\n\nexport default LinkText;\n","import { Tabs, styled } from '@mui/material';\n\nconst TabsWrapper = styled(Tabs)(\n  () => `\n    .MuiTabs-scrollableX {\n    overflow-x: auto !important;\n      }\n  `\n);\nexport default TabsWrapper;\n","import { AxiosError } from 'axios';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { useApp } from 'src/modules/app/hooks';\nimport { JobUpdateStatusService } from '../jobService';\nimport { Job } from '../model';\n\nconst useMutateJobStatus = () => {\n  const queryClient = useQueryClient();\n  const { toast } = useApp();\n  const { isLoading, mutateAsync } = useMutation<\n    ResponseData<Job>,\n    AxiosError<ResponseData<Job>>,\n    [id: string, data: Partial<Job>]\n  >(([id, data]) => JobUpdateStatusService.update(id, data), {\n    onSuccess: (res) => {\n      if (res.status === 200) {\n        queryClient.invalidateQueries(['get-AllJobsByAdmin']);\n        toast.success({ massage: res.message });\n      } else {\n        toast.error({ massage: res.message });\n      }\n    },\n    onError: (error) => {\n      toast.error({ massage: error.response.data.message });\n    }\n  });\n\n  return {\n    mutate: mutateAsync,\n    isLoading\n  };\n};\n\nexport default useMutateJobStatus;\n","import { AxiosError } from 'axios';\nimport { useQuery } from 'react-query';\nimport { PaginationType, ResponseData } from 'src/common/http-request';\nimport { Job } from '../model';\nimport { JobUpdateStatusService } from '../jobService';\nimport { useApp } from 'src/modules/app/hooks';\n\nconst useQueryJobByAdmin = (params?) => {\n  const { isAdmin } = useApp();\n  const { data, isLoading, refetch } = useQuery<\n    ResponseData<PaginationType<Job[]>>,\n    AxiosError<ResponseData<Job[]>>\n  >(\n    ['get-AllJobsByAdmin', params],\n    () => {\n      for (const key in params) {\n        if (params[key] === 'Tất cả') {\n          params[key] = '';\n        }\n      }\n      return JobUpdateStatusService.get({ params });\n    },\n    {\n      keepPreviousData: true,\n      retry: 1,\n      refetchOnWindowFocus: false,\n      enabled: isAdmin\n    }\n  );\n\n  return {\n    jobs:\n      data?.data?.items?.map((item) => ({\n        ...item,\n        id: item.postId,\n        companyName: item?.employer?.companyName\n      })) || [],\n    totalItems: data?.data?.meta?.totalItems,\n    itemCount: data?.data?.meta?.itemCount,\n    itemPerPage: data?.data?.meta?.itemPerPage,\n    totalPages: data?.data?.meta?.totalPages,\n    currentPage: data?.data?.meta?.currentPage,\n    isLoading,\n    refetch\n  };\n};\n\nexport default useQueryJobByAdmin;\n","import {\n  Container,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  IconButton\n} from '@mui/material';\nimport CardApply from 'src/modules/jobs/components/CardApply';\nimport TabContent from '../view-job-detail/TabContent';\nimport CompanyInfoTab from 'src/modules/jobs/components/CompanyInfoTab';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { useResponsive } from 'src/utils/responsive';\n\nexport default function ViewJobDialog({ data, postId, setSelectedId }) {\n  const { isMobile } = useResponsive();\n  return (\n    <Dialog\n      open={Boolean(postId)}\n      onClose={() => {\n        setSelectedId(null);\n      }}\n      fullWidth\n      maxWidth=\"lg\"\n      fullScreen={isMobile}\n    >\n      <DialogTitle\n        sx={{\n          textAlign: 'center',\n          fontWeight: 700,\n          fontSize: '1.3rem'\n        }}\n      >\n        Việc làm ứng tuyển\n        <IconButton\n          aria-label=\"close\"\n          onClick={() => setSelectedId(null)}\n          sx={{\n            position: 'absolute',\n            right: 14,\n            top: 14,\n            color: (theme) => theme.palette.grey[500]\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      <Divider\n        sx={{\n          bgcolor: '#B6FFFA',\n          height: 2\n        }}\n      />\n      <DialogContent>\n        <Container sx={{ paddingY: 2 }}>\n          <CardApply data={data} />\n          <TabContent />\n          <CompanyInfoTab sx={{ mt: 2 }} company={data?.employer} />\n        </Container>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","import Box from '@mui/material/Box';\r\nimport { GridColDef } from '@mui/x-data-grid';\r\nimport LinkText from 'src/components/LinkText';\r\nimport TableData from 'src/components/TableData';\r\nimport { Button, CircularProgress, Grid, Typography } from '@mui/material';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { APPROVAL_STATUS } from 'src/constants';\r\nimport SelectInput, { Option } from 'src/components/SelectInput';\r\nimport { useEffect, useState } from 'react';\r\nimport useMutateJobStatus from 'src/modules/jobs/hooks/useMutateJobStatus';\r\nimport { ApprovalStatus } from 'src/constants/enum';\r\nimport Pagination from 'src/components/Pagination';\r\nimport useQueryJobByAdmin from 'src/modules/jobs/hooks/useQueryJobByAdmin';\r\nimport dayjs from 'dayjs';\r\nimport { Job } from 'src/modules/jobs/model';\r\nimport sendChatGPTRequest from 'src/GPT/sendChatGPTRequest';\r\nimport { checkContent } from 'src/GPT/roles';\r\nimport { rewriteUrl } from 'src/utils/rewriteUrl';\r\nimport alertDialog from 'src/utils/alertDialog';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport { TypographyEllipsis } from 'src/components/Typography';\r\nimport ReadMoreIcon from '@mui/icons-material/ReadMore';\r\nimport detailsModal from 'src/utils/detailsModal';\r\nimport { checkIsJSON, parseJsonString } from 'src/utils/formatData';\r\nimport ViewJobDialog from './ViewJobDialog';\r\nimport useJob from 'src/modules/jobs/hooks/useJob';\r\nimport { handleSort } from 'src/utils/sortData';\r\nimport { useResponsive } from 'src/utils/responsive';\r\n\r\nconst renderJobTitle = (data) => {\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const { setItemDetail } = useJob();\r\n\r\n  const handleOpenDetailModal = () => {\r\n    const detailsData = {\r\n      'Tên tin tuyển dụng': data?.row?.jobTitle,\r\n      'Người đăng': data?.row?.name,\r\n      'Tên công ty': data?.row?.employer?.companyName,\r\n      'Ngày đăng': dayjs(data.row?.createAt)\r\n        .add(7, 'hours')\r\n        .format('DD-MM-YYYY HH:mm:ss'),\r\n      'Lượt nộp': data.row?.submissionCount,\r\n      'Lượt xem': data?.row?.view,\r\n      'Trạng thái': data?.row?.status,\r\n      'Kiểm duyệt': renderCheckInvalid.find(\r\n        (item) => item.value == data?.row?.check\r\n      )?.label\r\n    };\r\n    detailsModal(detailsData);\r\n  };\r\n\r\n  const handleEditJob = () => {\r\n    setSelectedId(data.id);\r\n    setItemDetail(data?.row);\r\n  };\r\n\r\n  return (\r\n    <Grid container alignItems={'center'}>\r\n      <Grid item xs={10.5} sm={12}>\r\n        <TypographyEllipsis\r\n          sx={{\r\n            color: '#319fce',\r\n            ':hover': {\r\n              textDecoration: 'none',\r\n              cursor: 'pointer'\r\n            },\r\n            textDecoration: 'none'\r\n          }}\r\n          onClick={handleEditJob}\r\n        >\r\n          {data.value}\r\n        </TypographyEllipsis>\r\n      </Grid>\r\n\r\n      <Grid item xs={1.5} sm={0} sx={{ display: { sm: 'none', xs: 'inline' } }}>\r\n        <Tooltip title=\"Chi tiết\">\r\n          <IconButton size=\"small\" onClick={handleOpenDetailModal}>\r\n            <ReadMoreIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Grid>\r\n      <ViewJobDialog\r\n        postId={selectedId}\r\n        setSelectedId={setSelectedId}\r\n        data={data?.row}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst renderCompany = (data) => {\r\n  return (\r\n    <Grid container alignItems={'center'}>\r\n      <Grid item xs={12} component={TypographyEllipsis}>\r\n        <LinkText\r\n          to={`/company/${rewriteUrl(data.value)}?id=${btoa(\r\n            data?.row?.employer?.userId\r\n          )}`}\r\n          state={{ id: data?.value?.userId }}\r\n        >\r\n          {data.value}\r\n        </LinkText>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst renderStatus = (data) => {\r\n  const { isMobile } = useResponsive();\r\n  const initValue = APPROVAL_STATUS.find(\r\n    (item) => item.label === data.value\r\n  ).value;\r\n  const { mutate } = useMutateJobStatus();\r\n\r\n  const handleConfirm = (id, status) => {\r\n    mutate([id, { status: status, check: false }]);\r\n  };\r\n\r\n  const handleChangeValue = (e) => {\r\n    const value = e.target.value as ApprovalStatus;\r\n    if (data?.row.check == true && value === Object.keys(ApprovalStatus)[0]) {\r\n      alertDialog({\r\n        selectedId: data.id,\r\n        handleConfirm: () => handleConfirm(data.id, e.target.value),\r\n        message:\r\n          'Tin tuyển dụng đang ở trạng thái VI PHẠM, bạn có chắc chắn tin tuyển dụng này là hợp quy định và muốn duyệt tin tuyển dụng này?'\r\n      });\r\n    } else {\r\n      mutate([data.id, { status: value }]);\r\n    }\r\n  };\r\n\r\n  const displayColor = () => {\r\n    const initColor = APPROVAL_STATUS.find(\r\n      (item) => item.label === data.value\r\n    )?.optionColor;\r\n    return initColor;\r\n  };\r\n\r\n  return (\r\n    <SelectInput\r\n      value={initValue}\r\n      options={APPROVAL_STATUS.map((item) => {\r\n        if (item.value === 'pending' || item.value === 'expired')\r\n          return { ...item, disabled: true };\r\n        return item;\r\n      })}\r\n      onChange={handleChangeValue}\r\n      size=\"small\"\r\n      sx={{\r\n        fontSize: isMobile ? 10 : 13,\r\n        color: displayColor()\r\n      }}\r\n      disabled={\r\n        data?.value === 'Hết hạn' || data?.row?.applications?.length > 0\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nconst renderCheckInvalid = [\r\n  {\r\n    label: 'Chưa xác định',\r\n    value: null,\r\n    color: '#fff'\r\n  },\r\n  {\r\n    label: 'Hợp quy định',\r\n    value: false,\r\n    color: '#BFD8AF'\r\n  },\r\n  {\r\n    label: 'Vi phạm',\r\n    value: true,\r\n    color: '#F94C10'\r\n  }\r\n];\r\n\r\nconst renderCheck = (data) => {\r\n  const { mutate } = useMutateJobStatus();\r\n  const initCheckValue = renderCheckInvalid.find(\r\n    (item) => item.value == data.value\r\n  );\r\n  const [checkValue, setCheckValue] = useState(initCheckValue);\r\n\r\n  const options = renderCheckInvalid.map((item) => {\r\n    return {\r\n      label: item.label,\r\n      value: item.value ? 'true' : item.value == false ? 'false' : 'null'\r\n    };\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const value = e.target.value.toString();\r\n    const checkValue = renderCheckInvalid.find((item) => {\r\n      if (item.value !== null) return item.value.toString() === value;\r\n      else if (item.value === null && value !== 'null') return false;\r\n      else return true;\r\n    });\r\n\r\n    setCheckValue(checkValue);\r\n    mutate([data.id, { check: checkValue?.value }]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setCheckValue(initCheckValue);\r\n  }, [data.value]);\r\n\r\n  return (\r\n    <Typography\r\n      bgcolor={initCheckValue?.color}\r\n      sx={{\r\n        width: '90%',\r\n        borderRadius: 1,\r\n        py: 1,\r\n        textAlign: 'center',\r\n        fontSize: 13\r\n      }}\r\n    >\r\n      {initCheckValue?.label}\r\n    </Typography>\r\n    // <SelectInput\r\n    //   value={\r\n    //     checkValue?.value === true\r\n    //       ? 'true'\r\n    //       : checkValue?.value === false\r\n    //       ? 'false'\r\n    //       : 'null'\r\n    //   }\r\n    //   options={options}\r\n    //   size=\"small\"\r\n    //   onChange={handleChange}\r\n    //   sx={{\r\n    //     bgcolor: checkValue?.color,\r\n    //     '.css-dyke5w-MuiSelect-select-MuiInputBase-input-MuiOutlinedInput-input.MuiSelect-select':\r\n    //       {\r\n    //         fontSize: 13,\r\n    //         mx: -1\r\n    //       }\r\n    //   }}\r\n    // />\r\n  );\r\n};\r\n\r\nexport default function Table({ statusFilter, selectedProfession }) {\r\n  const { mutate } = useMutateJobStatus();\r\n  const [start, setStart] = useState(false);\r\n  const [showList, setShowList] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const [sortModel, setSortModel] = useState({ orderBy: '', sort: '' });\r\n  const pageSize = 9;\r\n\r\n  const { jobs, isLoading, totalPages } = useQueryJobByAdmin({\r\n    page: currentPage,\r\n    num: pageSize,\r\n    status: ApprovalStatus[statusFilter],\r\n    profession: selectedProfession,\r\n    ...sortModel\r\n  });\r\n  const { isMobile } = useResponsive();\r\n\r\n  const columns: GridColDef[] = [\r\n    {\r\n      field: 'jobTitle',\r\n      headerName: 'Tin tuyển dụng',\r\n      minWidth: !isMobile ? 200 : 130,\r\n      renderCell: renderJobTitle,\r\n      sortable: true\r\n    },\r\n    {\r\n      field: 'name',\r\n      headerName: 'Người đăng',\r\n      minWidth: 120,\r\n      sortable: true,\r\n      renderCell: (data) => (\r\n        <Box\r\n          sx={{\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n            whiteSpace: 'wrap',\r\n            lineHeight: '1.5',\r\n            display: '-webkit-box',\r\n            WebkitLineClamp: 2,\r\n            WebkitBoxOrient: 'vertical'\r\n          }}\r\n        >\r\n          {data.value}\r\n        </Box>\r\n      )\r\n    },\r\n    {\r\n      field: 'companyName',\r\n      headerName: 'Tên công ty',\r\n      minWidth: 200,\r\n      renderCell: renderCompany,\r\n      sortable: true\r\n    },\r\n    {\r\n      field: 'createAt',\r\n      headerName: 'Ngày đăng',\r\n      minWidth: 110,\r\n      sortable: true,\r\n      align: 'center',\r\n      renderCell: (data) => (\r\n        <Box\r\n          sx={{\r\n            whiteSpace: 'wrap',\r\n            lineHeight: '1.5em',\r\n            textAlign: 'center'\r\n          }}\r\n        >\r\n          {dayjs(data.value).format('DD-MM-YYYY HH:mm:ss')}\r\n        </Box>\r\n      )\r\n    },\r\n    {\r\n      field: 'submissionCount',\r\n      headerName: 'Lượt nộp',\r\n      minWidth: 90,\r\n      align: 'center',\r\n      headerAlign: 'center',\r\n      sortable: true\r\n    },\r\n    {\r\n      field: 'view',\r\n      headerName: 'Lượt xem',\r\n      minWidth: 90,\r\n      align: 'center',\r\n      headerAlign: 'center',\r\n      sortable: true,\r\n      resizable: true\r\n    },\r\n    {\r\n      field: 'status',\r\n      headerName: 'Trạng thái',\r\n      minWidth: !isMobile ? 130 : 115,\r\n      headerAlign: 'center',\r\n      renderCell: renderStatus\r\n    },\r\n    {\r\n      field: 'check',\r\n      headerName: 'Kiểm duyệt',\r\n      minWidth: 130,\r\n      headerAlign: 'center',\r\n      align: 'center',\r\n      renderCell: renderCheck,\r\n      sortable: true\r\n    }\r\n  ];\r\n\r\n  const preProcessData = (job: Job) => {\r\n    return {\r\n      postId: job?.postId,\r\n      jobTitle: job?.jobTitle,\r\n      jobDescription: job?.jobDescription,\r\n      jobRequirements: job?.jobRequirements,\r\n      benefits: job?.benefits,\r\n      requiredSkills: job?.requiredSkills\r\n    };\r\n  };\r\n\r\n  const handleCheck = async (dataToSend: Partial<Job>[]) => {\r\n    const result = await sendChatGPTRequest(checkContent, dataToSend);\r\n    const jsonResult = result?.map((item) => parseJsonString(item));\r\n    const resultList = jobs?.map((job) => {\r\n      const found = jsonResult.find((item) => item.id === job.postId);\r\n\r\n      if (found) {\r\n        mutate([found.id, { check: found.result }]);\r\n        return {\r\n          ...job,\r\n          check: found.result\r\n        };\r\n      }\r\n      return job;\r\n    });\r\n    setShowList(resultList);\r\n    setStart(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!start) return;\r\n    const dataToSend = jobs\r\n      .filter((job) => selectedRows.includes(job.postId))\r\n      .map((job) => preProcessData(job));\r\n\r\n    // const dataToSend = jobs.map((job) => preProcessData(job));\r\n    handleCheck(dataToSend);\r\n  }, [start]);\r\n\r\n  useEffect(() => {\r\n    if (jobs) {\r\n      setShowList(() => jobs);\r\n    }\r\n  }, [JSON.stringify(jobs)]);\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(1);\r\n  }, [statusFilter]);\r\n\r\n  const [quickApproveValue, setQuickApproveValue] = useState(null);\r\n\r\n  const handleChangeValue = (e) => {\r\n    setQuickApproveValue(e.target.value);\r\n  };\r\n\r\n  const handleQuickApprove = () => {\r\n    alertDialog({\r\n      handleConfirm,\r\n      message: `Chuyển tin tuyển dụng đã chọn sang trạng thái ${ApprovalStatus[\r\n        quickApproveValue\r\n      ].toUpperCase()}?`\r\n    });\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    const handleConfirmApprove = () => {\r\n      Promise.all(\r\n        selectedRows.map((id) => mutate([id, { status: quickApproveValue }]))\r\n      );\r\n    };\r\n    const violationJob = jobs.find((item) => {\r\n      return selectedRows.includes(item.postId) && item.check == true;\r\n    });\r\n\r\n    if (\r\n      selectedRows.some(\r\n        (row) =>\r\n          violationJob && quickApproveValue === Object.keys(ApprovalStatus)[0]\r\n      )\r\n    ) {\r\n      alertDialog({\r\n        handleConfirm: handleConfirmApprove,\r\n        message:\r\n          'Có tin tuyển dụng đang ở trạng thái vi phạm, bạn có chắc muốn các duyệt tin tuyển dụng đã chọn không?'\r\n      });\r\n    } else handleConfirmApprove();\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Box\r\n        sx={{\r\n          display: 'block',\r\n          float: { md: 'right' },\r\n          minWidth: { md: 500 },\r\n          maxWidth: 500\r\n        }}\r\n      >\r\n        <Grid\r\n          container\r\n          sx={{\r\n            alignItems: 'center'\r\n          }}\r\n          spacing={1}\r\n        >\r\n          <Grid item md={3} xs={12}>\r\n            <Typography fontWeight={700}>\r\n              Đã chọn: {selectedRows.length}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item md={5} xs={12} display={'flex'}>\r\n            <SelectInput\r\n              options={APPROVAL_STATUS}\r\n              onChange={handleChangeValue}\r\n              value={selectedRows.length > 0 ? quickApproveValue : ''}\r\n              sx={{\r\n                color: APPROVAL_STATUS.find(\r\n                  (item) => item.value === quickApproveValue\r\n                )?.optionColor\r\n              }}\r\n              disabled={!selectedRows.length}\r\n              label=\"Duyệt nhanh\"\r\n            />\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              sx={{ py: 1, px: 0 }}\r\n              color=\"info\"\r\n              onClick={handleQuickApprove}\r\n              disabled={!selectedRows.length || !quickApproveValue}\r\n            >\r\n              <CheckIcon sx={{ fontSize: 15 }} />\r\n            </Button>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            md={4}\r\n            xs={12}\r\n            sx={{\r\n              display: 'flex',\r\n              alignItems: 'center'\r\n            }}\r\n          >\r\n            <Button\r\n              onClick={() => setStart(selectedRows.length > 0)}\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              disabled={start || !selectedRows.length}\r\n              fullWidth\r\n              sx={{ py: 1, px: 0, bgcolor: '#FC4100' }}\r\n            >\r\n              <Grid item xs={!start ? 12 : 9}>\r\n                {!start ? 'Kiểm duyệt' : 'Đang kiểm duyệt...'}\r\n              </Grid>\r\n              <Grid item xs={start ? 3 : 0}>\r\n                {start && <CircularProgress size={18} color=\"secondary\" />}\r\n              </Grid>\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n      <TableData\r\n        sx={{ height: '74vh', width: '100%' }}\r\n        rows={showList}\r\n        columns={columns}\r\n        hideFooter\r\n        checkboxSelection\r\n        rowSelection\r\n        onRowSelectionModelChange={(ids) => {\r\n          setSelectedRows(ids);\r\n        }}\r\n        loading={isLoading}\r\n        initialState={{\r\n          columns: {\r\n            columnVisibilityModel: {\r\n              name: !isMobile,\r\n              companyName: !isMobile,\r\n              createAt: !isMobile,\r\n              submissionCount: !isMobile,\r\n              view: !isMobile,\r\n              check: !isMobile\r\n            }\r\n          }\r\n        }}\r\n        disableRowSelectionOnClick={isMobile}\r\n        onSortModelChange={(newSortModel) => {\r\n          handleSort(newSortModel, setSortModel);\r\n        }}\r\n        isRowSelectable={(params) => {\r\n          return (\r\n            params?.row?.applications?.length <= 0 &&\r\n            params?.row?.status != ApprovalStatus.expired\r\n          );\r\n        }}\r\n      />\r\n      <Pagination\r\n        totalPages={totalPages}\r\n        currentPage={currentPage}\r\n        handlePageChange={setCurrentPage}\r\n        disabled={start}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n","import { AxiosError } from 'axios';\nimport { useQuery } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { TotalResultEachProfessionByAdmin } from '../jobService';\n\ninterface ResponseType {\n  profession_value: string;\n  count: number;\n}\n\nconst useQueryTotalJobsEachProfessionByAdmin = (params?) => {\n  const { data, isLoading } = useQuery<\n    ResponseData<ResponseType[]>,\n    AxiosError<ResponseData<ResponseType[]>>\n  >(\n    ['get-TotalResultsEachProfessionByAdmin', params],\n    () => TotalResultEachProfessionByAdmin.get({ params }),\n    {\n      retry: 1,\n      refetchOnWindowFocus: false\n    }\n  );\n\n  return {\n    dataList: data?.data,\n    isLoading\n  };\n};\n\nexport default useQueryTotalJobsEachProfessionByAdmin;\n","import {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Container,\n  Divider,\n  Grid,\n  Tab\n} from '@mui/material';\nimport Table from './Table';\nimport SelectInput from 'src/components/SelectInput';\nimport { APPROVAL_STATUS } from 'src/constants';\nimport { useState } from 'react';\nimport ProfessionList from 'src/modules/admin/components/ProfessionList';\nimport SuspenseLoader from 'src/components/SuspenseLoader';\nimport useQueryTotalJobsEachProfessionByAdmin from 'src/modules/jobs/hooks/useQueryTotalJobsEachProfessionByAdmin';\nimport TabsWrapper from 'src/components/TabWrapper';\n\nconst ApprovalStatusOption = [\n  {\n    value: '',\n    label: 'Tất cả',\n    color: 'info',\n    optionColor: '#000'\n  },\n  ...APPROVAL_STATUS\n];\n\nconst JobApproval = () => {\n  const [status, setStatus] = useState('');\n  const [selectedProfession, setSelectedProfession] = useState(null);\n  const [isProfessionView, setIsProfessionView] = useState(false);\n\n  const { dataList, isLoading } = useQueryTotalJobsEachProfessionByAdmin();\n\n  const handleChangeStatusFilter = (e, value) => {\n    setStatus(value);\n  };\n\n  const handleSelectProfession = (name: string) => {\n    setSelectedProfession(name);\n    setIsProfessionView(false);\n  };\n\n  const handleToggleViewMode = () => {\n    setIsProfessionView((prev) => !prev);\n    setSelectedProfession(null);\n  };\n\n  if (isLoading) return <SuspenseLoader />;\n  return (\n    <Container maxWidth=\"xl\">\n      <Grid\n        container\n        direction=\"row\"\n        justifyContent=\"center\"\n        alignItems=\"stretch\"\n        spacing={3}\n        marginTop={0}\n      >\n        <Grid item xs={12}>\n          <Card>\n            <Box\n              sx={{\n                display: 'flex',\n                justifyContent: { sm: 'space-between', xs: 'center' },\n                flexWrap: 'wrap'\n              }}\n            >\n              <CardHeader title=\"Danh sách tin tuyển dụng\" />\n              <Box\n                sx={{\n                  display: 'flex',\n                  justifyContent: { xs: 'center', sm: 'end' },\n                  px: 2,\n                  gap: 1\n                }}\n              >\n                <Button\n                  variant=\"contained\"\n                  color={!isProfessionView ? 'primary' : 'info'}\n                  onClick={handleToggleViewMode}\n                  sx={{ margin: 'auto', height: 35, width: 150 }}\n                >\n                  {!isProfessionView ? 'Xem theo ngành' : 'Tất cả'}\n                </Button>\n              </Box>\n            </Box>\n\n            <Divider />\n            <CardContent>\n              {isProfessionView && !selectedProfession && (\n                <ProfessionList\n                  handleSelectProfession={handleSelectProfession}\n                  handleViewProfessionMode={setIsProfessionView}\n                  total={dataList}\n                />\n              )}\n              {!isProfessionView && (\n                <>\n                  <TabsWrapper\n                    onChange={handleChangeStatusFilter}\n                    value={status}\n                    variant=\"scrollable\"\n                    scrollButtons={false}\n                    sx={{\n                      display: { md: 'inline-block' },\n                      borderBottom: 1,\n                      borderColor: 'divider'\n                    }}\n                  >\n                    {ApprovalStatusOption.map((tab) => {\n                      return (\n                        <Tab\n                          key={tab.value}\n                          label={tab.label}\n                          value={tab.value}\n                        />\n                      );\n                    })}\n                  </TabsWrapper>\n                  <Table\n                    statusFilter={status}\n                    selectedProfession={selectedProfession}\n                  />\n                </>\n              )}\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default JobApproval;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\nexports.default = _default;"],"names":["LinkWrapper","styled","Link","_ref","theme","textDecoration","color","colors","info","dark","primary","light","props","_jsx","Tabs","useMutateJobStatus","queryClient","useQueryClient","toast","useApp","isLoading","mutateAsync","useMutation","id","data","JobUpdateStatusService","update","onSuccess","res","status","invalidateQueries","success","massage","message","error","onError","response","mutate","params","_data$data","_data$data$items","_data$data2","_data$data2$meta","_data$data3","_data$data3$meta","_data$data4","_data$data4$meta","_data$data5","_data$data5$meta","_data$data6","_data$data6$meta","isAdmin","refetch","useQuery","key","get","keepPreviousData","retry","refetchOnWindowFocus","enabled","jobs","items","map","item","_item$employer","postId","companyName","employer","totalItems","meta","itemCount","itemPerPage","totalPages","currentPage","ViewJobDialog","setSelectedId","isMobile","useResponsive","_jsxs","Dialog","open","Boolean","onClose","fullWidth","maxWidth","fullScreen","children","DialogTitle","sx","textAlign","fontWeight","fontSize","IconButton","onClick","position","right","top","palette","grey","CloseIcon","Divider","bgcolor","height","DialogContent","Container","paddingY","CardApply","TabContent","CompanyInfoTab","mt","company","renderJobTitle","selectedId","useState","setItemDetail","useJob","Grid","container","alignItems","xs","sm","TypographyEllipsis","cursor","handleEditJob","row","value","display","Tooltip","title","size","handleOpenDetailModal","_data$row","_data$row2","_data$row3","_data$row3$employer","_data$row4","_data$row5","_data$row6","_data$row7","_renderCheckInvalid$f","detailsData","jobTitle","name","dayjs","createAt","add","format","submissionCount","view","renderCheckInvalid","find","_data$row8","check","label","detailsModal","ReadMoreIcon","renderCompany","_data$row9","_data$row9$employer","_data$value","component","LinkText","to","concat","rewriteUrl","btoa","userId","state","renderStatus","_data$row10","_data$row10$applicati","initValue","APPROVAL_STATUS","SelectInput","options","disabled","onChange","e","target","Object","keys","ApprovalStatus","alertDialog","handleConfirm","displayColor","_APPROVAL_STATUS$find","optionColor","applications","length","renderCheck","initCheckValue","checkValue","setCheckValue","useEffect","Typography","width","borderRadius","py","Table","_APPROVAL_STATUS$find2","statusFilter","selectedProfession","start","setStart","showList","setShowList","setCurrentPage","selectedRows","setSelectedRows","sortModel","setSortModel","orderBy","sort","useQueryJobByAdmin","page","num","profession","columns","field","headerName","minWidth","renderCell","sortable","Box","overflow","textOverflow","whiteSpace","lineHeight","WebkitLineClamp","WebkitBoxOrient","align","headerAlign","resizable","async","result","sendChatGPTRequest","checkContent","dataToSend","jsonResult","parseJsonString","resultList","job","found","handleCheck","filter","includes","jobDescription","jobRequirements","benefits","requiredSkills","preProcessData","JSON","stringify","quickApproveValue","setQuickApproveValue","handleConfirmApprove","Promise","all","violationJob","some","float","md","spacing","Button","variant","px","handleQuickApprove","toUpperCase","CheckIcon","CircularProgress","TableData","rows","hideFooter","checkboxSelection","rowSelection","onRowSelectionModelChange","ids","loading","initialState","columnVisibilityModel","disableRowSelectionOnClick","onSortModelChange","newSortModel","handleSort","isRowSelectable","_params$row","_params$row$applicati","_params$row2","expired","Pagination","handlePageChange","TotalResultEachProfessionByAdmin","dataList","ApprovalStatusOption","JobApproval","setStatus","setSelectedProfession","isProfessionView","setIsProfessionView","useQueryTotalJobsEachProfessionByAdmin","SuspenseLoader","direction","justifyContent","marginTop","Card","flexWrap","CardHeader","gap","handleToggleViewMode","prev","margin","CardContent","ProfessionList","handleSelectProfession","handleViewProfessionMode","total","_Fragment","TabsWrapper","handleChangeStatusFilter","scrollButtons","borderBottom","borderColor","tab","Tab","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}