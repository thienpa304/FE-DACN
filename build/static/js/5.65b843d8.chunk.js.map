{"version":3,"file":"static/js/5.65b843d8.chunk.js","mappings":"sJAEe,SAASA,EAAYC,GAClC,MAAM,aAAEC,EAAY,aAAEC,GAAiBF,EACvC,OACEG,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,QAAQ,OAAOC,eAAe,SAASC,GAAI,CAAEC,IAAK,GAAIC,SAAA,EACzDC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CACLC,QAASV,EACTW,QAAQ,WACRC,MAAM,YACNP,GAAI,CAAEQ,MAAO,KAAMN,SACpB,cAGDC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CACLG,MAAM,UACNF,QAASX,EACTY,QAAQ,YACRN,GAAI,CAAEQ,MAAO,KAAMN,SACpB,uBAKP,C,uGCnBe,SAASO,EAAWhB,GACjC,OACEU,EAAAA,EAAAA,KAACO,EAAAA,EAAoB,CAACC,YAAaC,EAAAA,EAAaV,UAC9CC,EAAAA,EAAAA,KAACU,EAAAA,EAAa,CACZC,OAAO,gBACHrB,EACJsB,MAAOtB,EAAMsB,MAAQC,IAAMvB,EAAMsB,OAAS,KAC1CE,UAAW,CAAEC,UAAW,CAAEC,KAAM,QAASC,WAAW,OAI5D,C,sGCXe,SAASC,EAAW5B,GACjC,MAAM,SAAE6B,IAAaC,EAAAA,EAAAA,MACrB,OACE3B,EAAAA,EAAAA,MAACQ,EAAAA,EAAM,IACDX,EACJa,QAAQ,WACRC,MAAM,YAENP,GAAI,CAAEF,QAAS,OAAQ0B,aAAc,CAAEC,GAAI,EAAGC,GAAI,IAClDP,KAAMG,EAAW,QAAU,SAASpB,SAAA,EAEpCC,EAAAA,EAAAA,KAACwB,EAAAA,EAAuB,CAACC,SAAS,WAClCzB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAU,CAACC,cAAc,OAAOhC,QAASwB,GAAY,OAAOpB,SAAC,0BAKpE,C,wECdA,MAuBA,EAvB4B6B,EAAAA,YAC1B,SAA6BtC,EAAOuC,GAClC,MAAM,SAAEC,KAAaC,GAAUzC,EAE/B,OACEU,EAAAA,EAAAA,KAACgC,EAAAA,GAAa,IACRD,EACJE,YAAaJ,EACbK,cAAgBC,IACdL,EAAS,CACPM,OAAQ,CACNC,KAAM/C,EAAM+C,KACZzB,MAAOuB,EAAOvB,QAEhB,EAEJ0B,mBAAiB,EACjBC,sBAAoB,GAG1B,G,6DC1BF,MAIA,EAJmBjD,IACVU,EAAAA,EAAAA,KAACwC,EAAAA,EAAS,CAACxB,KAAK,QAAQC,WAAS,KAAK3B,G,6GCI/C,MAAMmD,EAAoBA,CACxBC,EACAC,EACAC,EACAC,KAEA,MAAMC,EAAY,IAAIC,OAAO,GAADC,OAAIH,EAAQ,KAAK,KAC7C,OACEpD,EAAAA,EAAAA,MAACiC,EAAAA,EAAU,CAACtB,MAAM,QAAQ6C,GAAI,EAAGC,WAAY,IAAKzB,SAAU,GAAG1B,SAAA,CAC5D2C,EAAO,gDACPC,EAAYQ,KAAK,MAAMC,QAAQN,EAAW,KAAK,8BAAe,IAAG,MAAAE,OAC3DJ,EAAa,KAAO,KAAI,QACpB,EAsBJS,EAAkBZ,EAC7B,mCACAa,EAAAA,GAAaX,YACbW,EAAAA,GAAaV,WACb,SAEWW,EAAiBd,EAC5B,kBACAe,EAAAA,GAAeb,YACfa,EAAAA,GAAeZ,WACf,SAEWa,EAAuBhB,EAClC,KACAiB,EAAAA,GAASf,YACTe,EAAAA,GAASd,WACT,eAEWe,GAlCT3D,EAAAA,EAAAA,KAAC0B,EAAAA,EAAU,CAACtB,MAAM,QAAQ6C,GAAI,EAAGC,WAAY,IAAKzB,SAAU,GAAG1B,SAAC,2LAmCvD6D,GA1BT5D,EAAAA,EAAAA,KAAC0B,EAAAA,EAAU,CAACtB,MAAM,QAAQ6C,GAAI,EAAGC,WAAY,IAAKzB,SAAU,GAAG1B,SAAC,+J,mQCyBpE,MA8QA,EA9QgD8D,IAIzC,IAADC,EAAA,IAJ2C,KAC/CC,EAAI,QACJC,EAAO,SACPC,GACDJ,EACC,MAcM,QACJK,EAAO,MACPC,EAAK,aACL5E,EACA6E,WAAW,OAAEC,KACXC,EAAAA,EAAAA,IAAmB,CACrBC,cApB+B,CAC/BC,SAAU,GACVC,WAAY,GACZC,gBAAiB,GACjBC,gBAAiB,GACjBC,cAAe,KACfC,OAAQ,GACRC,WAAY,GACZC,YAAa,GACbC,eAAgB,GAChBC,WAAY,GACZC,OAAQ,OAaHC,EAAYC,IADPxD,EAAAA,OAAa,OACWyD,EAAAA,EAAAA,WAAS,KACtCC,EAAgBC,IAAwBF,EAAAA,EAAAA,UAAS,MAelDG,EAAsBzB,IACnB,IACFA,EACHU,YAAYgB,EAAAA,EAAAA,IAA8B,OAAJ1B,QAAI,IAAJA,OAAI,EAAJA,EAAMU,YAC5CM,aAAaU,EAAAA,EAAAA,IAA8B,OAAJ1B,QAAI,IAAJA,OAAI,EAAJA,EAAMgB,aAC7CG,OAAQQ,MAAMC,QAAQ5B,EAAKmB,QACvBnB,EAAKmB,OAAOU,KAAKC,GAASA,EAAKjF,OAASiF,IAAM1C,KAAK,KACnDY,EAAKmB,SAUb,OANAY,EAAAA,EAAAA,YAAU,KACR3B,EAAMJ,IACF,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMmB,SACJK,GAAqBQ,EAAAA,EAAAA,IAA6B,OAAJhC,QAAI,IAAJA,OAAI,EAAJA,EAAMmB,QAAQ,GAC7D,CAACnB,KAGFtE,EAAAA,EAAAA,MAACuG,EAAAA,EAAS,CAACC,GAAG,UAASlG,SAAA,EACrBN,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,QAAQ,OAAOC,eAAe,gBAAgBsG,WAAW,SAAQnG,SAAA,EACpEC,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAACC,QAAQ,OAAMI,UACjBC,EAAAA,EAAAA,KAAC0B,EAAAA,EAAU,CAACwB,WAAY,IAAKzB,SAAU,GAAI0E,WAAY,EAAEpG,SAAC,yBAI3DoF,IAAcnF,EAAAA,EAAAA,KAACkB,EAAAA,EAAU,CAAChB,QA3BlBkG,IAAMhB,GAAc,SA6B/BpF,EAAAA,EAAAA,KAACqG,EAAAA,EAAO,IACPlB,GACCnF,EAAAA,EAAAA,KAACsG,EAAAA,EAAa,CACZC,KAAM,IACDxC,EACHc,OAAQ2B,EAAAA,GAAOzC,EAAKc,QAAU2B,EAAAA,GAAOzC,EAAKc,QAAUd,EAAKc,WAI7DpF,EAAAA,EAAAA,MAACgH,EAAAA,GAAI,CAAC5G,GAAI,CAAE6G,GAAI,GAAKC,GAAI,EAAE5G,SAAA,EACzBN,EAAAA,EAAAA,MAACgH,EAAAA,GAAI,CAACG,WAAS,EAACC,GAAI,EAAGC,QAAS,EAAE/G,SAAA,EAChCC,EAAAA,EAAAA,KAACyG,EAAAA,GAAI,CAACZ,MAAI,EAACvE,GAAI,GAAGvB,UAChBC,EAAAA,EAAAA,KAAC+G,EAAAA,EAAW,CACVC,SAAShH,EAAAA,EAAAA,KAACiH,EAAAA,EAAS,IACnB/C,QAASA,EACTG,OAAQA,EACRpD,WAAS,EACTgF,GAAG,WACHiB,MAAM,gCACN7E,KAAK,WACL8E,UAAQ,EACRC,SAAUjC,OAGdnF,EAAAA,EAAAA,KAACyG,EAAAA,GAAI,CAACZ,MAAI,EAACvE,GAAI,GAAGvB,UAChBC,EAAAA,EAAAA,KAAC+G,EAAAA,EAAW,CACVC,SAAShH,EAAAA,EAAAA,KAACqH,EAAAA,EAAY,IACtBnD,QAASA,EACTG,OAAQA,EACRpD,WAAS,EACTgF,GAAG,aACHiB,MAAM,wBACN7E,KAAK,aACL2B,QAASA,EAAQS,WACjB0C,UAAQ,EACRC,SAAUjC,EACVmC,aAAkB,OAAJvD,QAAI,IAAJA,OAAI,EAAJA,EAAMU,gBAGxBzE,EAAAA,EAAAA,KAACyG,EAAAA,GAAI,CAACZ,MAAI,EAACvE,GAAI,GAAIiG,GAAI,EAAExH,UACvBC,EAAAA,EAAAA,KAAC+G,EAAAA,EAAW,CACVC,SAAShH,EAAAA,EAAAA,KAACwH,EAAAA,EAAW,IACrBxD,QAASA,EAAQyD,cACjBvD,QAASA,EACTG,OAAQA,EACRpD,WAAS,EACTgF,GAAG,kBACHiB,MAAM,uCACN7E,KAAK,kBACL8E,UAAQ,EACRC,SAAUjC,OAGdnF,EAAAA,EAAAA,KAACyG,EAAAA,GAAI,CAACZ,MAAI,EAACvE,GAAI,GAAIiG,GAAI,EAAExH,UACvBC,EAAAA,EAAAA,KAAC+G,EAAAA,EAAW,CACVC,SAAShH,EAAAA,EAAAA,KAACwH,EAAAA,EAAW,IACrBxD,QAASA,EAAQyD,cACjBvD,QAASA,EACTG,OAAQA,EACRpD,WAAS,EACTgF,GAAG,kBACHiB,MAAM,mCACN7E,KAAK,kBACL8E,UAAQ,EACRC,SAAUjC,OAGdnF,EAAAA,EAAAA,KAACyG,EAAAA,GAAI,CAACZ,MAAI,EAACvE,GAAI,GAAIiG,GAAI,EAAExH,UACvBC,EAAAA,EAAAA,KAAC+G,EAAAA,EAAW,CACVC,SAAShH,EAAAA,EAAAA,KAACiH,EAAAA,EAAS,IACnB/C,QAASA,EACTG,OAAQA,EACRpD,WAAS,EACTgF,GAAG,gBACHiB,MAAM,0CACN7E,KAAK,gBACLqF,QAAQ,UACRP,UAAQ,EACRC,SAAUjC,EACVwC,WAAY,CACVC,eAAgBC,EAAAA,EAChBC,cACE9H,EAAAA,EAAAA,KAAC+H,EAAAA,EAAc,CAACC,SAAS,MAAKjI,SAAC,8BAKvCC,EAAAA,EAAAA,KAACyG,EAAAA,GAAI,CAACZ,MAAI,EAACvE,GAAI,GAAIiG,GAAI,EAAExH,UACvBC,EAAAA,EAAAA,KAAC+G,EAAAA,EAAW,CACVC,SAAShH,EAAAA,EAAAA,KAACwH,EAAAA,EAAW,IACrBxD,QAASA,EAAQa,OACjBX,QAASA,EACTG,OAAQA,EACRpD,WAAS,EACTgF,GAAG,SACHiB,MAAM,0CACN7E,KAAK,SACL8E,UAAQ,EACRC,SAAUjC,OAGdnF,EAAAA,EAAAA,KAACyG,EAAAA,GAAI,CAACZ,MAAI,EAACvE,GAAI,GAAIiG,GAAI,EAAExH,UACvBC,EAAAA,EAAAA,KAAC+G,EAAAA,EAAW,CACVC,SAAShH,EAAAA,EAAAA,KAACwH,EAAAA,EAAW,IACrBxD,QAASA,EAAQc,WACjBZ,QAASA,EACTG,OAAQA,EACRpD,WAAS,EACTgF,GAAG,aACHiB,MAAM,oCACN7E,KAAK,aACL8E,UAAQ,EACRC,SAAUjC,OAGdnF,EAAAA,EAAAA,KAACyG,EAAAA,GAAI,CAACZ,MAAI,EAACvE,GAAI,GAAIiG,GAAI,EAAExH,UACvBC,EAAAA,EAAAA,KAAC+G,EAAAA,EAAW,CACVC,SAAShH,EAAAA,EAAAA,KAACwH,EAAAA,EAAW,IACrBxD,QAASA,EAAQiE,YACjB/D,QAASA,EACTG,OAAQA,EACRpD,WAAS,EACTgF,GAAG,iBACHiB,MAAM,qCACN7E,KAAK,iBACL8E,UAAQ,EACRC,SAAUjC,OAGdnF,EAAAA,EAAAA,KAACyG,EAAAA,GAAI,CAACZ,MAAI,EAACvE,GAAI,GAAGvB,UAChBC,EAAAA,EAAAA,KAAC+G,EAAAA,EAAW,CACVC,SAAShH,EAAAA,EAAAA,KAACqH,EAAAA,EAAY,IACtBrD,QAASA,EAAQe,YACjBb,QAASA,EACTG,OAAQA,EACRiD,aAAkB,OAAJvD,QAAI,IAAJA,OAAI,EAAJA,EAAMgB,YACpB9D,WAAS,EACTgF,GAAG,cACHiB,MAAM,0CACN7E,KAAK,cACL8E,UAAQ,EACRC,SAAUjC,OAGdnF,EAAAA,EAAAA,KAACyG,EAAAA,GAAI,CAACZ,MAAI,EAACvE,GAAI,GAAGvB,UAChBC,EAAAA,EAAAA,KAAC+G,EAAAA,EAAW,CACVC,SAAShH,EAAAA,EAAAA,KAACiH,EAAAA,EAAS,IACnB/C,QAASA,EACTG,OAAQA,EACRpD,WAAS,EACTgF,GAAG,aACHiB,MAAM,yCACN7E,KAAK,aACL8E,UAAQ,EACRC,SAAUjC,OAGd1F,EAAAA,EAAAA,MAACgH,EAAAA,GAAI,CAACZ,MAAI,EAACvE,GAAI,GAAGvB,SAAA,EAChBC,EAAAA,EAAAA,KAAC+G,EAAAA,EAAW,CACVC,SACEhH,EAAAA,EAAAA,KAACqH,EAAAA,EAAY,CACXa,UAAU,EACVC,UAAW,EACXnE,QAASoE,EAAAA,GAAOxC,KAAKC,GAASA,EAAKjF,UAGvC0G,aAAkB,OAAJvD,QAAI,IAAJA,GAAY,QAARD,EAAJC,EAAMmB,cAAM,IAAApB,OAAR,EAAJA,EAAcuE,MAAM,KAClCnE,QAASA,EACTG,OAAQA,EACR4B,GAAG,SACHiB,MAAM,uCACN7E,KAAK,SACL8E,UAAQ,KAEVnH,EAAAA,EAAAA,KAAC0B,EAAAA,EAAU,CACTD,SAAU,GACVrB,MAAM,YACNkI,UAAW,SACXzI,GAAI,CAAEF,QAAS,OAAQC,eAAgB,UAAWG,SACnD,yQAOHoF,IACAnF,EAAAA,EAAAA,KAACX,EAAAA,EAAW,CACVE,aAAcA,GApOCwE,IACzB,MAAMwE,EAAU/C,EAAmBzB,GACnCE,EAASsE,GACTnD,GAAc,EAAK,IAkOT5F,aA/NSA,KACnB2E,EAAMJ,GACNqB,GAAc,EAAK,SAkOP,C,+YC1RhB,MAAMoD,GAAQC,EAAAA,EAAAA,IAAO,QAAPA,CAAgB,CAC5B9I,QAAS,SAGI,SAAS+I,IAAY,IAADC,EACjC,MAAOC,EAAaC,IAAkBxD,EAAAA,EAAAA,UAAS,CAC7CyD,OAAQ,KACRC,aAAa,EACbC,cAAe,KACfC,WAAY,QAER,KAAE1C,EAAI,WAAE2C,IAAeC,EAAAA,EAAAA,MACrBC,WAAYC,IAAiBC,EAAAA,EAAAA,MAC/B,WAAEF,IAAeG,EAAAA,EAAAA,MACjB,YAAE5G,EAAW,WAAEC,GAAeU,EAAAA,IAC7B6B,EAAYC,IAAiBC,EAAAA,EAAAA,WAAS,IACtCmE,EAASC,IAAcpE,EAAAA,EAAAA,WAAS,IAEvCS,EAAAA,EAAAA,YAAU,KACR3B,EAAMuF,GACNC,GAAiB,GAChB,CAACpD,IAEJ,MAsCMoD,EAAkBC,UACtB,MAAMC,QAAkBC,EAAAA,EAAAA,IAAiB,OAAJvD,QAAI,IAAJA,OAAI,EAAJA,EAAMuC,QAAQiB,OAAM,IAAM,KAC/DlB,EAAe,IACVD,EACHE,OAAQe,EACRb,cAAea,GACf,EAGEG,EAAsBC,IAC1B,MAAMC,EAAQD,EAAE7H,OAAO+H,MAAM,GAC7B,IAAKD,EAAO,OACZ,IAAKvH,EAAYyH,SAASF,EAAMG,OAASH,EAAMlJ,KAAO4B,EAEpD,YADAiG,EAAe,IAAKD,EAAaG,aAAa,IAGhD,MAAMuB,EAAWC,IAAIC,gBAAgBN,GACrCrB,EAAe,IACVD,EACHE,OAAQwB,EACRrB,WAAYiB,EACZnB,aAAa,GACb,EAOEW,EAAoB,IACrBnD,EACHkE,KAAKC,EAAAA,EAAAA,IAAkBnE,EAAKkE,IAAe,cAC3CE,IAAmD,QAAhDhC,EAAEiC,EAAAA,GAAOC,MAAMhF,GAASA,EAAKqB,QAAUX,EAAKoE,aAAI,IAAAhC,OAAA,EAA9CA,EAAgD/H,MACrDkK,UAAWvE,EAAKuE,UAAY,6BAAe,0BAGvC,QACJ5G,EAAO,MACPC,EAAK,aACL5E,EACA6E,WAAW,OAAEC,KACXC,EAAAA,EAAAA,IAAc,CAChBC,cAAemF,IAGXqB,GAAQC,EAAAA,EAAAA,KAERC,IADWC,EAAAA,EAAAA,IAAcH,IACdI,EAAAA,EAAAA,IAAcJ,IAE/B,OACEtL,EAAAA,EAAAA,MAACuG,EAAAA,EAAS,CAACC,GAAG,WAAUlG,SAAA,EACtBN,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,QAAQ,OAAOC,eAAe,gBAAgBsG,WAAW,SAAQnG,SAAA,EACpEC,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAACC,QAAQ,OAAMI,UACjBC,EAAAA,EAAAA,KAAC0B,EAAAA,EAAU,CAACwB,WAAY,IAAKzB,SAAU,GAAI0E,WAAY,EAAEpG,SAAC,iCAI3DoF,IAAcnF,EAAAA,EAAAA,KAACkB,EAAAA,EAAU,CAAChB,QA/FdkL,IAAMhG,GAAc,SAiGnCpF,EAAAA,EAAAA,KAACqG,EAAAA,EAAO,KACR5G,EAAAA,EAAAA,MAACgH,EAAAA,GAAI,CAACG,WAAS,EAAC/G,GAAI,CAAE6G,GAAI,GAAKC,GAAI,EAAE5G,SAAA,EACnCC,EAAAA,EAAAA,KAACyG,EAAAA,GAAI,CAACZ,MAAI,EAACvE,GAAI2J,EAAW,GAAK,EAAGI,GAAI,EAAEtL,UACtCN,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFC,QAAQ,OACR2L,cAAc,SACdpF,WAAW,SACXqF,OAAQ,EAAExL,SAAA,EAEVC,EAAAA,EAAAA,KAACwL,EAAAA,EAAM,CACLC,IAAKlF,EAAKlE,KACVqJ,IAAK9C,EAAYE,OACjBjJ,GAAI,CACFwB,aAAc,EACdhB,MAAO,MACPsL,SAAU,QACVC,OAAQ,IACRC,UAAW,YAGbjD,EAAYE,SAAW3D,IACvBnF,EAAAA,EAAAA,KAAA,SAAO8L,QAAQ,aAAY/L,UACzBN,EAAAA,EAAAA,MAACQ,EAAAA,EAAM,CACL8L,UAAU,QACV/K,KAAK,QACLgL,WAAWhM,EAAAA,EAAAA,KAACiM,EAAAA,EAA6B,IACzC9L,QAAQ,OACRC,MAAM,YAAWL,SAAA,EAEjBC,EAAAA,EAAAA,KAAC+G,EAAAA,EAAW,CACVC,SAAShH,EAAAA,EAAAA,KAACwI,EAAK,CAAC6B,KAAK,OAAO6B,OAAO,YACnChI,QAASA,EACT7B,KAAK,aACL4D,GAAG,aACHiB,MAAM,mCACNpF,SAAUkI,KAGZhK,EAAAA,EAAAA,KAAC0B,EAAAA,EAAU,CAAC7B,GAAI,CAAE4B,SAAU,GAAIyB,WAAY,KAAMnD,SAAC,yBAOxD6I,EAAYE,SAAW3D,IACtB1F,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,QAAQ,OAAO2L,cAAc,MAAMpF,WAAW,SAAQnG,SAAA,EACzDN,EAAAA,EAAAA,MAACQ,EAAAA,EAAM,CACL8L,UAAU,QACV/K,KAAK,QACLgL,WAAWhM,EAAAA,EAAAA,KAACiM,EAAAA,EAA6B,IACzC9L,QAAQ,OACRC,MAAM,YAAWL,SAAA,EAEjBC,EAAAA,EAAAA,KAAC+G,EAAAA,EAAW,CACVC,SAAShH,EAAAA,EAAAA,KAACwI,EAAK,CAAC6B,KAAK,OAAO6B,OAAO,YACnChI,QAASA,EACT7B,KAAK,aACL4D,GAAG,aACHiB,MAAM,mCACNpF,SAAUkI,KAEZhK,EAAAA,EAAAA,KAAC0B,EAAAA,EAAU,CAAC7B,GAAI,CAAE4B,SAAU,GAAIyB,WAAY,KAAMnD,SAAC,2BAIrDC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CACL8L,UAAU,QACV7L,QAtGWiM,KACzBtD,EAAe,IAAKD,EAAaE,OAAQ,KAAMC,aAAa,GAAQ,EAsGtD/H,KAAK,QACLgL,WAAWhM,EAAAA,EAAAA,KAACoM,EAAAA,EAA0B,IACtCjM,QAAQ,OACRC,MAAM,YAAWL,UAEjBC,EAAAA,EAAAA,KAAC0B,EAAAA,EAAU,CAAC7B,GAAI,CAAE4B,SAAU,GAAIyB,WAAY,KAAMnD,SAAC,gBAMxD6I,EAAYG,aAAe1F,EAAAA,SAGhC5D,EAAAA,EAAAA,MAACgH,EAAAA,GAAI,CAACZ,MAAI,EAACvE,GAAI2J,EAAW,GAAK,EAAElL,SAAA,CAC7BoF,GAiGAnF,EAAAA,EAAAA,KAACqM,EAAAA,EAAc,CAAC9F,KAAMA,KAhGtB9G,EAAAA,EAAAA,MAACgH,EAAAA,GAAI,CAACG,WAAS,EAACC,GAAI,EAAGC,QAAS,EAAE/G,SAAA,EAChCC,EAAAA,EAAAA,KAACyG,EAAAA,GAAI,CAACZ,MAAI,EAACvE,GAAI,GAAIiG,GAAI,EAAExH,UACvBC,EAAAA,EAAAA,KAAC+G,EAAAA,EAAW,CACVC,SAAShH,EAAAA,EAAAA,KAACiH,EAAAA,EAAS,IACnB/C,QAASA,EACTG,OAAQA,EACRpD,WAAS,EACTgF,GAAG,OACHiB,MAAM,uBACN7E,KAAK,OACL8E,UAAQ,EACRC,SAAUjC,OAGdnF,EAAAA,EAAAA,KAACyG,EAAAA,GAAI,CAACZ,MAAI,EAACvE,GAAI,GAAIiG,GAAI,EAAExH,UACvBC,EAAAA,EAAAA,KAAC+G,EAAAA,EAAW,CACVC,SAAShH,EAAAA,EAAAA,KAACiH,EAAAA,EAAS,IACnB/C,QAASA,EACTG,OAAQA,EACRpD,WAAS,EACTgF,GAAG,QACHiB,MAAM,QACN7E,KAAK,QACLqF,QAAQ,QACRP,UAAQ,EACRC,SAAUjC,OAGdnF,EAAAA,EAAAA,KAACyG,EAAAA,GAAI,CAACZ,MAAI,EAACvE,GAAI,GAAIiG,GAAI,EAAExH,UACvBC,EAAAA,EAAAA,KAAC+G,EAAAA,EAAW,CACVC,SAAShH,EAAAA,EAAAA,KAACiH,EAAAA,EAAS,IACnB/C,QAASA,EACTG,OAAQA,EACRpD,WAAS,EACTgF,GAAG,QACHiB,MAAM,oCACN7E,KAAK,QACLqF,QAAQ,QACRP,UAAQ,EACRC,SAAUjC,OAGdnF,EAAAA,EAAAA,KAACyG,EAAAA,GAAI,CAACZ,MAAI,EAACvE,GAAI,GAAIiG,GAAI,EAAExH,UACvBC,EAAAA,EAAAA,KAAC+G,EAAAA,EAAW,CACVC,SAAShH,EAAAA,EAAAA,KAACM,EAAAA,EAAU,CAACgM,QAASzL,QAC9BqD,QAASA,EACTG,OAAQA,EACRpD,WAAS,EACTgF,GAAG,MACHiB,MAAM,eACN7E,KAAK,MACL8E,UAAQ,EACRC,SAAUjC,OAGdnF,EAAAA,EAAAA,KAACyG,EAAAA,GAAI,CAACZ,MAAI,EAACvE,GAAI,GAAIiG,GAAI,EAAExH,UACvBC,EAAAA,EAAAA,KAAC+G,EAAAA,EAAW,CACVC,SAAShH,EAAAA,EAAAA,KAACwH,EAAAA,EAAW,IACrBxD,QAAS4G,EAAAA,GACT1G,QAASA,EACTG,OAAQA,EACRpD,WAAS,EACTgF,GAAG,MACHiB,MAAM,oBACN7E,KAAK,MACL+E,SAAUjC,OAGdnF,EAAAA,EAAAA,KAACyG,EAAAA,GAAI,CAACZ,MAAI,EAACvE,GAAI,GAAIiG,GAAI,EAAExH,UACvBC,EAAAA,EAAAA,KAAC+G,EAAAA,EAAW,CACVC,SAAShH,EAAAA,EAAAA,KAACwH,EAAAA,EAAW,IACrBxD,QAASuI,EAAAA,GACTrI,QAASA,EACTG,OAAQA,EACRpD,WAAS,EACTgF,GAAG,YACHiB,MAAM,oCACN7E,KAAK,YACL+E,SAAUjC,OAGdnF,EAAAA,EAAAA,KAACyG,EAAAA,GAAI,CAACZ,MAAI,EAACvE,GAAI,GAAGvB,UAChBC,EAAAA,EAAAA,KAAC+G,EAAAA,EAAW,CACVC,SAAShH,EAAAA,EAAAA,KAACiH,EAAAA,EAAS,IACnB/C,QAASA,EACTG,OAAQA,EACRpD,WAAS,EACTgF,GAAG,UACHiB,MAAM,yBACN7E,KAAK,UACL8E,UAAQ,EACRC,SAAUjC,UAOhBA,IACAnF,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAACC,QAAQ,OAAOC,eAAe,SAASC,GAAI,CAAEC,IAAK,GAAIC,SACxDyJ,GACCxJ,EAAAA,EAAAA,KAACwM,EAAAA,EAAgB,CAACxL,KAAM,MAExBhB,EAAAA,EAAAA,KAACX,EAAAA,EAAW,CACVE,aAAcA,GA5RJqK,UAAiB,IAAD6C,EACxChD,GAAW,GAEX,IAAII,EAAYtD,EAAKuC,OACjBF,EAAYK,aACdY,QAAkBZ,EAAAA,EAAAA,IAAWL,EAAYK,YAAYc,OAAM,IAAM,MAC9DnB,EAAYE,eACT4D,EAAAA,EAAAA,IAAgBnG,EAAKuC,QAC3Be,EAAY,IAGd,MAAMtB,EAAU,IACXxE,EACH0G,KAAKkC,EAAAA,EAAAA,IAAmB5I,EAAK0G,KAC7BK,UAA8B,+BAAnB/G,EAAK+G,UAA6B,IAAM,IACnDhC,OAAQe,GAEVX,EAAW,IACNX,EACHuC,UAAiC,MAAtBvC,EAAQuC,UACnBH,IAAsD,QAAnD8B,EAAE7B,EAAAA,GAAOC,MAAMhF,GAASA,EAAKjF,QAAU2H,EAAQoC,aAAI,IAAA8B,OAAA,EAAjDA,EAAmDvF,MACxD4B,OAAQe,IAEVT,EAAWb,GAEXc,EAAad,GACbkB,GAAW,GACXrE,GAAc,EAAK,IAkQL5F,aA/PKA,KACnB2E,EAAMuF,GACNb,EAAe,IAAKD,EAAaE,OAAQF,EAAYI,gBACrD5D,GAAc,EAAK,cAqQvB,C,4DCxWA,MAgBA,GAhBkBqD,EAAAA,EAAAA,IAAO/I,EAAAA,EAAP+I,EAAY5E,IAAA,IAAC,MAAEkH,GAAOlH,EAAA,MAAM,CAC5C+I,WAAY,QACZhB,OAAQ,GACRvL,MAAO,OACPwM,UAAW,uBACXC,KAAM,EACNC,MAAO,EACPC,OAAQ,EACRC,OAAQ,EACRjF,SAAU,SACVrI,QAAS,OACTC,eAAgB,WAChBsG,WAAY,SACZpG,IAAKiL,EAAMjE,QAAQ,GACpB,G,yGCdD,MAkDA,EA3CwBjD,IAAmB,IAAlB,SAAEqJ,GAAUrJ,EACnC,OACEpE,EAAAA,EAAAA,MAAC0N,EAAAA,EAAI,CAACpB,UAAU,MAAMlM,GAAI,CAAEuN,GAAI,GAAIrN,SAAA,EAClCC,EAAAA,EAAAA,KAACqN,EAAAA,GAAQ,CAAAtN,UACPC,EAAAA,EAAAA,KAAC0B,EAAAA,EAAU,CAACD,SAAU,GAAIyB,WAAY,IAAInD,SAAC,6DAI5CmN,EAAStH,KAAK0H,IACbtN,EAAAA,EAAAA,KAACqN,EAAAA,GAAQ,CAAkBxN,GAAI,CAAE0N,EAAG,GAAIxN,UACtCC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CACLJ,GAAI,CAAE8G,GAAI,GACV1F,WAAS,EACTf,QAASA,IApBUsN,KAC7B,MAAMxG,EAAUyG,SAASC,eAAeF,GACpCxG,GACFA,EAAQ2G,eAAe,CAAEC,SAAU,UACrC,EAgByBC,CAAsBP,EAAQrH,IAC7C7F,MAAM,YAAWL,UAEjBN,EAAAA,EAAAA,MAACgH,EAAAA,GAAI,CAACG,WAAS,EAAA7G,SAAA,EACbC,EAAAA,EAAAA,KAACyG,EAAAA,GAAI,CACHZ,MAAI,EACJvE,GAAI,EACJ3B,QAAQ,OACRuG,WAAW,SACXtG,eAAe,SAAQG,SAEtBuN,EAAQQ,QAEX9N,EAAAA,EAAAA,KAACyG,EAAAA,GAAI,CACHZ,MAAI,EACJvE,GAAI,GACJ3B,QAAQ,OACRC,eAAe,OACfsG,WAAW,SAAQnG,UAEnBC,EAAAA,EAAAA,KAAC0B,EAAAA,EAAU,CAACD,SAAU,GAAG1B,SAAEuN,EAAQS,gBAxB5BT,EAAQrH,QA8BpB,C,wECzCX,MA0BA,EA1BwBqD,KACtB,MAAM,MAAE0E,EAAK,WAAE9E,IAAeC,EAAAA,EAAAA,KACxB8E,EAAmBC,EAAAA,GAAaC,QAC9BC,OAAQhF,EAAU,UAAEiF,IAAcC,EAAAA,EAAAA,aAIxCL,EAAkB,CAClBM,UAAYC,IACS,MAAfA,EAAIC,QACNT,EAAMU,QAAQ,CAAEC,QAASH,EAAII,UAC7B1F,EAAW,CAAEJ,OAAQ0F,EAAIzK,KAAK+E,UAE9BkF,EAAMa,MAAM,CAAEF,QAASH,EAAII,SAC7B,EAEFE,QAAUD,IACRb,EAAMa,MAAM,CAAEF,QAASE,EAAME,SAAShL,KAAK6K,SAAU,IAGzD,MAAO,CACLxF,aACAiF,YACD,C,wECvBH,MA2BA,EA3B0B9E,KACxB,MAAMyF,GAAcC,EAAAA,EAAAA,mBACd,MAAEjB,IAAU7E,EAAAA,EAAAA,KACZ8E,EAAmBiB,EAAAA,GAAWf,QAC5BC,OAAQhF,EAAU,UAAEiF,IAAcC,EAAAA,EAAAA,aAIxCL,EAAkB,CAClBM,UAAYC,IACS,MAAfA,EAAIC,QACNO,EAAYG,kBAAkB,eAC9BnB,EAAMU,QAAQ,CAAEC,QAASH,EAAII,WAE7BZ,EAAMa,MAAM,CAAEF,QAASH,EAAII,SAC7B,EAEFE,QAAUD,IACRb,EAAMa,MAAM,CAAEF,QAASE,EAAME,SAAShL,KAAK6K,SAAU,IAGzD,MAAO,CACLxF,aACAiF,YACD,C","sources":["components/ButtonGroup/index.tsx","components/DatePicker/index.tsx","components/EditButton/index.tsx","components/NumberFormatCustom/index.tsx","components/TextField/index.tsx","components/UploadError/index.tsx","modules/jobProfile/GeneralForm.tsx","modules/jobProfile/Personal.tsx","modules/jobProfile/SubmitBox.tsx","modules/jobProfile/TableOfContent.tsx","modules/users/hooks/useMutateAvatar.ts","modules/users/hooks/useMutateUserHook.ts"],"sourcesContent":["import { Box, Button } from '@mui/material';\n\nexport default function ButtonGroup(props) {\n  const { handleSubmit, handleCancel } = props;\n  return (\n    <Box display=\"flex\" justifyContent=\"center\" sx={{ gap: 3 }}>\n      <Button\n        onClick={handleCancel}\n        variant=\"outlined\"\n        color=\"secondary\"\n        sx={{ width: 120 }}\n      >\n        Hủy\n      </Button>\n      <Button\n        color=\"success\"\n        onClick={handleSubmit}\n        variant=\"contained\"\n        sx={{ width: 120 }}\n      >\n        Xác nhận\n      </Button>\n    </Box>\n  );\n}\n","import { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { DatePicker as DatePickerMui } from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport dayjs from 'dayjs';\n\nexport default function DatePicker(props) {\n  return (\n    <LocalizationProvider dateAdapter={AdapterDayjs}>\n      <DatePickerMui\n        format=\"DD/MM/YYYY\"\n        {...props}\n        value={props.value ? dayjs(props.value) : null}\n        slotProps={{ textField: { size: 'small', fullWidth: true } }}\n      />\n    </LocalizationProvider>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Button, Typography, ButtonProps } from '@mui/material';\nimport AutoFixHighOutlinedIcon from '@mui/icons-material/AutoFixHighOutlined';\nimport { useResponsive } from 'src/utils/responsive';\n\nexport default function EditButton(props: ButtonProps) {\n  const { isMobile } = useResponsive();\n  return (\n    <Button\n      {...props}\n      variant=\"outlined\"\n      color=\"secondary\"\n      // startIcon={<AutoFixHighOutlinedIcon fontSize=\"large\" />}\n      sx={{ display: 'flex', borderRadius: { xs: 1, md: 5 } }}\n      size={isMobile ? 'small' : 'medium'}\n    >\n      <AutoFixHighOutlinedIcon fontSize=\"small\" />\n      <Typography textTransform=\"none\" display={isMobile && 'none'}>\n        Chỉnh sửa\n      </Typography>\n    </Button>\n  );\n}\n","import * as React from 'react';\nimport { NumericFormat, NumericFormatProps } from 'react-number-format';\n\ninterface CustomProps {\n  onChange: (event: { target: { name: string; value: string } }) => void;\n  name: string;\n}\n\nconst NumericFormatCustom = React.forwardRef<NumericFormatProps, CustomProps>(\n  function NumericFormatCustom(props, ref) {\n    const { onChange, ...other } = props;\n\n    return (\n      <NumericFormat\n        {...other}\n        getInputRef={ref}\n        onValueChange={(values) => {\n          onChange({\n            target: {\n              name: props.name,\n              value: values.value\n            }\n          });\n        }}\n        thousandSeparator\n        valueIsNumericString\n      />\n    );\n  }\n);\n\nexport default NumericFormatCustom;\n","import { TextFieldProps, TextField as TextInput } from '@mui/material';\n\nconst TextField = (props: TextFieldProps) => {\n  return <TextInput size=\"small\" fullWidth {...props} />;\n};\n\nexport default TextField;\n","import { Typography } from '@mui/material';\nimport {\n  avatarFormat,\n  CVFormat,\n  coverImgFormat\n} from 'src/constants/uploadFileRule';\n\nconst generateErrorText = (\n  object: string,\n  acceptTypes: string[],\n  acceptSize: number,\n  fileType: string\n) => {\n  const typeRegex = new RegExp(`${fileType}/`, 'g');\n  return (\n    <Typography color=\"error\" my={1} fontWeight={700} fontSize={13}>\n      {object} phải có định dạng&nbsp;\n      {acceptTypes.join(', ').replace(typeRegex, '.')} và dung lượng{' '}\n      {` <=${acceptSize / 1024 / 1024}MB`}\n    </Typography>\n  );\n};\n\nconst generateOverTokenErrorText = () => {\n  return (\n    <Typography color=\"error\" my={1} fontWeight={700} fontSize={13}>\n      Rất tiếc, hệ thống chỉ có thể phân tích hồ sơ chứa tối đa 4000 từ. Vui\n      lòng tải hồ sơ khác !\n    </Typography>\n  );\n};\n\nconst generateFailedOCRErrorText = () => {\n  return (\n    <Typography color=\"error\" my={1} fontWeight={700} fontSize={13}>\n      Không nhận diện được nội dung trong file hồ sơ của bạn. Vui lòng tải hồ sơ\n      khác !\n    </Typography>\n  );\n};\n\nexport const avatarErrorText = generateErrorText(\n  'Ảnh đại diện',\n  avatarFormat.acceptTypes,\n  avatarFormat.acceptSize,\n  'image'\n);\nexport const coverErrorText = generateErrorText(\n  'Ảnh bìa',\n  coverImgFormat.acceptTypes,\n  coverImgFormat.acceptSize,\n  'image'\n);\nexport const applicationErrorText = generateErrorText(\n  'CV',\n  CVFormat.acceptTypes,\n  CVFormat.acceptSize,\n  'application'\n);\nexport const overTokenErrorText = generateOverTokenErrorText();\nexport const failedOCRErrorText = generateFailedOCRErrorText();\n","import React, { useState, useEffect } from 'react';\nimport { Box, Grid, Typography, Container, Divider } from '@mui/material';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormControl from 'src/components/FormControl';\nimport SelectInput from 'src/components/SelectInput';\nimport TextField from 'src/components/TextField';\nimport Autocomplete from 'src/components/Autocomplete';\nimport { useForm } from 'react-hook-form';\nimport {\n  convertObjectListToString,\n  convertObjectListToStringForSkill,\n  convertToObjectsForSkill,\n  findObjectKey\n} from 'src/utils/formatData';\nimport NumericFormatCustom from 'src/components/NumberFormatCustom';\nimport EditButton from 'src/components/EditButton';\nimport ButtonGroup from 'src/components/ButtonGroup';\nimport {\n  Degree,\n  EmploymentType,\n  Experience,\n  PositionLevel\n} from 'src/constants/enum';\nimport GeneralViewUI from './GeneralViewUI';\nimport TagInput from 'src/components/TagInput';\nimport skills from 'src/constants/skills';\nimport { SKILLS } from 'src/constants';\ninterface Option {\n  value: any;\n  label: any;\n}\n\ninterface FormProps {\n  jobTitle: string;\n  profession: string | Option[];\n  currentPosition: string;\n  desiredPosition: string;\n  desiredSalary: number;\n  degree: string;\n  experience: string;\n  workAddress: string | Option[];\n  employmentType: string;\n  careerGoal: string;\n  skills: string;\n}\n\ninterface GeneralFormProps {\n  data: FormProps;\n  options: {\n    profession: Option[];\n    workAddress: Option[];\n    positionLevel: Option[];\n    degree: Option[];\n    experience: Option[];\n    workingForm: Option[];\n  };\n  onSubmit: (data: FormProps) => void;\n}\n\nconst GeneralForm: React.FC<GeneralFormProps> = ({\n  data,\n  options,\n  onSubmit\n}) => {\n  const defaultValues: FormProps = {\n    jobTitle: '',\n    profession: '',\n    currentPosition: '',\n    desiredPosition: '',\n    desiredSalary: null,\n    degree: '',\n    experience: '',\n    workAddress: '',\n    employmentType: '',\n    careerGoal: '',\n    skills: ''\n  };\n\n  const {\n    control,\n    reset,\n    handleSubmit,\n    formState: { errors }\n  } = useForm<FormProps>({\n    defaultValues: defaultValues\n  });\n\n  const ref = React.useRef(null);\n  const [isReadOnly, setIsReadOnly] = useState(false);\n  const [employeeSkills, setSetEmployeeSkills] = useState(null);\n\n  const handleSaveProfile = (data: FormProps) => {\n    const newData = processDataPayload(data);\n    onSubmit(newData);\n    setIsReadOnly(true);\n  };\n\n  const handleCancel = () => {\n    reset(data);\n    setIsReadOnly(true);\n  };\n\n  const onEdit = () => setIsReadOnly(false);\n\n  const processDataPayload = (data: FormProps) => {\n    return {\n      ...data,\n      profession: convertObjectListToString(data?.profession as Option[]),\n      workAddress: convertObjectListToString(data?.workAddress as Option[]),\n      skills: Array.isArray(data.skills)\n        ? data.skills.map((item) => item.value || item).join(',')\n        : data.skills\n    };\n  };\n\n  useEffect(() => {\n    reset(data);\n    data?.skills &&\n      setSetEmployeeSkills(convertToObjectsForSkill(data?.skills));\n  }, [data]);\n\n  return (\n    <Container id=\"general\">\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Box display=\"flex\">\n          <Typography fontWeight={700} fontSize={21} lineHeight={3}>\n            Thông tin chung\n          </Typography>\n        </Box>\n        {isReadOnly && <EditButton onClick={onEdit} />}\n      </Box>\n      <Divider />\n      {isReadOnly ? (\n        <GeneralViewUI\n          user={{\n            ...data,\n            degree: Degree[data.degree] ? Degree[data.degree] : data.degree\n          }}\n        />\n      ) : (\n        <Grid sx={{ mt: 1 }} py={2}>\n          <Grid container mb={4} spacing={3}>\n            <Grid item xs={12}>\n              <FormControl\n                element={<TextField />}\n                control={control}\n                errors={errors}\n                fullWidth\n                id=\"jobTitle\"\n                label=\"Vị trí mong muốn\"\n                name=\"jobTitle\"\n                required\n                disabled={isReadOnly}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl\n                element={<Autocomplete />}\n                control={control}\n                errors={errors}\n                fullWidth\n                id=\"profession\"\n                label=\"Nghề nghiệp\"\n                name=\"profession\"\n                options={options.profession}\n                required\n                disabled={isReadOnly}\n                defaultValue={data?.profession}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl\n                element={<SelectInput />}\n                options={options.positionLevel}\n                control={control}\n                errors={errors}\n                fullWidth\n                id=\"currentPosition\"\n                label=\"Cấp bậc hiện tại\"\n                name=\"currentPosition\"\n                required\n                disabled={isReadOnly}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl\n                element={<SelectInput />}\n                options={options.positionLevel}\n                control={control}\n                errors={errors}\n                fullWidth\n                id=\"desiredPosition\"\n                label=\"Cấp bậc mong muốn\"\n                name=\"desiredPosition\"\n                required\n                disabled={isReadOnly}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl\n                element={<TextField />}\n                control={control}\n                errors={errors}\n                fullWidth\n                id=\"desiredSalary\"\n                label=\"Mức lương mong muốn\"\n                name=\"desiredSalary\"\n                pattern=\"integer\"\n                required\n                disabled={isReadOnly}\n                InputProps={{\n                  inputComponent: NumericFormatCustom as any,\n                  endAdornment: (\n                    <InputAdornment position=\"end\">triệu VNĐ</InputAdornment>\n                  )\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl\n                element={<SelectInput />}\n                options={options.degree}\n                control={control}\n                errors={errors}\n                fullWidth\n                id=\"degree\"\n                label=\"Trình độ học vấn\"\n                name=\"degree\"\n                required\n                disabled={isReadOnly}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl\n                element={<SelectInput />}\n                options={options.experience}\n                control={control}\n                errors={errors}\n                fullWidth\n                id=\"experience\"\n                label=\"Số năm kinh nghiệm\"\n                name=\"experience\"\n                required\n                disabled={isReadOnly}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl\n                element={<SelectInput />}\n                options={options.workingForm}\n                control={control}\n                errors={errors}\n                fullWidth\n                id=\"employmentType\"\n                label=\"Hình thức làm việc\"\n                name=\"employmentType\"\n                required\n                disabled={isReadOnly}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl\n                element={<Autocomplete />}\n                options={options.workAddress}\n                control={control}\n                errors={errors}\n                defaultValue={data?.workAddress}\n                fullWidth\n                id=\"workAddress\"\n                label=\"Địa chỉ làm việc\"\n                name=\"workAddress\"\n                required\n                disabled={isReadOnly}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl\n                element={<TextField />}\n                control={control}\n                errors={errors}\n                fullWidth\n                id=\"careerGoal\"\n                label=\"Mục tiêu nghề nghiệp\"\n                name=\"careerGoal\"\n                required\n                disabled={isReadOnly}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl\n                element={\n                  <Autocomplete\n                    freeSolo={true}\n                    limitTags={7}\n                    options={SKILLS.map((item) => item.value)}\n                  />\n                }\n                defaultValue={data?.skills?.split(',')}\n                control={control}\n                errors={errors}\n                id=\"skills\"\n                label=\"Kĩ năng bắt buộc\"\n                name=\"skills\"\n                required\n              />\n              <Typography\n                fontSize={12}\n                color=\"secondary\"\n                fontStyle={'italic'}\n                sx={{ display: 'flex', justifyContent: 'center' }}\n              >\n                Hãy liệt kê tối đa 10 từ khóa. Ví dụ: Python, ReactJS, HTML,\n                Go... Sẽ giúp hệ thống tìm kiếm được doanh nghiệp phù hợp với hồ\n                sơ bạn nhất\n              </Typography>\n            </Grid>\n          </Grid>\n          {!isReadOnly && (\n            <ButtonGroup\n              handleSubmit={handleSubmit(handleSaveProfile)}\n              handleCancel={handleCancel}\n            />\n          )}\n        </Grid>\n      )}\n    </Container>\n  );\n};\n\nexport default GeneralForm;\n","import { useState, useEffect } from 'react';\nimport {\n  Box,\n  Button,\n  Grid,\n  Typography,\n  Container,\n  styled,\n  Divider,\n  Avatar,\n  useTheme\n} from '@mui/material';\nimport AddPhotoAlternateOutlinedIcon from '@mui/icons-material/AddPhotoAlternateOutlined';\nimport DoNotDisturbOnOutlinedIcon from '@mui/icons-material/DoNotDisturbOnOutlined';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport FormControl from 'src/components/FormControl';\nimport SelectInput from 'src/components/SelectInput';\nimport DatePicker from 'src/components/DatePicker';\nimport TextField from 'src/components/TextField';\nimport EditButton from 'src/components/EditButton';\nimport { useForm } from 'react-hook-form';\nimport dayjs from 'dayjs';\nimport { User } from '../users/model';\nimport { useApp } from 'src/modules/app/hooks';\nimport useMutateUserData from '../users/hooks/useMutateUserHook';\nimport { GENDER, ISMARRIED, ISMARRIED_OPTION } from 'src/constants/option';\nimport {\n  GetFileByUserId,\n  UploadFileByUserId,\n  RemoveFileByUserId,\n  DocumentType,\n  getFileByUrl,\n  uploadFile,\n  removeFileByUrl\n} from 'src/common/firebaseService';\nimport { avatarFormat } from 'src/constants/uploadFileRule';\nimport { toOutputDateString, toInputDateString } from 'src/utils/formatData';\nimport ButtonGroup from 'src/components/ButtonGroup';\nimport { avatarErrorText } from 'src/components/UploadError';\nimport useMutateAvatar from 'src/modules/users/hooks/useMutateAvatar';\nimport PersonalViewUI from './PersonalViewUI';\nimport { checkIsMobile, checkIsTablet } from 'src/utils/responsive';\n\nconst Input = styled('input')({\n  display: 'none'\n});\n\nexport default function Personal() {\n  const [avatarState, setAvatarState] = useState({\n    avatar: null,\n    avatarError: false,\n    storageAvatar: null,\n    uploadFile: null\n  });\n  const { user, setUserApp } = useApp();\n  const { onSaveData: onSavaAvatar } = useMutateAvatar();\n  const { onSaveData } = useMutateUserData();\n  const { acceptTypes, acceptSize } = avatarFormat;\n  const [isReadOnly, setIsReadOnly] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    reset(defaultUserValues);\n    handleGetAvatar();\n  }, [user]);\n\n  const handleEdit = () => setIsReadOnly(false);\n\n  const handleSaveProfile = async (data) => {\n    setLoading(true);\n\n    let avatarUrl = user.avatar;\n    if (avatarState.uploadFile)\n      avatarUrl = await uploadFile(avatarState.uploadFile).catch(() => '');\n    if (!avatarState.avatar) {\n      await removeFileByUrl(user.avatar);\n      avatarUrl = '';\n    }\n\n    const newData = {\n      ...data,\n      dob: toOutputDateString(data.dob),\n      isMarried: data.isMarried === 'Đã kết hôn' ? '1' : '0',\n      avatar: avatarUrl\n    };\n    setUserApp({\n      ...newData,\n      isMarried: newData.isMarried === '1',\n      sex: GENDER.find((item) => item.value === newData.sex)?.label,\n      avatar: avatarUrl\n    });\n    onSaveData(newData);\n\n    onSavaAvatar(newData);\n    setLoading(false);\n    setIsReadOnly(true);\n  };\n\n  const handleCancel = () => {\n    reset(defaultUserValues);\n    setAvatarState({ ...avatarState, avatar: avatarState.storageAvatar });\n    setIsReadOnly(true);\n  };\n\n  const handleGetAvatar = async () => {\n    const avatarUrl = await getFileByUrl(user?.avatar).catch(() => '');\n    setAvatarState({\n      ...avatarState,\n      avatar: avatarUrl,\n      storageAvatar: avatarUrl\n    });\n  };\n\n  const handleUploadAvatar = (e) => {\n    const image = e.target.files[0];\n    if (!image) return;\n    if (!acceptTypes.includes(image.type) || image.size > acceptSize) {\n      setAvatarState({ ...avatarState, avatarError: true });\n      return;\n    }\n    const imageUrl = URL.createObjectURL(image);\n    setAvatarState({\n      ...avatarState,\n      avatar: imageUrl,\n      uploadFile: image,\n      avatarError: false\n    });\n  };\n\n  const handleDeleteAvatar = () => {\n    setAvatarState({ ...avatarState, avatar: null, avatarError: false });\n  };\n\n  const defaultUserValues = {\n    ...user,\n    dob: toInputDateString(user.dob as string, 'DD-MM-YYYY'),\n    sex: GENDER.find((item) => item.label === user.sex)?.value,\n    isMarried: user.isMarried ? 'Đã kết hôn' : 'Độc thân'\n  };\n\n  const {\n    control,\n    reset,\n    handleSubmit,\n    formState: { errors }\n  } = useForm<User>({\n    defaultValues: defaultUserValues\n  });\n\n  const theme = useTheme();\n  const isMobile = checkIsMobile(theme);\n  const isTablet = checkIsTablet(theme);\n\n  return (\n    <Container id=\"personal\">\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Box display=\"flex\">\n          <Typography fontWeight={700} fontSize={21} lineHeight={3}>\n            Thông tin cá nhân\n          </Typography>\n        </Box>\n        {isReadOnly && <EditButton onClick={handleEdit} />}\n      </Box>\n      <Divider />\n      <Grid container sx={{ mt: 1 }} py={2}>\n        <Grid item xs={isTablet ? 12 : 3} pr={2}>\n          <Box\n            display=\"flex\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n            rowGap={2}\n          >\n            <Avatar\n              alt={user.name}\n              src={avatarState.avatar}\n              sx={{\n                borderRadius: 2,\n                width: '75%',\n                maxWidth: '180px',\n                height: 180,\n                objectFit: 'cover'\n              }}\n            />\n            {!avatarState.avatar && !isReadOnly && (\n              <label htmlFor=\"userAvatar\">\n                <Button\n                  component=\"label\"\n                  size=\"small\"\n                  startIcon={<AddPhotoAlternateOutlinedIcon />}\n                  variant=\"text\"\n                  color=\"secondary\"\n                >\n                  <FormControl\n                    element={<Input type=\"file\" accept=\"image/*\" />}\n                    control={control}\n                    name=\"userAvatar\"\n                    id=\"userAvatar\"\n                    label=\"Ảnh đại diện\"\n                    onChange={handleUploadAvatar}\n                    // sx={{ fontSize: 15 }}\n                  />\n                  <Typography sx={{ fontSize: 15, fontWeight: 700 }}>\n                    Tải lên\n                  </Typography>\n                </Button>\n              </label>\n            )}\n\n            {avatarState.avatar && !isReadOnly && (\n              <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\n                <Button\n                  component=\"label\"\n                  size=\"small\"\n                  startIcon={<AddPhotoAlternateOutlinedIcon />}\n                  variant=\"text\"\n                  color=\"secondary\"\n                >\n                  <FormControl\n                    element={<Input type=\"file\" accept=\"image/*\" />}\n                    control={control}\n                    name=\"userAvatar\"\n                    id=\"userAvatar\"\n                    label=\"Ảnh đại diện\"\n                    onChange={handleUploadAvatar}\n                  />\n                  <Typography sx={{ fontSize: 15, fontWeight: 700 }}>\n                    Thay đổi\n                  </Typography>\n                </Button>\n                <Button\n                  component=\"label\"\n                  onClick={handleDeleteAvatar}\n                  size=\"small\"\n                  startIcon={<DoNotDisturbOnOutlinedIcon />}\n                  variant=\"text\"\n                  color=\"secondary\"\n                >\n                  <Typography sx={{ fontSize: 15, fontWeight: 700 }}>\n                    Xóa\n                  </Typography>\n                </Button>\n              </Box>\n            )}\n            {avatarState.avatarError && avatarErrorText}\n          </Box>\n        </Grid>\n        <Grid item xs={isTablet ? 12 : 9}>\n          {!isReadOnly ? (\n            <Grid container mb={4} spacing={3}>\n              <Grid item xs={12} sm={6}>\n                <FormControl\n                  element={<TextField />}\n                  control={control}\n                  errors={errors}\n                  fullWidth\n                  id=\"name\"\n                  label=\"Họ và tên\"\n                  name=\"name\"\n                  required\n                  disabled={isReadOnly}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <FormControl\n                  element={<TextField />}\n                  control={control}\n                  errors={errors}\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email\"\n                  name=\"email\"\n                  pattern=\"email\"\n                  required\n                  disabled={isReadOnly}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <FormControl\n                  element={<TextField />}\n                  control={control}\n                  errors={errors}\n                  fullWidth\n                  id=\"phone\"\n                  label=\"Số điện thoại\"\n                  name=\"phone\"\n                  pattern=\"phone\"\n                  required\n                  disabled={isReadOnly}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <FormControl\n                  element={<DatePicker maxDate={dayjs()} />}\n                  control={control}\n                  errors={errors}\n                  fullWidth\n                  id=\"dob\"\n                  label=\"Ngày sinh\"\n                  name=\"dob\"\n                  required\n                  disabled={isReadOnly}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <FormControl\n                  element={<SelectInput />}\n                  options={GENDER}\n                  control={control}\n                  errors={errors}\n                  fullWidth\n                  id=\"sex\"\n                  label=\"Giới tính\"\n                  name=\"sex\"\n                  disabled={isReadOnly}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <FormControl\n                  element={<SelectInput />}\n                  options={ISMARRIED_OPTION}\n                  control={control}\n                  errors={errors}\n                  fullWidth\n                  id=\"isMarried\"\n                  label=\"Tình trạng hôn nhân\"\n                  name=\"isMarried\"\n                  disabled={isReadOnly}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <FormControl\n                  element={<TextField />}\n                  control={control}\n                  errors={errors}\n                  fullWidth\n                  id=\"address\"\n                  label=\"Địa chỉ\"\n                  name=\"address\"\n                  required\n                  disabled={isReadOnly}\n                />\n              </Grid>\n            </Grid>\n          ) : (\n            <PersonalViewUI user={user} />\n          )}\n          {!isReadOnly && (\n            <Box display=\"flex\" justifyContent=\"center\" sx={{ gap: 3 }}>\n              {loading ? (\n                <CircularProgress size={20} />\n              ) : (\n                <ButtonGroup\n                  handleSubmit={handleSubmit(handleSaveProfile)}\n                  handleCancel={handleCancel}\n                />\n              )}\n            </Box>\n          )}\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n","import { Box, styled } from '@mui/material';\n\nconst SubmitBox = styled(Box)(({ theme }) => ({\n  background: '#ffff',\n  height: 70,\n  width: '100%',\n  boxShadow: '0px 0px 10px #aae2f7',\n  left: 0,\n  right: 0,\n  bottom: 0,\n  zIndex: 1,\n  position: 'sticky',\n  display: 'flex',\n  justifyContent: 'flex-end',\n  alignItems: 'center',\n  gap: theme.spacing(4)\n}));\n\nexport default SubmitBox;\n","import { List, ListItem, Button, Typography, Grid } from '@mui/material';\n\nconst handleScrollToSection = (sectionId) => {\n  const element = document.getElementById(sectionId);\n  if (element) {\n    element.scrollIntoView({ behavior: 'smooth' });\n  }\n};\n\nconst TableOfContents = ({ sections }) => {\n  return (\n    <List component=\"nav\" sx={{ px: 0 }}>\n      <ListItem>\n        <Typography fontSize={14} fontWeight={700}>\n          Hồ sơ trực tuyến của bạn\n        </Typography>\n      </ListItem>\n      {sections.map((section) => (\n        <ListItem key={section.id} sx={{ p: 0 }}>\n          <Button\n            sx={{ py: 1 }}\n            fullWidth\n            onClick={() => handleScrollToSection(section.id)}\n            color=\"secondary\"\n          >\n            <Grid container>\n              <Grid\n                item\n                xs={2}\n                display=\"flex\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n              >\n                {section.icon}\n              </Grid>\n              <Grid\n                item\n                xs={10}\n                display=\"flex\"\n                justifyContent=\"left\"\n                alignItems=\"center\"\n              >\n                <Typography fontSize={13}>{section.title}</Typography>\n              </Grid>\n            </Grid>\n          </Button>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default TableOfContents;\n","import { AxiosError } from 'axios';\nimport { useMutation } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { useApp } from 'src/modules/app/hooks';\nimport { UploadAvatar } from '../userService';\nimport { User } from '../model';\n\nconst useMutateAvatar = () => {\n  const { toast, setUserApp } = useApp();\n  const mutationFunction = UploadAvatar.create;\n  const { mutate: onSaveData, isLoading } = useMutation<\n    ResponseData<Partial<User>>,\n    AxiosError<ResponseData<Partial<User>>>,\n    string\n  >(mutationFunction, {\n    onSuccess: (res) => {\n      if (res.status === 200) {\n        toast.success({ massage: res.message });\n        setUserApp({ avatar: res.data.avatar });\n      } else {\n        toast.error({ massage: res.message });\n      }\n    },\n    onError: (error) => {\n      toast.error({ massage: error.response.data.message });\n    }\n  });\n  return {\n    onSaveData,\n    isLoading\n  };\n};\n\nexport default useMutateAvatar;\n","import { AxiosError } from 'axios';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { useApp } from 'src/modules/app/hooks';\nimport { User } from '../model';\nimport { SetProfile } from '../userService';\n\nconst useMutateUserData = () => {\n  const queryClient = useQueryClient();\n  const { toast } = useApp();\n  const mutationFunction = SetProfile.create;\n  const { mutate: onSaveData, isLoading } = useMutation<\n    ResponseData<User>,\n    AxiosError<ResponseData<User>>,\n    User\n  >(mutationFunction, {\n    onSuccess: (res) => {\n      if (res.status === 200) {\n        queryClient.invalidateQueries('get-Profile');\n        toast.success({ massage: res.message });\n      } else {\n        toast.error({ massage: res.message });\n      }\n    },\n    onError: (error) => {\n      toast.error({ massage: error.response.data.message });\n    }\n  });\n  return {\n    onSaveData,\n    isLoading\n  };\n};\n\nexport default useMutateUserData;\n"],"names":["ButtonGroup","props","handleSubmit","handleCancel","_jsxs","Box","display","justifyContent","sx","gap","children","_jsx","Button","onClick","variant","color","width","DatePicker","LocalizationProvider","dateAdapter","AdapterDayjs","DatePickerMui","format","value","dayjs","slotProps","textField","size","fullWidth","EditButton","isMobile","useResponsive","borderRadius","xs","md","AutoFixHighOutlinedIcon","fontSize","Typography","textTransform","React","ref","onChange","other","NumericFormat","getInputRef","onValueChange","values","target","name","thousandSeparator","valueIsNumericString","TextInput","generateErrorText","object","acceptTypes","acceptSize","fileType","typeRegex","RegExp","concat","my","fontWeight","join","replace","avatarErrorText","avatarFormat","coverErrorText","coverImgFormat","applicationErrorText","CVFormat","overTokenErrorText","failedOCRErrorText","_ref","_data$skills","data","options","onSubmit","control","reset","formState","errors","useForm","defaultValues","jobTitle","profession","currentPosition","desiredPosition","desiredSalary","degree","experience","workAddress","employmentType","careerGoal","skills","isReadOnly","setIsReadOnly","useState","employeeSkills","setSetEmployeeSkills","processDataPayload","convertObjectListToString","Array","isArray","map","item","useEffect","convertToObjectsForSkill","Container","id","alignItems","lineHeight","onEdit","Divider","GeneralViewUI","user","Degree","Grid","mt","py","container","mb","spacing","FormControl","element","TextField","label","required","disabled","Autocomplete","defaultValue","sm","SelectInput","positionLevel","pattern","InputProps","inputComponent","NumericFormatCustom","endAdornment","InputAdornment","position","workingForm","freeSolo","limitTags","SKILLS","split","fontStyle","newData","Input","styled","Personal","_GENDER$find2","avatarState","setAvatarState","avatar","avatarError","storageAvatar","uploadFile","setUserApp","useApp","onSaveData","onSavaAvatar","useMutateAvatar","useMutateUserData","loading","setLoading","defaultUserValues","handleGetAvatar","async","avatarUrl","getFileByUrl","catch","handleUploadAvatar","e","image","files","includes","type","imageUrl","URL","createObjectURL","dob","toInputDateString","sex","GENDER","find","isMarried","theme","useTheme","isTablet","checkIsMobile","checkIsTablet","handleEdit","pr","flexDirection","rowGap","Avatar","alt","src","maxWidth","height","objectFit","htmlFor","component","startIcon","AddPhotoAlternateOutlinedIcon","accept","handleDeleteAvatar","DoNotDisturbOnOutlinedIcon","PersonalViewUI","maxDate","ISMARRIED_OPTION","CircularProgress","_GENDER$find","removeFileByUrl","toOutputDateString","background","boxShadow","left","right","bottom","zIndex","sections","List","px","ListItem","section","p","sectionId","document","getElementById","scrollIntoView","behavior","handleScrollToSection","icon","title","toast","mutationFunction","UploadAvatar","create","mutate","isLoading","useMutation","onSuccess","res","status","success","massage","message","error","onError","response","queryClient","useQueryClient","SetProfile","invalidateQueries"],"sourceRoot":""}