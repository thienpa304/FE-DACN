{"version":3,"file":"static/js/751.5e7ca3a2.chunk.js","mappings":"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","sources":["components/TabWrapper/index.tsx","modules/application/hooks/useQueryCandidateApplicationById.ts","modules/application/hooks/useQueryCandidateApplications.ts","modules/application/hooks/useMutateApplicatonStatus.ts","utils/openProfile.tsx","modules/application/hooks/useApplicationList.ts","pages/review-candidate-profiles/Table.tsx","modules/application/hooks/useQueryTotalResultOfApplicationByEmployer.ts","pages/review-candidate-profiles/index.tsx","../node_modules/@mui/icons-material/Check.js"],"sourcesContent":["import { Tabs, styled } from '@mui/material';\n\nconst TabsWrapper = styled(Tabs)(\n  () => `\n    .MuiTabs-scrollableX {\n    overflow-x: auto !important;\n      }\n  `\n);\nexport default TabsWrapper;\n","import { AxiosError } from 'axios';\nimport { useQuery } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { EmployeeApplication } from '../model';\nimport { CandidateProfilesService } from '../applicationService';\nimport { useEffect, useState } from 'react';\nimport { useApp } from 'src/modules/app/hooks';\n\nexport default function useQueryCandidateApplicationById(id) {\n  const { isEmployer } = useApp();\n  if (!id) return {};\n  const { data, isLoading } = useQuery<\n    ResponseData<EmployeeApplication>,\n    AxiosError<ResponseData<EmployeeApplication>>\n  >(\n    ['application-getById', id],\n    async () => CandidateProfilesService.getById(id),\n    {\n      retry: 1,\n      refetchOnWindowFocus: false,\n      keepPreviousData: true,\n      enabled: isEmployer\n    }\n  );\n\n  return {\n    data: data?.data,\n    isLoading\n  };\n}\n\nexport function useQueryCandidateApplicationByIdList(idList: number[]) {\n  const [dataList, setDataList] = useState<ResponseData<EmployeeApplication>[]>(\n    []\n  );\n  const { data, isLoading, refetch } = useQuery<\n    ResponseData<EmployeeApplication>[],\n    AxiosError<ResponseData<EmployeeApplication>[]>\n  >(\n    ['application-getByIdList', JSON.stringify(idList)],\n    async () => {\n      if (!idList.length) return [];\n      Promise.allSettled(\n        idList.map((id) => CandidateProfilesService.getById(id))\n      )\n        .then((results) => {\n          // Lọc ra các kết quả thành công và chỉ lưu dữ liệu của các promise đã được giải quyết vào dataList\n          const fulfilledResults = results.filter(\n            (result): result is PromiseFulfilledResult<any> =>\n              result.status === 'fulfilled'\n          );\n          const dataList = fulfilledResults.map((result) => result.value);\n\n          // Cập nhật dataList\n          setDataList(dataList);\n        })\n        .catch((e) => console.log(e));\n    },\n    {\n      retry: 1,\n      refetchOnWindowFocus: false,\n      keepPreviousData: true\n    }\n  );\n\n  return {\n    data: dataList?.map((item) => item?.data),\n    isLoading,\n    refetch\n  };\n}\n","import { AxiosError } from 'axios';\nimport { useQuery } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { Application } from '../model';\nimport { CandidateProfilesService } from '../applicationService';\nimport { useApp } from 'src/modules/app/hooks';\n\nconst useQueryCandidateApplications = (params?) => {\n  const { isEmployer } = useApp();\n  const { data, isLoading, refetch, isFetching } = useQuery<\n    ResponseData<Application[]>,\n    AxiosError<ResponseData<Application[]>>\n  >(\n    [\n      'application-getList',\n      params?.page,\n      params?.status,\n      params?.matchingScore\n    ],\n    () => CandidateProfilesService.get({ params }),\n    {\n      keepPreviousData: true,\n      retry: 1,\n      refetchOnWindowFocus: false,\n      enabled: isEmployer\n    }\n  );\n\n  return {\n    data:\n      data?.data?.map((item) => ({ ...item, id: item.application_id })) || [],\n    isLoading,\n    refetch,\n    isFetching\n  };\n};\n\nexport default useQueryCandidateApplications;\n","import { AxiosError } from 'axios';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { useApp } from 'src/modules/app/hooks';\nimport { Application } from '../model';\nimport { UpdateStatusService } from '../applicationService';\n\nconst useMutateApplicationStatus = () => {\n  const queryClient = useQueryClient();\n  const { toast } = useApp();\n  const { isLoading, mutateAsync } = useMutation<\n    ResponseData<Application>,\n    AxiosError<ResponseData<Application>>,\n    [id: string, data: Partial<Application>]\n  >(([id, data]) => UpdateStatusService.update(id, data), {\n    onSuccess: (res) => {\n      if (res.status === 200) {\n        queryClient.invalidateQueries(['application-getList']);\n        toast.success({ massage: res.message });\n      } else {\n        toast.error({ massage: res.message });\n      }\n    },\n    onError: (error) => {\n      toast.error({ massage: error.response.data.message });\n    }\n  });\n\n  return {\n    onSaveApplicationStatus: mutateAsync,\n    isLoading\n  };\n};\n\nexport default useMutateApplicationStatus;\n","import React, { createElement } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport {\n  DialogContent,\n  Divider,\n  IconButton,\n  Typography,\n  styled\n} from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport ViewCV from 'src/pages/view-candidate-profile/ViewCV';\nimport ThemeProvider from '../theme/ThemeProvider';\nimport { isMobile } from 'src/constants/reponsive';\n\nfunction openProfile({ profile }) {\n  const domNode = document.createElement('div');\n  const root = createRoot(domNode);\n  document.body.appendChild(domNode);\n\n  const handleClose = () => {\n    root.unmount();\n  };\n\n  root.render(\n    <ThemeProvider>\n      <Dialog open={true} fullWidth maxWidth=\"md\" fullScreen={isMobile}>\n        <DialogTitle\n          sx={{\n            textAlign: 'center',\n            fontWeight: 700,\n            fontSize: '1.3rem'\n          }}\n        >\n          Hồ sơ người dùng\n          <IconButton\n            aria-label=\"close\"\n            onClick={handleClose}\n            sx={{\n              position: 'absolute',\n              right: 14,\n              top: 14,\n              color: (theme) => theme.palette.grey[500]\n            }}\n          >\n            <CloseIcon />\n          </IconButton>\n        </DialogTitle>\n        <Divider\n          sx={{\n            bgcolor: '#B6FFFA',\n            height: 2\n          }}\n        />\n        <DialogContent>\n          <ViewCV user={profile} bgcolor=\"none\" showTitle={false} />\n        </DialogContent>\n      </Dialog>\n    </ThemeProvider>\n  );\n}\n\nexport default openProfile;\n","import React from 'react';\nimport { useAppDispatch, useAppSelector } from 'src/redux/hooks';\nimport {\n  selectApplicationList,\n  setApplicationList as setApplicationListAction,\n  resetApplicationList as reset\n} from '../applicationSlice';\nimport { Application } from '../model';\n\nconst useApplicationList = () => {\n  const { data: applicationList } = useAppSelector(selectApplicationList);\n  const dispatch = useAppDispatch();\n\n  const setApplicationList = (data: Partial<Application[]>) => {\n    dispatch(setApplicationListAction(data));\n  };\n\n  const resetApplicationList = () => {\n    dispatch(reset());\n  };\n\n  return {\n    applicationList,\n    setApplicationList,\n    resetApplicationList\n  };\n};\n\nexport default useApplicationList;\n","import Box from '@mui/material/Box';\r\nimport { GridColDef } from '@mui/x-data-grid';\r\nimport TableData from 'src/components/TableData';\r\nimport {\r\n  Button,\r\n  CircularProgress,\r\n  Container,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Divider,\r\n  Grid,\r\n  IconButton,\r\n  Tooltip,\r\n  Typography,\r\n  useTheme\r\n} from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\nimport { APPROVAL_STATUS } from 'src/constants';\r\nimport useMutateApplicationStatus from 'src/modules/application/hooks/useMutateApplicatonStatus';\r\nimport { useMemo, useState, forwardRef, useEffect } from 'react';\r\nimport SelectInput from 'src/components/SelectInput';\r\nimport useQueryCandidateApplicationById, {\r\n  useQueryCandidateApplicationByIdList\r\n} from 'src/modules/application/hooks/useQueryCandidateApplicationById';\r\nimport {\r\n  ProfileApplicationType,\r\n  preprocessJobData,\r\n  preprocessProfileData,\r\n  review,\r\n  LOW_SCORE,\r\n  NORMAL_SCORE,\r\n  HIGH_SCORE,\r\n  firstRoundForGeneralInfo,\r\n  parseResponseJSONData\r\n} from 'src/utils/reviewProfile';\r\nimport SuspenseLoader from 'src/components/SuspenseLoader';\r\nimport useQueryJobById, {\r\n  useQueryJobByIdList\r\n} from 'src/modules/jobs/hooks/useQueryJobById';\r\nimport Pagination from 'src/components/Pagination';\r\nimport openProfile from 'src/utils/openProfile';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport alertDialog from 'src/utils/alertDialog';\r\nimport { ApprovalStatus } from 'src/constants/enum';\r\nimport { TypographyEllipsis } from 'src/components/Typography';\r\nimport CardApply from 'src/modules/jobs/components/CardApply';\r\nimport TabContent from '../job-detail/TabContent';\r\nimport CompanyInfoTab from 'src/modules/jobs/components/CompanyInfoTab';\r\nimport useApplicationList from 'src/modules/application/hooks/useApplicationList';\r\nimport useJob from 'src/modules/jobs/hooks/useJob';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { isMobile } from 'src/constants/reponsive';\r\nimport detailsModal from 'src/utils/detailsModal';\r\nimport ReadMoreIcon from '@mui/icons-material/ReadMore';\r\n\r\nconst ViewJobDetail = ({ applicationId, setSelectedId }) => {\r\n  if (!Boolean(applicationId)) return;\r\n  const { applicationList } = useApplicationList();\r\n  const { setItemDetail, itemDetail } = useJob();\r\n\r\n  const jobId = applicationList?.find(\r\n    (item) => item.application_id === applicationId\r\n  )?.jobPosting.postId;\r\n  const { data, isLoading } = useQueryJobById(jobId);\r\n  console.log(data, applicationId, jobId);\r\n\r\n  useEffect(() => {\r\n    setItemDetail(data);\r\n  }, [data]);\r\n\r\n  if (isLoading || !data) return <SuspenseLoader />;\r\n  return (\r\n    <Dialog\r\n      open={Boolean(applicationId)}\r\n      onClose={() => {\r\n        setSelectedId(null);\r\n      }}\r\n      fullWidth\r\n      maxWidth=\"lg\"\r\n      fullScreen={isMobile}\r\n    >\r\n      <DialogTitle\r\n        sx={{\r\n          textAlign: 'center',\r\n          fontWeight: 700,\r\n          fontSize: '1.3rem'\r\n        }}\r\n      >\r\n        Vị trí ứng tuyển\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={() => setSelectedId(null)}\r\n          sx={{\r\n            position: 'absolute',\r\n            right: 14,\r\n            top: 14,\r\n            color: (theme) => theme.palette.grey[500]\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </DialogTitle>\r\n      <Divider\r\n        sx={{\r\n          bgcolor: '#B6FFFA',\r\n          height: 2\r\n        }}\r\n      />\r\n      <DialogContent>\r\n        <Container sx={{ paddingY: 2 }}>\r\n          <CardApply data={data} />\r\n          <TabContent />\r\n          <CompanyInfoTab sx={{ mt: 2 }} company={data?.employer} />\r\n        </Container>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst renderJobTitle = (data) => {\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  // console.log(data);\r\n\r\n  if (data.value) {\r\n    return (\r\n      <>\r\n        <TypographyEllipsis\r\n          sx={{\r\n            color: '#319fce',\r\n            ':hover': {\r\n              textDecoration: 'none',\r\n              cursor: 'pointer'\r\n            },\r\n            textDecoration: 'none'\r\n          }}\r\n          onClick={() => {\r\n            setSelectedId(data?.row?.id);\r\n          }}\r\n        >\r\n          {data.value}\r\n        </TypographyEllipsis>\r\n        <ViewJobDetail\r\n          applicationId={selectedId}\r\n          setSelectedId={setSelectedId}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nconst renderProfileName = (data) => {\r\n  const handleOpenDetailModal = () => {\r\n    let result = '';\r\n    if (data?.row?.matchingScore >= HIGH_SCORE) result = 'Cao';\r\n    else if (\r\n      data?.row?.matchingScore >= NORMAL_SCORE &&\r\n      data?.row?.matchingScore < HIGH_SCORE\r\n    )\r\n      result = 'Trung bình';\r\n    else if (\r\n      data?.row?.matchingScore >= LOW_SCORE &&\r\n      data?.row?.matchingScore < NORMAL_SCORE\r\n    )\r\n      result = 'Thấp';\r\n    else if (data?.row?.matchingScore < 0) result = 'Không phù hợp';\r\n\r\n    const detailsData = {\r\n      'Tên hồ sơ': data?.row?.name,\r\n      'Vị trí ứng tuyển': data?.row?.jobTitle,\r\n      'Loại hồ sơ': data?.row?.applicationType,\r\n      'Trạng thái': data?.row?.status,\r\n      'Độ phù hợp': result\r\n    };\r\n    detailsModal(detailsData);\r\n  };\r\n\r\n  const { data: profile } = useQueryCandidateApplicationById(data?.row?.id);\r\n\r\n  return (\r\n    <Grid container alignItems={'center'}>\r\n      <Grid item xs={10.5} sm={12}>\r\n        <TypographyEllipsis\r\n          sx={{\r\n            color: '#319fce',\r\n            ':hover': {\r\n              textDecoration: 'none',\r\n              cursor: 'pointer'\r\n            },\r\n            textDecoration: 'none'\r\n          }}\r\n          onClick={() => {\r\n            openProfile({ profile: profile });\r\n          }}\r\n        >\r\n          {data.value}\r\n        </TypographyEllipsis>\r\n      </Grid>\r\n      <Grid item xs={1.5} sm={0} sx={{ display: { sm: 'none', xs: 'inline' } }}>\r\n        <Tooltip title=\"Chi tiết\">\r\n          <IconButton size=\"small\" onClick={handleOpenDetailModal}>\r\n            <ReadMoreIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst renderStatus = (data) => {\r\n  const { onSaveApplicationStatus } = useMutateApplicationStatus();\r\n  const [value, setValue] = useState(null); // Initialize value as null\r\n\r\n  useEffect(() => {\r\n    if (!data.value || !APPROVAL_STATUS) return;\r\n    const initValue = APPROVAL_STATUS.find(\r\n      (item) => item.label === data.value\r\n    )?.value;\r\n\r\n    setValue(initValue); // Set the initial value\r\n  }, [data.value]); // Run this effect whenever data.value changes\r\n\r\n  const handleChangeValue = (newValue) => {\r\n    onSaveApplicationStatus([data.id, { status: newValue.target.value }]).then(\r\n      () => {\r\n        setValue(newValue.target.value);\r\n      }\r\n    );\r\n  };\r\n\r\n  // Return the SelectInput component\r\n  return (\r\n    <SelectInput\r\n      value={value}\r\n      options={APPROVAL_STATUS}\r\n      onChange={handleChangeValue}\r\n      sx={{\r\n        color: APPROVAL_STATUS.find((item) => item.value === value)\r\n          ?.optionColor,\r\n        fontSize: isMobile && '10px'\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport const renderMatchingScore = (data) => {\r\n  // if (isAnalyzing) return <CircularProgress />;\r\n  let result = '';\r\n  if (data.value >= HIGH_SCORE) result = 'Cao';\r\n  else if (data.value >= NORMAL_SCORE && data.value < HIGH_SCORE)\r\n    result = 'Trung bình';\r\n  else if (data.value >= LOW_SCORE && data.value < NORMAL_SCORE)\r\n    result = 'Thấp';\r\n  else if (data.value < 0) result = 'Không phù hợp';\r\n\r\n  return data.value === undefined || data.value === null ? (\r\n    <Typography sx={{ color: 'text.disabled', fontStyle: 'italic' }}>\r\n      Chưa xác định\r\n    </Typography>\r\n  ) : (\r\n    <Box\r\n      sx={{\r\n        width: '90%',\r\n        borderRadius: 2,\r\n        p: 1,\r\n        bgcolor:\r\n          data.value >= HIGH_SCORE\r\n            ? '#ffc107'\r\n            : data.value >= NORMAL_SCORE\r\n            ? '#A1C398'\r\n            : data.value >= LOW_SCORE\r\n            ? '#b5b5b5'\r\n            : '#efefef',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n      }}\r\n    >\r\n      {result}\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst columns: GridColDef[] = [\r\n  {\r\n    field: 'name',\r\n    headerName: 'Tên hồ sơ',\r\n    minWidth: isMobile ? 110 : 220,\r\n    renderCell: renderProfileName,\r\n    sortable: true\r\n  },\r\n  {\r\n    field: 'jobTitle',\r\n    headerName: 'Vị trí ứng tuyển',\r\n    minWidth: 400,\r\n    renderCell: renderJobTitle,\r\n    sortable: true\r\n  },\r\n  {\r\n    field: 'applicationType',\r\n    headerName: 'Loại hồ sơ',\r\n    minWidth: 150,\r\n    // sortable: true,\r\n    headerAlign: 'center',\r\n    align: 'center'\r\n  },\r\n  {\r\n    field: 'status',\r\n    headerName: 'Trạng thái',\r\n    minWidth: isMobile ? 120 : 180,\r\n    renderCell: renderStatus,\r\n    sortable: true,\r\n    headerAlign: 'center',\r\n    align: 'center'\r\n  },\r\n  {\r\n    field: 'matchingScore',\r\n    headerName: 'Độ phù hợp',\r\n    minWidth: 150,\r\n    align: 'center',\r\n    headerAlign: 'center',\r\n    renderCell: renderMatchingScore,\r\n    sortable: true\r\n  }\r\n];\r\n\r\nexport default function Table(props) {\r\n  const { pageSize, data, currentPage, totalPages, handlePageChange } = props;\r\n  // data : danh sách Application\r\n  const [analyzedProfile, setAnalyzedProfile] = useState<\r\n    ProfileApplicationType[]\r\n  >([]);\r\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\r\n  const [showList, setShowList] = useState([]);\r\n  const [roundOneFinished, setRoundOneFinished] = useState(false);\r\n  const [roundTwoFinished, setRoundTwoFinished] = useState(false);\r\n  const [roundThreeFinished, setRoundThreeFinished] = useState(false);\r\n  const [passRoundProfiles, setPassRoundProfiles] = useState<\r\n    ProfileApplicationType[]\r\n  >([]);\r\n  const [start, setStart] = useState(false);\r\n  const [goToAnalyzeResult, setGoToAnalyzeResult] = useState({\r\n    signal: false,\r\n    resultData: null\r\n  });\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const [isMappingData, setIsMappingData] = useState(true);\r\n\r\n  const applicationIdList = data?.map((item) => item?.application_id);\r\n\r\n  const jobsIdList: Set<number> = new Set(\r\n    data?.map((item) => {\r\n      return item?.jobPosting?.postId;\r\n    })\r\n  );\r\n\r\n  // Convert Set back to an array if needed\r\n  const uniqueJobsIdList: number[] = [...jobsIdList];\r\n\r\n  const { jobs, isLoading: isLoadingJobs } =\r\n    useQueryJobByIdList(uniqueJobsIdList);\r\n\r\n  const {\r\n    data: applicationDetailList,\r\n    isLoading: isLoadingApplication,\r\n    refetch\r\n  } = useQueryCandidateApplicationByIdList(applicationIdList);\r\n\r\n  const { onSaveApplicationStatus } = useMutateApplicationStatus();\r\n\r\n  const finishedAll = () => {\r\n    setStart(false);\r\n    setRoundOneFinished(false);\r\n    setRoundTwoFinished(false);\r\n    setRoundThreeFinished(false);\r\n    setIsAnalyzing(false);\r\n    setPassRoundProfiles([]);\r\n    setGoToAnalyzeResult({ signal: false, resultData: null });\r\n    setAnalyzedProfile(matchJobAndProfile());\r\n  };\r\n\r\n  const handleSetAnalyzedProfile = async (data: ProfileApplicationType[]) => {\r\n    setAnalyzedProfile(data);\r\n  };\r\n\r\n  const handleIsAnalyzing = (data: boolean) => {\r\n    setIsAnalyzing(data);\r\n  };\r\n\r\n  const handleGoToAnalyzeResult = (signal: boolean, resultData) => {\r\n    setGoToAnalyzeResult({ signal: signal, resultData: resultData });\r\n  };\r\n\r\n  const handleAnalyzeResult = async (result: any[]) => {\r\n    const responses = await parseResponseJSONData(result);\r\n    const updatedAnalyzedProfile = updateAnalyzedProfile(responses);\r\n\r\n    updateRoundStates(updatedAnalyzedProfile);\r\n  };\r\n\r\n  const updateAnalyzedProfile = (responses: any[]) => {\r\n    return analyzedProfile.map((profile) => {\r\n      const matchingScore = calculateMatchingScore(profile, responses);\r\n      console.log('matchingScore', matchingScore);\r\n\r\n      return {\r\n        ...profile,\r\n        employee_Profile: {\r\n          ...profile?.employee_Profile,\r\n          application: {\r\n            ...profile?.employee_Profile?.application,\r\n            matchingScore\r\n          }\r\n        }\r\n      };\r\n    });\r\n  };\r\n\r\n  const calculateMatchingScore = (profile: any, responses: any[]) => {\r\n    const foundItem = responses.find((res) => res?.id === profile?.id);\r\n    if (foundItem?.result !== undefined) {\r\n      return profile?.employee_Profile?.application?.matchingScore !== undefined\r\n        ? profile?.employee_Profile?.application?.matchingScore +\r\n            foundItem.result\r\n        : foundItem.result;\r\n    } else if (\r\n      !roundOneFinished &&\r\n      (profile?.employee_Profile?.online_profile ||\r\n        profile?.employee_Profile?.attached_document)\r\n    ) {\r\n      return firstRoundForGeneralInfo(\r\n        profile?.employer_Requirement,\r\n        profile?.employee_Profile\r\n      );\r\n    } else {\r\n      return profile?.employee_Profile?.application?.matchingScore;\r\n    }\r\n  };\r\n\r\n  const updateRoundStates = (updatedAnalyzedProfile: any[]) => {\r\n    if (!roundOneFinished) {\r\n      const passRoundData = updatedAnalyzedProfile.filter(\r\n        (data) => data?.employee_Profile.application?.matchingScore >= LOW_SCORE\r\n      );\r\n      setPassRoundProfiles(passRoundData);\r\n    }\r\n\r\n    setAnalyzedProfile(updatedAnalyzedProfile);\r\n    const resultList = updatedAnalyzedProfile.map((profile) => ({\r\n      ...profile?.employee_Profile?.application,\r\n      id: profile.id\r\n    }));\r\n    setShowList((prev) => {\r\n      return prev.map((item) => {\r\n        const foundItem = resultList.find((res) => res?.id === item?.id);\r\n        return foundItem || item;\r\n      });\r\n    });\r\n\r\n    if (start) {\r\n      if (!roundOneFinished) setRoundOneFinished(true);\r\n      else if (!roundTwoFinished) setRoundTwoFinished(true);\r\n      else if (!roundThreeFinished) setRoundThreeFinished(true);\r\n    }\r\n  };\r\n\r\n  const matchJobAndProfile = (): ProfileApplicationType[] =>\r\n    data\r\n      ?.map((item) => {\r\n        const job = jobs?.find(\r\n          (job) => job?.postId === item?.jobPosting?.postId\r\n        );\r\n        const profile = applicationDetailList?.find(\r\n          (app) => app?.application?.application_id === item?.application_id\r\n        );\r\n\r\n        if (!job || !profile) return null;\r\n\r\n        const preprocessedJobData = preprocessJobData(job);\r\n        const preprocessedProfileData = preprocessProfileData(profile);\r\n\r\n        return {\r\n          id: item?.application_id,\r\n          employer_Requirement: preprocessedJobData,\r\n          employee_Profile: {\r\n            ...preprocessedProfileData,\r\n            application: {\r\n              ...preprocessedProfileData.application,\r\n              jobTitle: job?.jobTitle,\r\n              keywords: preprocessedProfileData?.application?.keywords\r\n                ? preprocessedProfileData?.application?.keywords\r\n                : preprocessedProfileData?.online_profile\r\n                ? profile?.online_profile.keywords\r\n                : preprocessedProfileData?.attached_document?.keywords\r\n            }\r\n          }\r\n        };\r\n      })\r\n      .filter(Boolean);\r\n\r\n  const handleReview = () => {\r\n    if (!roundOneFinished) {\r\n      // Round 1: Reset matching scores and start round 1\r\n      const resetScoreList = analyzedProfile\r\n        .filter((item) => {\r\n          return selectedRows.includes(item.id);\r\n        })\r\n        .map((profile) => ({\r\n          ...profile,\r\n          employee_Profile: {\r\n            ...profile.employee_Profile,\r\n            application: {\r\n              ...profile.employee_Profile.application,\r\n              matchingScore: null\r\n            }\r\n          }\r\n        }));\r\n\r\n      setAnalyzedProfile(resetScoreList);\r\n      review({\r\n        round: 1,\r\n        handleAnalyzeResult,\r\n        setIsAnalyzing: handleIsAnalyzing,\r\n        resetMatchingScoreList: resetScoreList,\r\n        setAnalyzedProfile: handleSetAnalyzedProfile,\r\n        handleGoToAnalyzeResult\r\n      });\r\n    } else if (!roundTwoFinished && passRoundProfiles.length > 0) {\r\n      // Round 2: Proceed to round 2 if round 1 is finished\r\n      review({\r\n        round: 2,\r\n        handleAnalyzeResult,\r\n        setIsAnalyzing: handleIsAnalyzing,\r\n        passRoundProfiles\r\n      });\r\n    } else if (!roundThreeFinished) {\r\n      // Round 3: Proceed to round 3 if round 2 is finished\r\n      review({\r\n        round: 3,\r\n        handleAnalyzeResult,\r\n        setIsAnalyzing: handleIsAnalyzing,\r\n        passRoundProfiles\r\n      });\r\n    } else {\r\n      // All rounds finished, save matching scores and finish all\r\n      Promise.all(\r\n        showList\r\n          .filter((item) => {\r\n            return selectedRows.includes(item.id);\r\n          })\r\n          .map((item) =>\r\n            onSaveApplicationStatus([\r\n              item.id,\r\n              { matchingScore: item.matchingScore }\r\n            ])\r\n          )\r\n      ).then(() => {\r\n        refetch();\r\n      });\r\n      finishedAll();\r\n      console.log('Finished All');\r\n    }\r\n  };\r\n\r\n  const handleQuickApprove = () => {\r\n    alertDialog({\r\n      selectedId: '_',\r\n      handleConfirm,\r\n      message: `Chuyển các hồ sơ đã chọn sang trạng thái ${ApprovalStatus[quickApproveValue]}?`\r\n    });\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    Promise.all(\r\n      selectedRows.map((id) =>\r\n        onSaveApplicationStatus([id, { status: quickApproveValue }])\r\n      )\r\n    ).then(() => {\r\n      refetch();\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (goToAnalyzeResult.signal) {\r\n      handleAnalyzeResult(goToAnalyzeResult.resultData);\r\n    }\r\n  }, [goToAnalyzeResult.signal]);\r\n\r\n  // First time render the page\r\n  useEffect(() => {\r\n    setIsMappingData(true);\r\n\r\n    if (!jobs.length || !applicationDetailList.length || start) {\r\n      setIsMappingData(false);\r\n      return;\r\n    }\r\n\r\n    const initialJobProfileData = matchJobAndProfile();\r\n\r\n    const resultList = initialJobProfileData?.map((item) => {\r\n      item.employee_Profile.application.id = item.id;\r\n      return item.employee_Profile.application;\r\n    });\r\n\r\n    if (JSON.stringify(resultList) !== JSON.stringify(showList)) {\r\n      console.log('showList', resultList);\r\n\r\n      setShowList(() => resultList);\r\n    }\r\n\r\n    // Check if the profile values are really different\r\n    if (\r\n      JSON.stringify(initialJobProfileData) !== JSON.stringify(analyzedProfile)\r\n    ) {\r\n      setAnalyzedProfile(initialJobProfileData);\r\n    }\r\n    setIsMappingData(false);\r\n  }, [\r\n    JSON.stringify(data),\r\n    JSON.stringify(jobs),\r\n    JSON.stringify(applicationDetailList)\r\n  ]);\r\n\r\n  // Start Round 1, 2, 3\r\n  useEffect(() => {\r\n    if (!start) return;\r\n    handleReview();\r\n  }, [start, roundOneFinished, roundTwoFinished, roundThreeFinished]);\r\n\r\n  const [quickApproveValue, setQuickApproveValue] = useState(null);\r\n  const handleChangeValue = (e) => {\r\n    setQuickApproveValue(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          display: 'block',\r\n          float: { md: 'right' },\r\n          minWidth: { md: 500 },\r\n          maxWidth: 500\r\n        }}\r\n      >\r\n        <Grid\r\n          container\r\n          sx={{\r\n            alignItems: 'center'\r\n          }}\r\n          spacing={1}\r\n        >\r\n          <Grid item md={3} xs={12}>\r\n            <Typography\r\n              fontWeight={700}\r\n              textAlign={'center'}\r\n              sx={{ mt: { xs: 2, md: 0 } }}\r\n            >\r\n              Đã chọn: {selectedRows.length}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item md={5} xs={12} display={'flex'}>\r\n            <SelectInput\r\n              options={APPROVAL_STATUS}\r\n              onChange={handleChangeValue}\r\n              value={selectedRows.length > 0 ? quickApproveValue : ''}\r\n              sx={{\r\n                color: APPROVAL_STATUS.find(\r\n                  (item) => item.value === quickApproveValue\r\n                )?.optionColor\r\n              }}\r\n              disabled={!selectedRows.length}\r\n              label=\"Duyệt nhanh\"\r\n            />\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              color=\"info\"\r\n              sx={{\r\n                py: 1,\r\n                px: 0\r\n              }}\r\n              onClick={handleQuickApprove}\r\n              disabled={!selectedRows.length || !quickApproveValue}\r\n            >\r\n              <CheckIcon sx={{ fontSize: 15 }} />\r\n            </Button>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            md={4}\r\n            xs={12}\r\n            sx={{\r\n              display: 'flex',\r\n              alignItems: 'center'\r\n            }}\r\n          >\r\n            <Button\r\n              onClick={() => setStart(selectedRows.length > 0)}\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              disabled={start || !selectedRows.length}\r\n              fullWidth\r\n              sx={{ py: 1, px: 0 }}\r\n            >\r\n              <Grid item xs={!isAnalyzing ? 12 : 9}>\r\n                {!selectedRows.length\r\n                  ? 'Chưa chọn hồ sơ'\r\n                  : !start\r\n                  ? 'Phân tích nhanh'\r\n                  : 'Đang phân tích'}\r\n              </Grid>\r\n              <Grid item xs={isAnalyzing ? 3 : 0}>\r\n                {isAnalyzing && (\r\n                  <CircularProgress size={18} color=\"secondary\" />\r\n                )}\r\n              </Grid>\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n      <TableData\r\n        rows={showList}\r\n        columns={columns}\r\n        initialState={{\r\n          pagination: {\r\n            paginationModel: {\r\n              pageSize: pageSize\r\n            }\r\n          },\r\n          columns: {\r\n            columnVisibilityModel: {\r\n              jobTitle: !isMobile,\r\n              applicationType: !isMobile,\r\n              matchingScore: !isMobile\r\n            }\r\n          }\r\n        }}\r\n        hideFooter\r\n        sx={{ height: '74vh', width: '100%' }}\r\n        checkboxSelection\r\n        disableRowSelectionOnClick={isMobile}\r\n        rowSelection={true}\r\n        onRowSelectionModelChange={(ids) => {\r\n          setSelectedRows(ids);\r\n        }}\r\n        loading={isLoadingApplication || isLoadingJobs || isMappingData}\r\n      />\r\n      <Pagination\r\n        currentPage={currentPage}\r\n        totalPages={totalPages}\r\n        handlePageChange={handlePageChange}\r\n        disabled={start}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { AxiosError } from 'axios';\nimport { useQuery } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { ApplicationTotalResults } from '../applicationService';\nimport { useApp } from 'src/modules/app/hooks';\n\ninterface responseType {\n  totalResults: number;\n}\n\nconst useQueryTotalResultOfApplicationByEmployer = (params?) => {\n  const { isEmployer } = useApp();\n  const { data, isLoading } = useQuery<\n    ResponseData<responseType>,\n    AxiosError<ResponseData<responseType>>\n  >(\n    ['application-getList', params?.page, params?.status],\n    () => ApplicationTotalResults.get({ params }),\n    {\n      retry: 1,\n      refetchOnWindowFocus: false,\n      keepPreviousData: true,\n      enabled: isEmployer\n    }\n  );\n\n  return {\n    totalResults: data?.data?.totalResults,\n    isLoading\n  };\n};\n\nexport default useQueryTotalResultOfApplicationByEmployer;\n","import {\n  Card,\n  CardContent,\n  CardHeader,\n  Container,\n  Divider,\n  Grid,\n  Tab,\n  Tabs,\n  styled\n} from '@mui/material';\nimport useQueryCandidateApplications from 'src/modules/application/hooks/useQueryCandidateApplications';\nimport Table from './Table';\nimport SuspenseLoader from 'src/components/SuspenseLoader';\nimport { useEffect, useState } from 'react';\nimport useQueryTotalResultOfApplicationByEmployer from 'src/modules/application/hooks/useQueryTotalResultOfApplicationByEmployer';\nimport TabsWrapper from 'src/components/TabWrapper';\nimport Pagination from 'src/components/Pagination';\nimport useApplicationList from 'src/modules/application/hooks/useApplicationList';\n\nconst tabs = [\n  { label: 'Tất cả', value: '' },\n  { label: 'Đã duyệt', value: 'Đã duyệt' },\n  { label: 'Chờ duyệt', value: 'Chờ duyệt' },\n  { label: 'Từ chối', value: 'Từ chối' },\n  { label: 'Hết hạn', value: 'Hết hạn' }\n];\n\nconst CandidateProfiles = () => {\n  const pageSize = 9;\n  const [currentQuery, setCurrentQuery] = useState({\n    currentPage: 1,\n    currentTab: ''\n  });\n  const { data, isLoading: isLoadingData } = useQueryCandidateApplications({\n    page: currentQuery.currentPage,\n    num: pageSize,\n    status: currentQuery.currentTab\n  });\n  const { setApplicationList, resetApplicationList } = useApplicationList();\n  const { totalResults, isLoading: isLoadingTotalResults } =\n    useQueryTotalResultOfApplicationByEmployer({\n      status: currentQuery.currentTab\n    });\n\n  const handleTabsChange = (e, value) => {\n    resetApplicationList(); // Reset application list when changing tab\n    setCurrentQuery(() => ({\n      currentPage: 1,\n      currentTab: value\n    }));\n  };\n\n  const handlePageChange = (page) => {\n    setCurrentQuery((prev) => ({\n      ...prev,\n      currentPage: page\n    }));\n  };\n\n  const totalPages = Math.ceil(totalResults / pageSize) || 1;\n\n  useEffect(() => {\n    console.log(data);\n\n    setApplicationList(data);\n  }, [JSON.stringify(data)]);\n\n  if (isLoadingData || isLoadingTotalResults) return <SuspenseLoader />;\n  return (\n    <Container maxWidth=\"xl\">\n      <Grid\n        container\n        direction=\"row\"\n        justifyContent=\"center\"\n        alignItems=\"stretch\"\n        spacing={3}\n        marginTop={0}\n      >\n        <Grid item xs={12}>\n          <Card>\n            <CardHeader title=\"Danh Sách ứng viên\" />\n            <Divider />\n            <CardContent>\n              <TabsWrapper\n                onChange={handleTabsChange}\n                value={currentQuery.currentTab}\n                variant=\"scrollable\"\n                scrollButtons={false}\n                sx={{\n                  display: { md: 'inline-block' },\n                  borderBottom: 1,\n                  borderColor: 'divider'\n                }}\n              >\n                {tabs.map((tab) => {\n                  return (\n                    <Tab key={tab.value} label={tab.label} value={tab.value} />\n                  );\n                })}\n              </TabsWrapper>\n              <Table\n                data={data}\n                pageSize={pageSize}\n                currentPage={currentQuery.currentPage}\n                totalPages={totalPages}\n                handlePageChange={handlePageChange}\n              />\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default CandidateProfiles;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\nexports.default = _default;"],"names":["styled","Tabs","useQueryCandidateApplicationById","id","isEmployer","useApp","data","isLoading","useQuery","async","CandidateProfilesService","getById","retry","refetchOnWindowFocus","keepPreviousData","enabled","useQueryCandidateApplicationByIdList","idList","dataList","setDataList","useState","refetch","JSON","stringify","length","Promise","allSettled","map","then","results","filter","result","status","value","catch","e","console","log","item","params","_data$data","isFetching","page","matchingScore","get","application_id","useMutateApplicationStatus","queryClient","useQueryClient","toast","mutateAsync","useMutation","_ref","UpdateStatusService","update","onSuccess","res","invalidateQueries","success","massage","message","error","onError","response","onSaveApplicationStatus","profile","domNode","document","createElement","root","createRoot","body","appendChild","render","_jsx","ThemeProvider","children","_jsxs","Dialog","open","fullWidth","maxWidth","fullScreen","isMobile","DialogTitle","sx","textAlign","fontWeight","fontSize","IconButton","onClick","handleClose","unmount","position","right","top","color","theme","palette","grey","CloseIcon","Divider","bgcolor","height","DialogContent","ViewCV","user","showTitle","useApplicationList","applicationList","useAppSelector","selectApplicationList","dispatch","useAppDispatch","setApplicationList","setApplicationListAction","resetApplicationList","reset","ViewJobDetail","_applicationList$find","applicationId","setSelectedId","Boolean","setItemDetail","itemDetail","useJob","jobId","find","jobPosting","postId","useQueryJobById","useEffect","SuspenseLoader","onClose","Container","paddingY","CardApply","TabContent","CompanyInfoTab","mt","company","employer","columns","field","headerName","minWidth","renderCell","_data$row12","row","Grid","container","alignItems","xs","sm","TypographyEllipsis","textDecoration","cursor","openProfile","display","Tooltip","title","size","handleOpenDetailModal","_data$row2","_data$row3","_data$row4","_data$row5","_data$row6","_data$row7","_data$row8","_data$row9","_data$row10","_data$row11","HIGH_SCORE","NORMAL_SCORE","LOW_SCORE","detailsData","name","jobTitle","applicationType","detailsModal","ReadMoreIcon","sortable","selectedId","_Fragment","_data$row","headerAlign","align","_APPROVAL_STATUS$find2","setValue","_APPROVAL_STATUS$find","APPROVAL_STATUS","initValue","label","SelectInput","options","onChange","newValue","target","optionColor","undefined","Typography","fontStyle","Box","width","borderRadius","p","justifyContent","Table","props","_APPROVAL_STATUS$find3","pageSize","currentPage","totalPages","handlePageChange","analyzedProfile","setAnalyzedProfile","isAnalyzing","setIsAnalyzing","showList","setShowList","roundOneFinished","setRoundOneFinished","roundTwoFinished","setRoundTwoFinished","roundThreeFinished","setRoundThreeFinished","passRoundProfiles","setPassRoundProfiles","start","setStart","goToAnalyzeResult","setGoToAnalyzeResult","signal","resultData","selectedRows","setSelectedRows","isMappingData","setIsMappingData","applicationIdList","uniqueJobsIdList","Set","_item$jobPosting","jobs","isLoadingJobs","useQueryJobByIdList","applicationDetailList","isLoadingApplication","handleSetAnalyzedProfile","handleIsAnalyzing","handleGoToAnalyzeResult","handleAnalyzeResult","responses","parseResponseJSONData","updatedAnalyzedProfile","updateAnalyzedProfile","updateRoundStates","_profile$employee_Pro","calculateMatchingScore","employee_Profile","application","_profile$employee_Pro6","_profile$employee_Pro7","foundItem","_profile$employee_Pro2","_profile$employee_Pro3","_profile$employee_Pro4","_profile$employee_Pro5","_profile$employee_Pro8","_profile$employee_Pro9","online_profile","attached_document","firstRoundForGeneralInfo","employer_Requirement","passRoundData","_data$employee_Profil","resultList","_profile$employee_Pro10","prev","matchJobAndProfile","_preprocessedProfileD","_preprocessedProfileD2","_preprocessedProfileD3","job","_item$jobPosting2","app","_app$application","preprocessedJobData","preprocessJobData","preprocessedProfileData","preprocessProfileData","keywords","handleReview","review","round","all","includes","resetScoreList","resetMatchingScoreList","handleConfirm","quickApproveValue","initialJobProfileData","setQuickApproveValue","float","md","spacing","disabled","Button","variant","py","px","handleQuickApprove","alertDialog","concat","ApprovalStatus","CheckIcon","CircularProgress","TableData","rows","initialState","pagination","paginationModel","columnVisibilityModel","hideFooter","checkboxSelection","disableRowSelectionOnClick","rowSelection","onRowSelectionModelChange","ids","loading","Pagination","ApplicationTotalResults","totalResults","tabs","CandidateProfiles","currentQuery","setCurrentQuery","currentTab","isLoadingData","useQueryCandidateApplications","num","isLoadingTotalResults","useQueryTotalResultOfApplicationByEmployer","Math","ceil","direction","marginTop","Card","CardHeader","CardContent","TabsWrapper","handleTabsChange","scrollButtons","borderBottom","borderColor","tab","Tab","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}