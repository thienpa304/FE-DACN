{"version":3,"file":"static/js/604.a3bc08d7.chunk.js","mappings":"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","sources":["components/LinkText/index.tsx","modules/jobs/hooks/useMutateJobStatus.ts","modules/jobs/hooks/useQueryJobByAdmin.ts","pages/admin-job-approval/ViewJobDialog.tsx","pages/admin-job-approval/Table.tsx","modules/jobs/hooks/useQueryTotalJobsEachProfessionByAdmin.ts","pages/admin-job-approval/index.tsx","../node_modules/@mui/icons-material/Check.js"],"sourcesContent":["import { styled } from '@mui/material';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst LinkWrapper = styled(Link)(({ theme }) => ({\n  textDecoration: 'none',\n  color: theme.colors.info.dark,\n  '&:active': {\n    color: theme.colors.primary.light\n  },\n  '&:visited': {\n    color: theme.colors.info.dark\n  }\n}));\nconst LinkText = (props) => {\n  return <LinkWrapper {...props} />;\n};\n\nexport default LinkText;\n","import { AxiosError } from 'axios';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { useApp } from 'src/modules/app/hooks';\nimport { JobUpdateStatusService } from '../jobService';\nimport { Job } from '../model';\n\nconst useMutateJobStatus = () => {\n  const queryClient = useQueryClient();\n  const { toast } = useApp();\n  const { isLoading, mutateAsync } = useMutation<\n    ResponseData<Job>,\n    AxiosError<ResponseData<Job>>,\n    [id: string, data: Partial<Job>]\n  >(([id, data]) => JobUpdateStatusService.update(id, data), {\n    onSuccess: (res) => {\n      if (res.status === 200) {\n        queryClient.invalidateQueries(['get-AllJobsByAdmin']);\n        toast.success({ massage: res.message });\n      } else {\n        toast.error({ massage: res.message });\n      }\n    },\n    onError: (error) => {\n      toast.error({ massage: error.response.data.message });\n    }\n  });\n\n  return {\n    mutate: mutateAsync,\n    isLoading\n  };\n};\n\nexport default useMutateJobStatus;\n","import { AxiosError } from 'axios';\nimport { useQuery } from 'react-query';\nimport { PaginationType, ResponseData } from 'src/common/http-request';\nimport { Job } from '../model';\nimport { JobUpdateStatusService } from '../jobService';\nimport { useApp } from 'src/modules/app/hooks';\n\nconst useQueryJobByAdmin = (params?) => {\n  const { isAdmin } = useApp();\n  const { data, isLoading, refetch } = useQuery<\n    ResponseData<PaginationType<Job[]>>,\n    AxiosError<ResponseData<Job[]>>\n  >(\n    ['get-AllJobsByAdmin', params],\n    () => {\n      for (const key in params) {\n        if (params[key] === 'Tất cả') {\n          params[key] = '';\n        }\n      }\n      return JobUpdateStatusService.get({ params });\n    },\n    {\n      keepPreviousData: true,\n      retry: 1,\n      refetchOnWindowFocus: false,\n      enabled: isAdmin\n    }\n  );\n\n  return {\n    jobs:\n      data?.data?.items?.map((item) => ({\n        ...item,\n        id: item.postId,\n        companyName: item?.employer?.companyName\n      })) || [],\n    totalItems: data?.data?.meta?.totalItems,\n    itemCount: data?.data?.meta?.itemCount,\n    itemPerPage: data?.data?.meta?.itemPerPage,\n    totalPages: data?.data?.meta?.totalPages,\n    currentPage: data?.data?.meta?.currentPage,\n    isLoading,\n    refetch\n  };\n};\n\nexport default useQueryJobByAdmin;\n","import {\r\n  Container,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Divider,\r\n  IconButton\r\n} from '@mui/material';\r\nimport CardApply from 'src/modules/jobs/components/CardApply';\r\nimport TabContent from '../view-job-detail/TabContent';\r\nimport CompanyInfoTab from 'src/modules/jobs/components/CompanyInfoTab';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { useResponsive } from 'src/utils/responsive';\r\n\r\nexport default function ViewJobDialog({ data, postId, setSelectedId }) {\r\n  const { isMobile } = useResponsive();\r\n  return (\r\n    <Dialog\r\n      open={Boolean(postId)}\r\n      onClose={() => {\r\n        setSelectedId(null);\r\n      }}\r\n      fullWidth\r\n      maxWidth=\"lg\"\r\n      fullScreen={isMobile}\r\n    >\r\n      <DialogTitle\r\n        sx={{\r\n          textAlign: 'center',\r\n          fontWeight: 700,\r\n          fontSize: '1.3rem'\r\n        }}\r\n      >\r\n        Việc làm ứng tuyển\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={() => setSelectedId(null)}\r\n          sx={{\r\n            position: 'absolute',\r\n            right: 14,\r\n            top: 14,\r\n            color: (theme) => theme.palette.grey[500]\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </DialogTitle>\r\n      <Divider\r\n        sx={{\r\n          bgcolor: '#B6FFFA',\r\n          height: 2\r\n        }}\r\n      />\r\n      <DialogContent>\r\n        <Container sx={{ paddingY: 2 }}>\r\n          <CardApply data={data} />\r\n          <TabContent />\r\n          <CompanyInfoTab sx={{ mt: 2 }} company={data?.employer} />\r\n        </Container>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","import Box from '@mui/material/Box';\r\nimport { GridColDef } from '@mui/x-data-grid';\r\nimport LinkText from 'src/components/LinkText';\r\nimport TableData from 'src/components/TableData';\r\nimport { Button, CircularProgress, Grid, Typography } from '@mui/material';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { APPROVAL_STATUS } from 'src/constants';\r\nimport SelectInput, { Option } from 'src/components/SelectInput';\r\nimport { useEffect, useState } from 'react';\r\nimport useMutateJobStatus from 'src/modules/jobs/hooks/useMutateJobStatus';\r\nimport { ApprovalStatus } from 'src/constants/enum';\r\nimport Pagination from 'src/components/Pagination';\r\nimport useQueryJobByAdmin from 'src/modules/jobs/hooks/useQueryJobByAdmin';\r\nimport dayjs from 'dayjs';\r\nimport { Job } from 'src/modules/jobs/model';\r\nimport sendChatGPTRequest from 'src/GPT/sendChatGPTRequest';\r\nimport { checkContent } from 'src/GPT/roles';\r\nimport { rewriteUrl } from 'src/utils/rewriteUrl';\r\nimport alertDialog from 'src/utils/alertDialog';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport { TypographyEllipsis } from 'src/components/Typography';\r\nimport ReadMoreIcon from '@mui/icons-material/ReadMore';\r\nimport detailsModal from 'src/utils/detailsModal';\r\nimport { checkIsJSON } from 'src/utils/formatData';\r\nimport ViewJobDialog from './ViewJobDialog';\r\nimport useJob from 'src/modules/jobs/hooks/useJob';\r\nimport { handleSort } from 'src/utils/sortData';\r\nimport { useResponsive } from 'src/utils/responsive';\r\n\r\nconst renderJobTitle = (data) => {\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const { setItemDetail } = useJob();\r\n\r\n  const handleOpenDetailModal = () => {\r\n    const detailsData = {\r\n      'Tên tin tuyển dụng': data?.row?.jobTitle,\r\n      'Người đăng': data?.row?.name,\r\n      'Tên công ty': data?.row?.employer?.companyName,\r\n      'Ngày đăng': dayjs(data.row?.createAt)\r\n        .add(7, 'hours')\r\n        .format('DD-MM-YYYY HH:mm:ss'),\r\n      'Lượt nộp': data.row?.submissionCount,\r\n      'Lượt xem': data?.row?.view,\r\n      'Trạng thái': data?.row?.status,\r\n      'Kiểm duyệt': renderCheckInvalid.find(\r\n        (item) => item.value == data?.row?.check\r\n      )?.label\r\n    };\r\n    detailsModal(detailsData);\r\n  };\r\n\r\n  const handleEditJob = () => {\r\n    setSelectedId(data.id);\r\n    setItemDetail(data?.row);\r\n  };\r\n\r\n  return (\r\n    <Grid container alignItems={'center'}>\r\n      <Grid item xs={10.5} sm={12}>\r\n        <TypographyEllipsis\r\n          sx={{\r\n            color: '#319fce',\r\n            ':hover': {\r\n              textDecoration: 'none',\r\n              cursor: 'pointer'\r\n            },\r\n            textDecoration: 'none'\r\n          }}\r\n          onClick={handleEditJob}\r\n        >\r\n          {data.value}\r\n        </TypographyEllipsis>\r\n      </Grid>\r\n\r\n      <Grid item xs={1.5} sm={0} sx={{ display: { sm: 'none', xs: 'inline' } }}>\r\n        <Tooltip title=\"Chi tiết\">\r\n          <IconButton size=\"small\" onClick={handleOpenDetailModal}>\r\n            <ReadMoreIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Grid>\r\n      <ViewJobDialog\r\n        postId={selectedId}\r\n        setSelectedId={setSelectedId}\r\n        data={data?.row}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst renderCompany = (data) => {\r\n  return (\r\n    <Grid container alignItems={'center'}>\r\n      <Grid item xs={12} component={TypographyEllipsis}>\r\n        <LinkText\r\n          to={`/company/${rewriteUrl(data.value)}?id=${btoa(\r\n            data?.row?.employer?.userId\r\n          )}`}\r\n          state={{ id: data?.value?.userId }}\r\n        >\r\n          {data.value}\r\n        </LinkText>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst renderStatus = (data) => {\r\n  console.log(data);\r\n\r\n  const { isMobile } = useResponsive();\r\n  const initValue = APPROVAL_STATUS.find(\r\n    (item) => item.label === data.value\r\n  ).value;\r\n  const { mutate } = useMutateJobStatus();\r\n\r\n  const handleConfirm = (id, status) => {\r\n    mutate([id, { status: status, check: false }]);\r\n  };\r\n\r\n  const handleChangeValue = (e) => {\r\n    const value = e.target.value as ApprovalStatus;\r\n    if (data?.row.check == true && value === Object.keys(ApprovalStatus)[0]) {\r\n      alertDialog({\r\n        selectedId: data.id,\r\n        handleConfirm: () => handleConfirm(data.id, e.target.value),\r\n        message:\r\n          'Tin tuyển dụng đang ở trạng thái VI PHẠM, bạn có chắc chắn tin tuyển dụng này là hợp quy định và muốn duyệt tin tuyển dụng này?'\r\n      });\r\n    } else {\r\n      mutate([data.id, { status: value }]);\r\n    }\r\n  };\r\n\r\n  const displayColor = () => {\r\n    const initColor = APPROVAL_STATUS.find(\r\n      (item) => item.label === data.value\r\n    )?.optionColor;\r\n    return initColor;\r\n  };\r\n\r\n  return (\r\n    <SelectInput\r\n      value={initValue}\r\n      options={APPROVAL_STATUS.map((item) => {\r\n        if (item.value === 'pending' || item.value === 'expired')\r\n          return { ...item, disabled: true };\r\n        return item;\r\n      })}\r\n      onChange={handleChangeValue}\r\n      size=\"small\"\r\n      sx={{\r\n        fontSize: isMobile ? 10 : 13,\r\n        color: displayColor()\r\n      }}\r\n      disabled={\r\n        data?.value === 'Hết hạn' || data?.row?.applications?.length > 0\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nconst renderCheckInvalid = [\r\n  {\r\n    label: 'Chưa xác định',\r\n    value: null,\r\n    color: '#fff'\r\n  },\r\n  {\r\n    label: 'Hợp quy định',\r\n    value: false,\r\n    color: '#BFD8AF'\r\n  },\r\n  {\r\n    label: 'Vi phạm',\r\n    value: true,\r\n    color: '#F94C10'\r\n  }\r\n];\r\n\r\nconst renderCheck = (data) => {\r\n  const { mutate } = useMutateJobStatus();\r\n  const initCheckValue = renderCheckInvalid.find(\r\n    (item) => item.value == data.value\r\n  );\r\n  const [checkValue, setCheckValue] = useState(initCheckValue);\r\n\r\n  const options = renderCheckInvalid.map((item) => {\r\n    return {\r\n      label: item.label,\r\n      value: item.value ? 'true' : item.value == false ? 'false' : 'null'\r\n    };\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const value = e.target.value.toString();\r\n    const checkValue = renderCheckInvalid.find((item) => {\r\n      if (item.value !== null) return item.value.toString() === value;\r\n      else if (item.value === null && value !== 'null') return false;\r\n      else return true;\r\n    });\r\n\r\n    setCheckValue(checkValue);\r\n    mutate([data.id, { check: checkValue?.value }]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setCheckValue(initCheckValue);\r\n  }, [data.value]);\r\n\r\n  return (\r\n    <Typography\r\n      bgcolor={initCheckValue?.color}\r\n      sx={{\r\n        width: '90%',\r\n        borderRadius: 1,\r\n        py: 1,\r\n        textAlign: 'center',\r\n        fontSize: 13\r\n      }}\r\n    >\r\n      {initCheckValue?.label}\r\n    </Typography>\r\n    // <SelectInput\r\n    //   value={\r\n    //     checkValue?.value === true\r\n    //       ? 'true'\r\n    //       : checkValue?.value === false\r\n    //       ? 'false'\r\n    //       : 'null'\r\n    //   }\r\n    //   options={options}\r\n    //   size=\"small\"\r\n    //   onChange={handleChange}\r\n    //   sx={{\r\n    //     bgcolor: checkValue?.color,\r\n    //     '.css-dyke5w-MuiSelect-select-MuiInputBase-input-MuiOutlinedInput-input.MuiSelect-select':\r\n    //       {\r\n    //         fontSize: 13,\r\n    //         mx: -1\r\n    //       }\r\n    //   }}\r\n    // />\r\n  );\r\n};\r\n\r\nexport default function Table({ statusFilter, selectedProfession }) {\r\n  const { mutate } = useMutateJobStatus();\r\n  const [start, setStart] = useState(false);\r\n  const [showList, setShowList] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const [sortModel, setSortModel] = useState({ orderBy: '', sort: '' });\r\n  const pageSize = 9;\r\n\r\n  const { jobs, isLoading, totalPages } = useQueryJobByAdmin({\r\n    page: currentPage,\r\n    num: pageSize,\r\n    status: ApprovalStatus[statusFilter],\r\n    profession: selectedProfession,\r\n    ...sortModel\r\n  });\r\n  const { isMobile } = useResponsive();\r\n\r\n  const columns: GridColDef[] = [\r\n    {\r\n      field: 'jobTitle',\r\n      headerName: 'Tin tuyển dụng',\r\n      minWidth: !isMobile ? 200 : 130,\r\n      renderCell: renderJobTitle,\r\n      sortable: true\r\n    },\r\n    {\r\n      field: 'name',\r\n      headerName: 'Người đăng',\r\n      minWidth: 120,\r\n      sortable: true,\r\n      renderCell: (data) => (\r\n        <Box\r\n          sx={{\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n            whiteSpace: 'wrap',\r\n            lineHeight: '1.5',\r\n            display: '-webkit-box',\r\n            WebkitLineClamp: 2,\r\n            WebkitBoxOrient: 'vertical'\r\n          }}\r\n        >\r\n          {data.value}\r\n        </Box>\r\n      )\r\n    },\r\n    {\r\n      field: 'companyName',\r\n      headerName: 'Tên công ty',\r\n      minWidth: 200,\r\n      renderCell: renderCompany,\r\n      sortable: true\r\n    },\r\n    {\r\n      field: 'createAt',\r\n      headerName: 'Ngày đăng',\r\n      minWidth: 110,\r\n      sortable: true,\r\n      renderCell: (data) => (\r\n        <Box\r\n          sx={{\r\n            whiteSpace: 'wrap',\r\n            lineHeight: '1.5em'\r\n          }}\r\n        >\r\n          {dayjs(data.value).add(7, 'hours').format('DD-MM-YYYY HH:mm:ss')}\r\n        </Box>\r\n      )\r\n    },\r\n    {\r\n      field: 'submissionCount',\r\n      headerName: 'Lượt nộp',\r\n      minWidth: 90,\r\n      align: 'center',\r\n      headerAlign: 'center',\r\n      sortable: true\r\n    },\r\n    {\r\n      field: 'view',\r\n      headerName: 'Lượt xem',\r\n      minWidth: 90,\r\n      align: 'center',\r\n      headerAlign: 'center',\r\n      sortable: true,\r\n      resizable: true\r\n    },\r\n    {\r\n      field: 'status',\r\n      headerName: 'Trạng thái',\r\n      minWidth: !isMobile ? 130 : 115,\r\n      headerAlign: 'center',\r\n      renderCell: renderStatus\r\n    },\r\n    {\r\n      field: 'check',\r\n      headerName: 'Kiểm duyệt',\r\n      minWidth: 130,\r\n      headerAlign: 'center',\r\n      align: 'center',\r\n      renderCell: renderCheck,\r\n      sortable: true\r\n    }\r\n  ];\r\n\r\n  const preProcessData = (job: Job) => {\r\n    return {\r\n      postId: job?.postId,\r\n      jobTitle: job?.jobTitle,\r\n      jobDescription: job?.jobDescription,\r\n      jobRequirements: job?.jobRequirements,\r\n      benefits: job?.benefits,\r\n      requiredSkills: job?.requiredSkills\r\n    };\r\n  };\r\n\r\n  const handleCheck = async (dataToSend: Partial<Job>[]) => {\r\n    const result = await sendChatGPTRequest(checkContent, dataToSend);\r\n\r\n    const jsonResult = result?.map(\r\n      (item) => checkIsJSON(item) && JSON.parse(item)\r\n    );\r\n    const resultList = jobs?.map((job) => {\r\n      const found = jsonResult.find((item) => item.id === job.postId);\r\n      if (found) {\r\n        mutate([found.id, { check: found.result }]);\r\n        return {\r\n          ...job,\r\n          check: found.result\r\n        };\r\n      }\r\n      return job;\r\n    });\r\n    setShowList(resultList);\r\n    setStart(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!start) return;\r\n    const dataToSend = jobs\r\n      .filter((job) => selectedRows.includes(job.postId))\r\n      .map((job) => preProcessData(job));\r\n\r\n    // const dataToSend = jobs.map((job) => preProcessData(job));\r\n    handleCheck(dataToSend);\r\n  }, [start]);\r\n\r\n  useEffect(() => {\r\n    if (jobs) {\r\n      setShowList(() => jobs);\r\n    }\r\n  }, [JSON.stringify(jobs)]);\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(1);\r\n  }, [statusFilter]);\r\n\r\n  const [quickApproveValue, setQuickApproveValue] = useState(null);\r\n\r\n  const handleChangeValue = (e) => {\r\n    setQuickApproveValue(e.target.value);\r\n  };\r\n\r\n  const handleQuickApprove = () => {\r\n    alertDialog({\r\n      handleConfirm,\r\n      message: `Chuyển tin tuyển dụng đã chọn sang trạng thái ${ApprovalStatus[\r\n        quickApproveValue\r\n      ].toUpperCase()}?`\r\n    });\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    const handleConfirmApprove = () => {\r\n      debugger;\r\n      Promise.all(\r\n        selectedRows.map((id) => mutate([id, { status: quickApproveValue }]))\r\n      );\r\n    };\r\n    const violationJob = jobs.find((item) => {\r\n      return selectedRows.includes(item.postId) && item.check == true;\r\n    });\r\n\r\n    if (\r\n      selectedRows.some(\r\n        (row) =>\r\n          violationJob && quickApproveValue === Object.keys(ApprovalStatus)[0]\r\n      )\r\n    ) {\r\n      alertDialog({\r\n        handleConfirm: handleConfirmApprove,\r\n        message:\r\n          'Có tin tuyển dụng đang ở trạng thái vi phạm, bạn có chắc muốn các duyệt tin tuyển dụng đã chọn không?'\r\n      });\r\n    } else handleConfirmApprove();\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Box\r\n        sx={{\r\n          display: 'block',\r\n          float: { md: 'right' },\r\n          minWidth: { md: 500 },\r\n          maxWidth: 500\r\n        }}\r\n      >\r\n        <Grid\r\n          container\r\n          sx={{\r\n            alignItems: 'center'\r\n          }}\r\n          spacing={1}\r\n        >\r\n          <Grid item md={3} xs={12}>\r\n            <Typography fontWeight={700}>\r\n              Đã chọn: {selectedRows.length}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item md={5} xs={12} display={'flex'}>\r\n            <SelectInput\r\n              options={APPROVAL_STATUS}\r\n              onChange={handleChangeValue}\r\n              value={selectedRows.length > 0 ? quickApproveValue : ''}\r\n              sx={{\r\n                color: APPROVAL_STATUS.find(\r\n                  (item) => item.value === quickApproveValue\r\n                )?.optionColor\r\n              }}\r\n              disabled={!selectedRows.length}\r\n              label=\"Duyệt nhanh\"\r\n            />\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              sx={{ py: 1, px: 0 }}\r\n              color=\"info\"\r\n              onClick={handleQuickApprove}\r\n              disabled={!selectedRows.length || !quickApproveValue}\r\n            >\r\n              <CheckIcon sx={{ fontSize: 15 }} />\r\n            </Button>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            md={4}\r\n            xs={12}\r\n            sx={{\r\n              display: 'flex',\r\n              alignItems: 'center'\r\n            }}\r\n          >\r\n            <Button\r\n              onClick={() => setStart(selectedRows.length > 0)}\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              disabled={start || !selectedRows.length}\r\n              fullWidth\r\n              sx={{ py: 1, px: 0, bgcolor: '#FC4100' }}\r\n            >\r\n              <Grid item xs={!start ? 12 : 9}>\r\n                {!start ? 'Kiểm duyệt' : 'Đang kiểm duyệt...'}\r\n              </Grid>\r\n              <Grid item xs={start ? 3 : 0}>\r\n                {start && <CircularProgress size={18} color=\"secondary\" />}\r\n              </Grid>\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n      <TableData\r\n        sx={{ minHeight: '72vh', width: '100%' }}\r\n        rows={showList}\r\n        columns={columns}\r\n        hideFooter\r\n        checkboxSelection\r\n        rowSelection\r\n        onRowSelectionModelChange={(ids) => {\r\n          setSelectedRows(ids);\r\n        }}\r\n        loading={isLoading}\r\n        initialState={{\r\n          columns: {\r\n            columnVisibilityModel: {\r\n              name: !isMobile,\r\n              companyName: !isMobile,\r\n              createAt: !isMobile,\r\n              submissionCount: !isMobile,\r\n              view: !isMobile,\r\n              check: !isMobile\r\n            }\r\n          }\r\n        }}\r\n        disableRowSelectionOnClick={isMobile}\r\n        onSortModelChange={(newSortModel) => {\r\n          handleSort(newSortModel, setSortModel);\r\n        }}\r\n        isRowSelectable={(params) => {\r\n          console.log(params);\r\n\r\n          return params?.row?.applications?.length <= 0;\r\n        }}\r\n      />\r\n      <Pagination\r\n        totalPages={totalPages}\r\n        currentPage={currentPage}\r\n        handlePageChange={setCurrentPage}\r\n        disabled={start}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n","import { AxiosError } from 'axios';\nimport { useQuery } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { TotalResultEachProfessionByAdmin } from '../jobService';\n\ninterface ResponseType {\n  profession_value: string;\n  count: number;\n}\n\nconst useQueryTotalJobsEachProfessionByAdmin = (params?) => {\n  const { data, isLoading } = useQuery<\n    ResponseData<ResponseType[]>,\n    AxiosError<ResponseData<ResponseType[]>>\n  >(\n    ['get-TotalResultsEachProfessionByAdmin', params],\n    () => TotalResultEachProfessionByAdmin.get({ params }),\n    {\n      retry: 1,\n      refetchOnWindowFocus: false\n    }\n  );\n\n  return {\n    dataList: data?.data,\n    isLoading\n  };\n};\n\nexport default useQueryTotalJobsEachProfessionByAdmin;\n","import {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Container,\r\n  Divider,\r\n  Grid\r\n} from '@mui/material';\r\nimport Table from './Table';\r\nimport SelectInput from 'src/components/SelectInput';\r\nimport { APPROVAL_STATUS } from 'src/constants';\r\nimport { useState } from 'react';\r\nimport ProfessionList from 'src/modules/admin/components/ProfessionList';\r\nimport SuspenseLoader from 'src/components/SuspenseLoader';\r\nimport useQueryTotalJobsEachProfessionByAdmin from 'src/modules/jobs/hooks/useQueryTotalJobsEachProfessionByAdmin';\r\n\r\nconst ApprovalStatusOption = [\r\n  {\r\n    value: '',\r\n    label: 'Tất cả',\r\n    color: 'info',\r\n    optionColor: '#000'\r\n  },\r\n  ...APPROVAL_STATUS\r\n];\r\n\r\nconst JobApproval = () => {\r\n  const [status, setStatus] = useState('');\r\n  const [selectedProfession, setSelectedProfession] = useState(null);\r\n  const [isProfessionView, setIsProfessionView] = useState(false);\r\n\r\n  const { dataList, isLoading } = useQueryTotalJobsEachProfessionByAdmin();\r\n\r\n  const handleChangeStatusFilter = (e) => {\r\n    setStatus(e.target.value);\r\n  };\r\n\r\n  const handleSelectProfession = (name: string) => {\r\n    setSelectedProfession(name);\r\n    setIsProfessionView(false);\r\n  };\r\n\r\n  const handleToggleViewMode = () => {\r\n    setIsProfessionView((prev) => !prev);\r\n    setSelectedProfession(null);\r\n  };\r\n\r\n  if (isLoading) return <SuspenseLoader />;\r\n  return (\r\n    <Container maxWidth=\"xl\">\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"stretch\"\r\n        spacing={3}\r\n        marginTop={0}\r\n      >\r\n        <Grid item xs={12}>\r\n          <Card>\r\n            <Box\r\n              sx={{\r\n                display: 'flex',\r\n                justifyContent: { sm: 'space-between', xs: 'center' },\r\n                flexWrap: 'wrap'\r\n              }}\r\n            >\r\n              <CardHeader title=\"Danh sách tin tuyển dụng\" />\r\n              <Box\r\n                sx={{\r\n                  display: 'flex',\r\n                  justifyContent: { xs: 'center', sm: 'end' },\r\n                  px: 2,\r\n                  gap: 1\r\n                }}\r\n              >\r\n                {!isProfessionView && (\r\n                  <Box sx={{ margin: 'auto', width: '120px' }}>\r\n                    <SelectInput\r\n                      label=\"Trạng thái\"\r\n                      value={status}\r\n                      options={ApprovalStatusOption}\r\n                      onChange={(e) => handleChangeStatusFilter(e)}\r\n                      sx={{\r\n                        color: ApprovalStatusOption.find(\r\n                          (item) => item.value === status\r\n                        ).optionColor\r\n                      }}\r\n                    />\r\n                  </Box>\r\n                )}\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color={!isProfessionView ? 'primary' : 'info'}\r\n                  onClick={handleToggleViewMode}\r\n                  sx={{ margin: 'auto', height: 35, width: 150 }}\r\n                >\r\n                  {!isProfessionView ? 'Xem theo ngành' : 'Tất cả'}\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n\r\n            <Divider />\r\n            <CardContent>\r\n              {isProfessionView && !selectedProfession && (\r\n                <ProfessionList\r\n                  handleSelectProfession={handleSelectProfession}\r\n                  handleViewProfessionMode={setIsProfessionView}\r\n                  total={dataList}\r\n                />\r\n              )}\r\n              {!isProfessionView && (\r\n                <Table\r\n                  statusFilter={status}\r\n                  selectedProfession={selectedProfession}\r\n                />\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default JobApproval;\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\nexports.default = _default;"],"names":["LinkWrapper","styled","Link","_ref","theme","textDecoration","color","colors","info","dark","primary","light","props","_jsx","useMutateJobStatus","queryClient","useQueryClient","toast","useApp","isLoading","mutateAsync","useMutation","id","data","JobUpdateStatusService","update","onSuccess","res","status","invalidateQueries","success","massage","message","error","onError","response","mutate","params","_data$data","_data$data$items","_data$data2","_data$data2$meta","_data$data3","_data$data3$meta","_data$data4","_data$data4$meta","_data$data5","_data$data5$meta","_data$data6","_data$data6$meta","isAdmin","refetch","useQuery","key","get","keepPreviousData","retry","refetchOnWindowFocus","enabled","jobs","items","map","item","_item$employer","postId","companyName","employer","totalItems","meta","itemCount","itemPerPage","totalPages","currentPage","ViewJobDialog","setSelectedId","isMobile","useResponsive","_jsxs","Dialog","open","Boolean","onClose","fullWidth","maxWidth","fullScreen","children","DialogTitle","sx","textAlign","fontWeight","fontSize","IconButton","onClick","position","right","top","palette","grey","CloseIcon","Divider","bgcolor","height","DialogContent","Container","paddingY","CardApply","TabContent","CompanyInfoTab","mt","company","renderJobTitle","selectedId","useState","setItemDetail","useJob","Grid","container","alignItems","xs","sm","TypographyEllipsis","cursor","handleEditJob","row","value","display","Tooltip","title","size","handleOpenDetailModal","_data$row","_data$row2","_data$row3","_data$row3$employer","_data$row4","_data$row5","_data$row6","_data$row7","_renderCheckInvalid$f","detailsData","jobTitle","name","dayjs","createAt","add","format","submissionCount","view","renderCheckInvalid","find","_data$row8","check","label","detailsModal","ReadMoreIcon","renderCompany","_data$row9","_data$row9$employer","_data$value","component","LinkText","to","concat","rewriteUrl","btoa","userId","state","renderStatus","_data$row10","_data$row10$applicati","console","log","initValue","APPROVAL_STATUS","SelectInput","options","disabled","onChange","e","target","Object","keys","ApprovalStatus","alertDialog","handleConfirm","displayColor","_APPROVAL_STATUS$find","optionColor","applications","length","renderCheck","initCheckValue","checkValue","setCheckValue","useEffect","Typography","width","borderRadius","py","Table","_APPROVAL_STATUS$find2","statusFilter","selectedProfession","start","setStart","showList","setShowList","setCurrentPage","selectedRows","setSelectedRows","sortModel","setSortModel","orderBy","sort","useQueryJobByAdmin","page","num","profession","columns","field","headerName","minWidth","renderCell","sortable","Box","overflow","textOverflow","whiteSpace","lineHeight","WebkitLineClamp","WebkitBoxOrient","align","headerAlign","resizable","async","result","sendChatGPTRequest","checkContent","dataToSend","jsonResult","checkIsJSON","JSON","parse","resultList","job","found","handleCheck","filter","includes","jobDescription","jobRequirements","benefits","requiredSkills","preProcessData","stringify","quickApproveValue","setQuickApproveValue","handleConfirmApprove","Promise","all","violationJob","some","float","md","spacing","Button","variant","px","handleQuickApprove","toUpperCase","CheckIcon","CircularProgress","TableData","minHeight","rows","hideFooter","checkboxSelection","rowSelection","onRowSelectionModelChange","ids","loading","initialState","columnVisibilityModel","disableRowSelectionOnClick","onSortModelChange","newSortModel","handleSort","isRowSelectable","_params$row","_params$row$applicati","Pagination","handlePageChange","TotalResultEachProfessionByAdmin","dataList","ApprovalStatusOption","JobApproval","setStatus","setSelectedProfession","isProfessionView","setIsProfessionView","useQueryTotalJobsEachProfessionByAdmin","SuspenseLoader","direction","justifyContent","marginTop","Card","flexWrap","CardHeader","gap","margin","handleChangeStatusFilter","handleToggleViewMode","prev","CardContent","ProfessionList","handleSelectProfession","handleViewProfessionMode","total","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}