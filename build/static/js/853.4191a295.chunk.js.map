{"version":3,"file":"static/js/853.4191a295.chunk.js","mappings":"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","sources":["components/Link/index.tsx","components/SearchBar/SearchBar.tsx","modules/getEmployee/hook/useQueryEmployee.ts","modules/getEmployee/components/FindProfiles.tsx","pages/find-profiles/index.tsx","../node_modules/@mui/icons-material/Search.js"],"sourcesContent":["import React, { forwardRef, useMemo } from 'react';\r\nimport { Link as ReactLink } from 'react-router-dom';\r\n\r\ninterface CustomLinkProps {\r\n  to?: string;\r\n  children: React.ReactNode;\r\n  sx?: any;\r\n  state?: any;\r\n  onClick?: () => void;\r\n}\r\n\r\nconst linkStyle = {\r\n  textDecoration: 'none',\r\n  color: '#551a8b'\r\n};\r\n\r\nconst handleMouseEnter = (e: React.MouseEvent<HTMLAnchorElement>) => {\r\n  e.currentTarget.style.color = '#FF7D55'; // Truy cập style thông qua currentTarget\r\n};\r\n\r\nconst handleMouseLeave = (\r\n  e: React.MouseEvent<HTMLAnchorElement>,\r\n  defaultColor\r\n) => {\r\n  e.currentTarget.style.color = defaultColor || '#551a8b'; // Truy cập style thông qua currentTarget\r\n};\r\n\r\nconst Link = forwardRef<HTMLButtonElement, CustomLinkProps>((props, ref) => {\r\n  const { to, children, sx } = props;\r\n\r\n  return (\r\n    <ReactLink\r\n      {...props}\r\n      to={to}\r\n      style={{ ...linkStyle, ...sx }}\r\n      onMouseEnter={handleMouseEnter}\r\n      onMouseLeave={(e) => handleMouseLeave(e, sx?.color)}\r\n    >\r\n      {children}\r\n    </ReactLink>\r\n  );\r\n});\r\n\r\nexport default Link;\r\n","import { Box, Button, Grid, InputAdornment, TextField } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport Link from 'src/components/Link';\r\nimport SelectInput from 'src/components/SelectInput';\r\nimport { PROFESSION } from 'src/constants';\r\nimport { rewriteUrl } from 'src/utils/rewriteUrl';\r\n\r\nconst ProfessionOptions = [\r\n  {\r\n    label: 'Tất cả',\r\n    value: ''\r\n  },\r\n  ...PROFESSION\r\n];\r\n\r\nexport default function SearchBar({ to, sx }: { to: string; sx?: any }) {\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [selectedProfession, setSelectedProfession] = useState('');\r\n\r\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchValue(() => event.target.value);\r\n  };\r\n\r\n  const handleSelectProfession = (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    console.log(event.target.value);\r\n\r\n    setSelectedProfession(() => event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      display=\"flex\"\r\n      sx={{\r\n        border: '1px solid #98E4FF',\r\n        borderRadius: '5px',\r\n        ...sx\r\n      }}\r\n    >\r\n      <Grid item md={8} xs={12}>\r\n        <TextField\r\n          value={searchValue}\r\n          onChange={handleSearchChange}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <SearchIcon />\r\n              </InputAdornment>\r\n            )\r\n          }}\r\n          placeholder=\"Nhập vị trí muốn ứng tuyển\"\r\n          fullWidth\r\n          sx={{\r\n            backgroundColor: 'white',\r\n            boxShadow: '2px 2px 6px #98E4FF'\r\n          }}\r\n        />\r\n      </Grid>\r\n      <Grid item md={2} xs={6}>\r\n        <SelectInput\r\n          options={ProfessionOptions}\r\n          onChange={handleSelectProfession}\r\n          label=\"Nghề nghiệp\"\r\n          placeholder=\"Nghề nghiệp\"\r\n          fullWidth\r\n          sx={{\r\n            backgroundColor: 'white',\r\n            boxShadow: '2px 2px 6px #98E4FF',\r\n            borderRadius: '0px'\r\n          }}\r\n          labelmargintop=\"5px\"\r\n          size=\"medium\"\r\n        />\r\n      </Grid>\r\n      <Grid item md={2} xs={6}>\r\n        <Link\r\n          to={`${to}/${\r\n            rewriteUrl(selectedProfession) || 'Tat-ca'\r\n          }?search=${searchValue}`}\r\n          sx={{ color: '#000' }}\r\n          state={{\r\n            jobTitle: searchValue?.trim(),\r\n            profession: selectedProfession,\r\n            pageTitle: searchValue\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n            sx={{ opacity: 0.8, height: '100%', borderRadius: '0px' }}\r\n            fullWidth\r\n          >\r\n            <SearchIcon />\r\n            Tìm kiếm\r\n          </Button>\r\n        </Link>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import { AxiosError } from 'axios';\r\nimport { useQuery } from 'react-query';\r\nimport { ResponseData } from 'src/common/http-request';\r\nimport { Employee, User } from 'src/modules/users/model';\r\nimport { GetEmployeeService } from '../getEmployeeService';\r\nimport { useApp } from 'src/modules/app/hooks';\r\nimport { AttachedDocument, OnlineProfile } from 'src/modules/jobProfile/model';\r\nimport { ProfileShowType } from '../model';\r\n\r\nconst useQueryEmployee = (params?) => {\r\n  const { isEmployer } = useApp();\r\n  const { data, isLoading, refetch } = useQuery<\r\n    ResponseData<ProfileShowType[]>,\r\n    AxiosError<ResponseData<ProfileShowType[]>>\r\n  >(\r\n    [\r\n      'get-AllEmployees',\r\n      params?.page,\r\n      params?.profession,\r\n      params?.experience,\r\n      params?.degree,\r\n      params?.employmentType,\r\n      params?.sex,\r\n      params?.jobTitle,\r\n      params?.currentPosition,\r\n      params?.positionLevel\r\n    ],\r\n    () => {\r\n      for (const key in params) {\r\n        if (params[key] === 'Tất cả' || params[key] === undefined) {\r\n          params[key] = '';\r\n        }\r\n      }\r\n      const item = { ...params, currentPosition: params?.positionLevel };\r\n      delete item.positionLevel;\r\n      return GetEmployeeService.get({ params: item });\r\n    },\r\n    {\r\n      keepPreviousData: true,\r\n      retry: 1,\r\n      refetchOnWindowFocus: false,\r\n      enabled: isEmployer\r\n    }\r\n  );\r\n\r\n  return {\r\n    profile: data?.data || [],\r\n    isLoading,\r\n    refetch\r\n  };\r\n};\r\n\r\nexport default useQueryEmployee;\r\n","import { Box, Container, Grid, Typography } from '@mui/material';\r\nimport { useState } from 'react';\r\nimport ProfileCard from './ProfileCard';\r\nimport useQueryEmployee from '../hook/useQueryEmployee';\r\nimport SearchBar from 'src/components/SearchBar/SearchBar';\r\nimport JobFilter from '../../jobs/components/JobFilter';\r\nimport { useLocation } from 'react-router';\r\nimport SuspenseLoader from 'src/components/SuspenseLoader';\r\n\r\nexport default function FindProfiles() {\r\n  const [page, setPage] = useState(1);\r\n  const [filter, setFilter] = useState(null);\r\n  const { state } = useLocation();\r\n  const locationState = state as any;\r\n\r\n  const pageSize = 12;\r\n  const { profile, isLoading } = useQueryEmployee({\r\n    page: page,\r\n    num: pageSize,\r\n    ...filter,\r\n    profession: locationState?.profession,\r\n    jobTitle: locationState?.jobTitle\r\n  });\r\n\r\n  const handleFilter = (data: any) => {\r\n    setFilter((prev) => ({\r\n      ...prev,\r\n      ...data\r\n    }));\r\n  };\r\n\r\n  if (isLoading) return <SuspenseLoader />;\r\n\r\n  return (\r\n    <Container sx={{ p: 3 }}>\r\n      <Typography mb={2} fontSize={22} fontWeight={700}>\r\n        Tìm kiếm ứng viên\r\n      </Typography>\r\n      <SearchBar to=\"/employer/find-profiles\" sx={{ my: 3 }} />\r\n      <JobFilter handleFilter={handleFilter} />\r\n      <Container\r\n        sx={{\r\n          mb: 3,\r\n          p: 3,\r\n          bgcolor: '#fbfeff',\r\n          minHeight: '65vh'\r\n        }}\r\n      >\r\n        <Grid container spacing={1}>\r\n          {profile.map((item, index) => (\r\n            <Grid key={index} item xs={12} sm={6} md={3}>\r\n              <Box sx={{ display: 'flex', justifyContent: 'center' }}>\r\n                <ProfileCard profile={item} />\r\n              </Box>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n        {profile?.length === 0 && (\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              justifyContent: 'center'\r\n            }}\r\n          >\r\n            <Typography\r\n              mt={10}\r\n              textAlign=\"center\"\r\n              fontStyle=\"italic\"\r\n              color=\"#9999\"\r\n            >\r\n              Không tìm được hồ sơ phù hợp\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n      </Container>\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport FindProfiles from 'src/modules/getEmployee/components/FindProfiles';\r\n\r\nexport default function index() {\r\n  return <FindProfiles />;\r\n}\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexports.default = _default;"],"names":["linkStyle","textDecoration","color","handleMouseEnter","e","currentTarget","style","forwardRef","props","ref","to","children","sx","_jsx","ReactLink","onMouseEnter","onMouseLeave","handleMouseLeave","defaultColor","ProfessionOptions","label","value","PROFESSION","SearchBar","_ref","searchValue","setSearchValue","useState","selectedProfession","setSelectedProfession","_jsxs","Grid","container","display","border","borderRadius","item","md","xs","TextField","onChange","event","target","InputProps","startAdornment","InputAdornment","position","SearchIcon","placeholder","fullWidth","backgroundColor","boxShadow","SelectInput","options","console","log","labelmargintop","size","Link","concat","rewriteUrl","state","jobTitle","trim","profession","pageTitle","Button","variant","opacity","height","params","isEmployer","useApp","data","isLoading","refetch","useQuery","page","experience","degree","employmentType","sex","currentPosition","positionLevel","key","undefined","GetEmployeeService","get","keepPreviousData","retry","refetchOnWindowFocus","enabled","profile","FindProfiles","setPage","filter","setFilter","useLocation","locationState","useQueryEmployee","num","SuspenseLoader","Container","p","Typography","mb","fontSize","fontWeight","my","JobFilter","handleFilter","prev","bgcolor","minHeight","spacing","map","index","sm","Box","justifyContent","ProfileCard","length","mt","textAlign","fontStyle","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}