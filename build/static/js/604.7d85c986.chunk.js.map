{"version":3,"file":"static/js/604.7d85c986.chunk.js","mappings":"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","sources":["components/LinkText/index.tsx","modules/jobs/hooks/useMutateJobStatus.ts","modules/jobs/hooks/useQueryJobByAdmin.ts","pages/admin-job-approval/ViewJobDialog.tsx","pages/admin-job-approval/Table.tsx","modules/jobs/hooks/useQueryTotalJobsEachProfessionByAdmin.ts","pages/admin-job-approval/index.tsx","../node_modules/@mui/icons-material/Check.js"],"sourcesContent":["import { styled } from '@mui/material';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst LinkWrapper = styled(Link)(({ theme }) => ({\n  textDecoration: 'none',\n  color: theme.colors.info.dark,\n  '&:active': {\n    color: theme.colors.primary.light\n  },\n  '&:visited': {\n    color: theme.colors.info.dark\n  }\n}));\nconst LinkText = (props) => {\n  return <LinkWrapper {...props} />;\n};\n\nexport default LinkText;\n","import { AxiosError } from 'axios';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { useApp } from 'src/modules/app/hooks';\nimport { JobUpdateStatusService } from '../jobService';\nimport { Job } from '../model';\n\nconst useMutateJobStatus = () => {\n  const queryClient = useQueryClient();\n  const { toast } = useApp();\n  const { isLoading, mutateAsync } = useMutation<\n    ResponseData<Job>,\n    AxiosError<ResponseData<Job>>,\n    [id: string, data: Partial<Job>]\n  >(([id, data]) => JobUpdateStatusService.update(id, data), {\n    onSuccess: (res) => {\n      if (res.status === 200) {\n        queryClient.invalidateQueries(['get-AllJobsByAdmin']);\n        toast.success({ massage: res.message });\n      } else {\n        toast.error({ massage: res.message });\n      }\n    },\n    onError: (error) => {\n      toast.error({ massage: error.response.data.message });\n    }\n  });\n\n  return {\n    mutate: mutateAsync,\n    isLoading\n  };\n};\n\nexport default useMutateJobStatus;\n","import { AxiosError } from 'axios';\nimport { useQuery } from 'react-query';\nimport { PaginationType, ResponseData } from 'src/common/http-request';\nimport { Job } from '../model';\nimport { JobUpdateStatusService } from '../jobService';\nimport { useApp } from 'src/modules/app/hooks';\n\nconst useQueryJobByAdmin = (params?) => {\n  const { isAdmin } = useApp();\n  const { data, isLoading, refetch } = useQuery<\n    ResponseData<PaginationType<Job[]>>,\n    AxiosError<ResponseData<Job[]>>\n  >(\n    ['get-AllJobsByAdmin', params?.page, params?.profession, params?.status],\n    () => {\n      for (const key in params) {\n        if (params[key] === 'Tất cả') {\n          params[key] = '';\n        }\n      }\n      return JobUpdateStatusService.get({ params });\n    },\n    {\n      keepPreviousData: true,\n      retry: 1,\n      refetchOnWindowFocus: false,\n      enabled: isAdmin\n    }\n  );\n\n  return {\n    jobs:\n      data?.data?.items?.map((item) => ({ ...item, id: item.postId })) || [],\n    totalItems: data?.data?.meta?.totalItems,\n    itemCount: data?.data?.meta?.itemCount,\n    itemPerPage: data?.data?.meta?.itemPerPage,\n    totalPages: data?.data?.meta?.totalPages,\n    currentPage: data?.data?.meta?.currentPage,\n    isLoading,\n    refetch\n  };\n};\n\nexport default useQueryJobByAdmin;\n","import {\r\n  Container,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Divider,\r\n  IconButton\r\n} from '@mui/material';\r\nimport CardApply from 'src/modules/jobs/components/CardApply';\r\nimport TabContent from '../view-job-detail/TabContent';\r\nimport CompanyInfoTab from 'src/modules/jobs/components/CompanyInfoTab';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { isMobile } from 'src/constants/reponsive';\r\n\r\nexport default function ViewJobDialog({ data, postId, setSelectedId }) {\r\n  return (\r\n    <Dialog\r\n      open={Boolean(postId)}\r\n      onClose={() => {\r\n        setSelectedId(null);\r\n      }}\r\n      fullWidth\r\n      maxWidth=\"lg\"\r\n      fullScreen={isMobile}\r\n    >\r\n      <DialogTitle\r\n        sx={{\r\n          textAlign: 'center',\r\n          fontWeight: 700,\r\n          fontSize: '1.3rem'\r\n        }}\r\n      >\r\n        Việc làm ứng tuyển\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={() => setSelectedId(null)}\r\n          sx={{\r\n            position: 'absolute',\r\n            right: 14,\r\n            top: 14,\r\n            color: (theme) => theme.palette.grey[500]\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </DialogTitle>\r\n      <Divider\r\n        sx={{\r\n          bgcolor: '#B6FFFA',\r\n          height: 2\r\n        }}\r\n      />\r\n      <DialogContent>\r\n        <Container sx={{ paddingY: 2 }}>\r\n          <CardApply data={data} />\r\n          <TabContent />\r\n          <CompanyInfoTab sx={{ mt: 2 }} company={data?.employer} />\r\n        </Container>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","import Box from '@mui/material/Box';\r\nimport { GridColDef } from '@mui/x-data-grid';\r\nimport LinkText from 'src/components/LinkText';\r\nimport TableData from 'src/components/TableData';\r\nimport RemoveRedEyeIcon from '@mui/icons-material/RemoveRedEye';\r\nimport { Button, CircularProgress, Grid, Typography } from '@mui/material';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { useNavigate } from 'react-router';\r\nimport { APPROVAL_STATUS } from 'src/constants';\r\nimport SelectInput, { Option } from 'src/components/SelectInput';\r\nimport { useEffect, useState } from 'react';\r\nimport useMutateJobStatus from 'src/modules/jobs/hooks/useMutateJobStatus';\r\nimport { ApprovalStatus } from 'src/constants/enum';\r\nimport useQueryTotalResultOfJobsByAdmin from 'src/modules/jobs/hooks/useQueryTotalResultOfJobsByAdmin';\r\nimport Pagination from 'src/components/Pagination';\r\nimport useQueryJobByAdmin from 'src/modules/jobs/hooks/useQueryJobByAdmin';\r\nimport dayjs from 'dayjs';\r\nimport { Job } from 'src/modules/jobs/model';\r\nimport sendChatGPTRequest from 'src/GPT/sendChatGPTRequest';\r\nimport { checkContent } from 'src/GPT/roles';\r\nimport { rewriteUrl } from 'src/utils/rewriteUrl';\r\nimport alertDialog from 'src/utils/alertDialog';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport SuspenseLoader from 'src/components/SuspenseLoader';\r\nimport { TypographyEllipsis } from 'src/components/Typography';\r\nimport ReadMoreIcon from '@mui/icons-material/ReadMore';\r\nimport detailsModal from 'src/utils/detailsModal';\r\nimport { isMobile } from 'src/constants/reponsive';\r\nimport { checkIsJSON } from 'src/utils/formatData';\r\nimport { ViewJobDetail } from '../company-review-profiles/Table';\r\nimport ViewJobDialog from './ViewJobDialog';\r\nimport useJob from 'src/modules/jobs/hooks/useJob';\r\n\r\nconst renderJobTitle = (data) => {\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const { itemDetail, setItemDetail } = useJob();\r\n  console.log(data);\r\n\r\n  const jobTitle = rewriteUrl(data?.row?.jobTitle);\r\n  const handleOpenDetailModal = () => {\r\n    const detailsData = {\r\n      'Tên tin tuyển dụng': data?.row?.jobTitle,\r\n      'Người đăng': data?.row?.name,\r\n      'Tên công ty': data?.row?.employer?.companyName,\r\n      'Ngày đăng': dayjs(data.row?.createAt)\r\n        .add(7, 'hours')\r\n        .format('DD-MM-YYYY HH:mm:ss'),\r\n      'Lượt nộp': data.row?.submissionCount,\r\n      'Lượt xem': data?.row?.view,\r\n      'Trạng thái': data?.row?.status,\r\n      'Kiểm duyệt': renderCheckInvalid.find(\r\n        (item) => item.value == data?.row?.check\r\n      )?.label\r\n    };\r\n    detailsModal(detailsData);\r\n  };\r\n\r\n  return (\r\n    <Grid container alignItems={'center'}>\r\n      <Grid item xs={10.5} sm={12}>\r\n        <TypographyEllipsis\r\n          sx={{\r\n            color: '#319fce',\r\n            ':hover': {\r\n              textDecoration: 'none',\r\n              cursor: 'pointer'\r\n            },\r\n            textDecoration: 'none'\r\n          }}\r\n          onClick={() => {\r\n            setSelectedId(data.id);\r\n            setItemDetail(data?.row);\r\n          }}\r\n        >\r\n          {data.value}\r\n        </TypographyEllipsis>\r\n      </Grid>\r\n\r\n      <Grid item xs={1.5} sm={0} sx={{ display: { sm: 'none', xs: 'inline' } }}>\r\n        <Tooltip title=\"Chi tiết\">\r\n          <IconButton size=\"small\" onClick={handleOpenDetailModal}>\r\n            <ReadMoreIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Grid>\r\n      <ViewJobDialog\r\n        postId={selectedId}\r\n        setSelectedId={setSelectedId}\r\n        data={data?.row}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst renderCompany = (data) => {\r\n  return (\r\n    <Grid container alignItems={'center'}>\r\n      <Grid item xs={12} component={TypographyEllipsis}>\r\n        <LinkText\r\n          to={`/company/${rewriteUrl(data.value?.companyName)}?id=${btoa(\r\n            data?.value?.userId\r\n          )}`}\r\n          state={{ id: data?.value?.userId }}\r\n        >\r\n          {data.value?.companyName}\r\n        </LinkText>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst renderStatus = (data) => {\r\n  const initValue = APPROVAL_STATUS.find(\r\n    (item) => item.label === data.value\r\n  ).value;\r\n  const { mutate } = useMutateJobStatus();\r\n\r\n  const handleConfirm = (id, status) => {\r\n    mutate([id, { status: status, check: false }]);\r\n  };\r\n\r\n  const handleChangeValue = (e) => {\r\n    const value = e.target.value as ApprovalStatus;\r\n    if (data?.row.check == true && value === Object.keys(ApprovalStatus)[0]) {\r\n      alertDialog({\r\n        selectedId: data.id,\r\n        handleConfirm: () => handleConfirm(data.id, e.target.value),\r\n        message:\r\n          'Tin tuyển dụng đang ở trạng thái vi phạm, bạn có chắc muốn duyệt tin tuyển dụng này không?'\r\n      });\r\n    } else {\r\n      mutate([data.id, { status: value }]);\r\n    }\r\n  };\r\n\r\n  const displayColor = () => {\r\n    const initColor = APPROVAL_STATUS.find(\r\n      (item) => item.label === data.value\r\n    )?.optionColor;\r\n    return initColor;\r\n  };\r\n\r\n  return (\r\n    <SelectInput\r\n      value={initValue}\r\n      options={APPROVAL_STATUS}\r\n      onChange={handleChangeValue}\r\n      size=\"small\"\r\n      sx={{\r\n        fontSize: isMobile ? 10 : 13,\r\n        color: displayColor()\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst renderCheckInvalid = [\r\n  {\r\n    label: 'Chưa xác định',\r\n    value: null,\r\n    color: '#fff'\r\n  },\r\n  {\r\n    label: 'Hợp quy định',\r\n    value: false,\r\n    color: '#BFD8AF'\r\n  },\r\n  {\r\n    label: 'Vi phạm',\r\n    value: true,\r\n    color: '#F94C10'\r\n  }\r\n];\r\n\r\nconst renderCheck = (data) => {\r\n  // console.log(data);\r\n\r\n  const { mutate } = useMutateJobStatus();\r\n  const initCheckValue = renderCheckInvalid.find(\r\n    (item) => item.value == data.value\r\n  );\r\n  const [checkValue, setCheckValue] = useState(initCheckValue);\r\n\r\n  const options = renderCheckInvalid.map((item) => {\r\n    return {\r\n      label: item.label,\r\n      value: item.value ? 'true' : item.value == false ? 'false' : 'null'\r\n    };\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const value = e.target.value.toString();\r\n    const checkValue = renderCheckInvalid.find((item) => {\r\n      if (item.value !== null) return item.value.toString() === value;\r\n      else if (item.value === null && value !== 'null') return false;\r\n      else return true;\r\n    });\r\n\r\n    setCheckValue(checkValue);\r\n    mutate([data.id, { check: checkValue?.value }]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setCheckValue(initCheckValue);\r\n  }, [data.value]);\r\n\r\n  return (\r\n    <Typography\r\n      bgcolor={initCheckValue?.color}\r\n      sx={{\r\n        width: '90%',\r\n        borderRadius: 1,\r\n        py: 1,\r\n        textAlign: 'center',\r\n        fontSize: 13\r\n      }}\r\n    >\r\n      {initCheckValue?.label}\r\n    </Typography>\r\n    // <SelectInput\r\n    //   value={\r\n    //     checkValue?.value === true\r\n    //       ? 'true'\r\n    //       : checkValue?.value === false\r\n    //       ? 'false'\r\n    //       : 'null'\r\n    //   }\r\n    //   options={options}\r\n    //   size=\"small\"\r\n    //   onChange={handleChange}\r\n    //   sx={{\r\n    //     bgcolor: checkValue?.color,\r\n    //     '.css-dyke5w-MuiSelect-select-MuiInputBase-input-MuiOutlinedInput-input.MuiSelect-select':\r\n    //       {\r\n    //         fontSize: 13,\r\n    //         mx: -1\r\n    //       }\r\n    //   }}\r\n    // />\r\n  );\r\n};\r\n\r\nconst columns: GridColDef[] = [\r\n  {\r\n    field: 'jobTitle',\r\n    headerName: 'Tin tuyển dụng',\r\n    minWidth: !isMobile ? 200 : 130,\r\n    renderCell: renderJobTitle\r\n  },\r\n  {\r\n    field: 'name',\r\n    headerName: 'Người đăng',\r\n    minWidth: 120,\r\n    resizable: true,\r\n    renderCell: (data) => (\r\n      <Box\r\n        sx={{\r\n          overflow: 'hidden',\r\n          textOverflow: 'ellipsis',\r\n          whiteSpace: 'wrap',\r\n          lineHeight: '1.5',\r\n          display: '-webkit-box',\r\n          WebkitLineClamp: 2,\r\n          WebkitBoxOrient: 'vertical'\r\n        }}\r\n      >\r\n        {data.value}\r\n      </Box>\r\n    )\r\n  },\r\n  {\r\n    field: 'employer',\r\n    headerName: 'Tên công ty',\r\n    minWidth: 200,\r\n    renderCell: renderCompany\r\n  },\r\n  {\r\n    field: 'createAt',\r\n    headerName: 'Ngày đăng',\r\n    minWidth: 110,\r\n    sortable: true,\r\n    renderCell: (data) => (\r\n      <Box\r\n        sx={{\r\n          whiteSpace: 'wrap',\r\n          lineHeight: '1.5em'\r\n        }}\r\n      >\r\n        {dayjs(data.value).add(7, 'hours').format('DD-MM-YYYY HH:mm:ss')}\r\n      </Box>\r\n    )\r\n  },\r\n  {\r\n    field: 'submissionCount',\r\n    headerName: 'Lượt nộp',\r\n    minWidth: 90,\r\n    align: 'center',\r\n    headerAlign: 'center',\r\n    sortable: true\r\n  },\r\n  {\r\n    field: 'view',\r\n    headerName: 'Lượt xem',\r\n    minWidth: 90,\r\n    align: 'center',\r\n    headerAlign: 'center',\r\n    sortable: true,\r\n    resizable: true\r\n  },\r\n  {\r\n    field: 'status',\r\n    headerName: 'Trạng thái',\r\n    minWidth: !isMobile ? 130 : 115,\r\n    headerAlign: 'center',\r\n    renderCell: renderStatus,\r\n    sortable: true\r\n  },\r\n  {\r\n    field: 'check',\r\n    headerName: 'Kiểm duyệt',\r\n    minWidth: 130,\r\n    headerAlign: 'center',\r\n    align: 'center',\r\n    renderCell: renderCheck,\r\n    sortable: true\r\n  }\r\n];\r\n\r\nexport default function Table({ statusFilter, selectedProfession }) {\r\n  const { mutate } = useMutateJobStatus();\r\n  const [start, setStart] = useState(false);\r\n  const [showList, setShowList] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const pageSize = 9;\r\n\r\n  const { jobs, isLoading, totalPages } = useQueryJobByAdmin({\r\n    page: currentPage,\r\n    num: pageSize,\r\n    status: ApprovalStatus[statusFilter],\r\n    profession: selectedProfession\r\n  });\r\n\r\n  const preProcessData = (job: Job) => {\r\n    return {\r\n      postId: job?.postId,\r\n      jobTitle: job?.jobTitle,\r\n      jobDescription: job?.jobDescription,\r\n      jobRequirements: job?.jobRequirements,\r\n      benefits: job?.benefits,\r\n      requiredSkills: job?.requiredSkills\r\n    };\r\n  };\r\n\r\n  const handleCheck = async (dataToSend: Partial<Job>[]) => {\r\n    const result = await sendChatGPTRequest(checkContent, dataToSend);\r\n\r\n    const jsonResult = result?.map(\r\n      (item) => checkIsJSON(item) && JSON.parse(item)\r\n    );\r\n    const resultList = jobs?.map((job) => {\r\n      const found = jsonResult.find((item) => item.id === job.postId);\r\n      if (found) {\r\n        mutate([found.id, { check: found.result }]);\r\n        return {\r\n          ...job,\r\n          check: found.result\r\n        };\r\n      }\r\n      return job;\r\n    });\r\n    setShowList(resultList);\r\n    setStart(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!start) return;\r\n    const dataToSend = jobs\r\n      .filter((job) => selectedRows.includes(job.postId))\r\n      .map((job) => preProcessData(job));\r\n\r\n    // const dataToSend = jobs.map((job) => preProcessData(job));\r\n    handleCheck(dataToSend);\r\n  }, [start]);\r\n\r\n  useEffect(() => {\r\n    if (jobs) {\r\n      setShowList(() => jobs);\r\n    }\r\n  }, [JSON.stringify(jobs)]);\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(1);\r\n  }, [statusFilter]);\r\n\r\n  const [quickApproveValue, setQuickApproveValue] = useState(null);\r\n\r\n  const handleChangeValue = (e) => {\r\n    setQuickApproveValue(e.target.value);\r\n  };\r\n\r\n  const handleQuickApprove = () => {\r\n    alertDialog({\r\n      handleConfirm,\r\n      message: `Chuyển tin tuyển dụng đã chọn sang trạng thái ${ApprovalStatus[\r\n        quickApproveValue\r\n      ].toUpperCase()}?`\r\n    });\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    const handleConfirmApprove = () => {\r\n      debugger;\r\n      Promise.all(\r\n        selectedRows.map((id) => mutate([id, { status: quickApproveValue }]))\r\n      );\r\n    };\r\n    const violationJob = jobs.find((item) => {\r\n      return selectedRows.includes(item.postId) && item.check == true;\r\n    });\r\n\r\n    if (\r\n      selectedRows.some(\r\n        (row) =>\r\n          violationJob && quickApproveValue === Object.keys(ApprovalStatus)[0]\r\n      )\r\n    ) {\r\n      alertDialog({\r\n        handleConfirm: handleConfirmApprove,\r\n        message:\r\n          'Có tin tuyển dụng đang ở trạng thái vi phạm, bạn có chắc muốn các duyệt tin tuyển dụng đã chọn không?'\r\n      });\r\n    } else handleConfirmApprove();\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Box\r\n        sx={{\r\n          display: 'block',\r\n          float: { md: 'right' },\r\n          minWidth: { md: 500 },\r\n          maxWidth: 500\r\n        }}\r\n      >\r\n        <Grid\r\n          container\r\n          sx={{\r\n            alignItems: 'center'\r\n          }}\r\n          spacing={1}\r\n        >\r\n          <Grid item md={3} xs={12}>\r\n            <Typography fontWeight={700}>\r\n              Đã chọn: {selectedRows.length}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item md={5} xs={12} display={'flex'}>\r\n            <SelectInput\r\n              options={APPROVAL_STATUS}\r\n              onChange={handleChangeValue}\r\n              value={selectedRows.length > 0 ? quickApproveValue : ''}\r\n              sx={{\r\n                color: APPROVAL_STATUS.find(\r\n                  (item) => item.value === quickApproveValue\r\n                )?.optionColor\r\n              }}\r\n              disabled={!selectedRows.length}\r\n              label=\"Duyệt nhanh\"\r\n            />\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              sx={{ py: 1, px: 0 }}\r\n              color=\"info\"\r\n              onClick={handleQuickApprove}\r\n              disabled={!selectedRows.length || !quickApproveValue}\r\n            >\r\n              <CheckIcon sx={{ fontSize: 15 }} />\r\n            </Button>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            md={4}\r\n            xs={12}\r\n            sx={{\r\n              display: 'flex',\r\n              alignItems: 'center'\r\n            }}\r\n          >\r\n            <Button\r\n              onClick={() => setStart(selectedRows.length > 0)}\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              disabled={start || !selectedRows.length}\r\n              fullWidth\r\n              sx={{ py: 1, px: 0, bgcolor: '#FC4100' }}\r\n            >\r\n              <Grid item xs={!start ? 12 : 9}>\r\n                {!start ? 'Kiểm duyệt' : 'Đang kiểm duyệt...'}\r\n              </Grid>\r\n              <Grid item xs={start ? 3 : 0}>\r\n                {start && <CircularProgress size={18} color=\"secondary\" />}\r\n              </Grid>\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n      <TableData\r\n        sx={{ minHeight: '72vh', width: '100%' }}\r\n        rows={showList}\r\n        columns={columns}\r\n        hideFooter\r\n        checkboxSelection\r\n        rowSelection\r\n        onRowSelectionModelChange={(ids) => {\r\n          setSelectedRows(ids);\r\n        }}\r\n        loading={isLoading}\r\n        initialState={{\r\n          columns: {\r\n            columnVisibilityModel: {\r\n              name: !isMobile,\r\n              employer: !isMobile,\r\n              createAt: !isMobile,\r\n              submissionCount: !isMobile,\r\n              view: !isMobile,\r\n              check: !isMobile\r\n            }\r\n          }\r\n        }}\r\n        disableRowSelectionOnClick={isMobile}\r\n      />\r\n      <Pagination\r\n        totalPages={totalPages}\r\n        currentPage={currentPage}\r\n        handlePageChange={setCurrentPage}\r\n        disabled={start}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n","import { AxiosError } from 'axios';\nimport { useQuery } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { TotalResultEachProfessionByAdmin } from '../jobService';\n\ninterface ResponseType {\n  profession_value: string;\n  count: number;\n}\n\nconst useQueryTotalJobsEachProfessionByAdmin = (params?) => {\n  const { data, isLoading } = useQuery<\n    ResponseData<ResponseType[]>,\n    AxiosError<ResponseData<ResponseType[]>>\n  >(\n    ['get-TotalResultsEachProfessionByAdmin', params],\n    () => TotalResultEachProfessionByAdmin.get({ params }),\n    {\n      retry: 1,\n      refetchOnWindowFocus: false\n    }\n  );\n\n  return {\n    dataList: data?.data,\n    isLoading\n  };\n};\n\nexport default useQueryTotalJobsEachProfessionByAdmin;\n","import {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Container,\n  Divider,\n  Grid\n} from '@mui/material';\nimport useQueryJobByAdmin from 'src/modules/jobs/hooks/useQueryJobByAdmin';\nimport Table from './Table';\nimport SelectInput from 'src/components/SelectInput';\nimport { APPROVAL_STATUS } from 'src/constants';\nimport { useState } from 'react';\nimport ProfessionList from 'src/modules/admin/components/ProfessionList';\nimport useQueryTotalJobsEachProfession from 'src/modules/jobs/hooks/useQueryTotalJobsEachProfession';\nimport SuspenseLoader from 'src/components/SuspenseLoader';\nimport useQueryTotalJobsEachProfessionByAdmin from 'src/modules/jobs/hooks/useQueryTotalJobsEachProfessionByAdmin';\n\nconst ApprovalStatusOption = [\n  {\n    value: '',\n    label: 'Tất cả',\n    color: 'info',\n    optionColor: '#000'\n  },\n  ...APPROVAL_STATUS\n];\n\nconst JobApproval = () => {\n  const [status, setStatus] = useState('');\n  const [selectedProfession, setSelectedProfession] = useState(null);\n  const [isProfessionView, setIsProfessionView] = useState(false);\n\n  const { dataList, isLoading } = useQueryTotalJobsEachProfessionByAdmin();\n\n  const handleChangeStatusFilter = (e) => {\n    setStatus(e.target.value);\n  };\n\n  const handleSelectProfession = (name: string) => {\n    setSelectedProfession(name);\n    setIsProfessionView(false);\n  };\n\n  const handleToggleViewMode = () => {\n    setIsProfessionView((prev) => !prev);\n    setSelectedProfession(null);\n  };\n\n  if (isLoading) return <SuspenseLoader />;\n  return (\n    <Container maxWidth=\"xl\">\n      <Grid\n        container\n        direction=\"row\"\n        justifyContent=\"center\"\n        alignItems=\"stretch\"\n        spacing={3}\n        marginTop={0}\n      >\n        <Grid item xs={12}>\n          <Card>\n            <Box\n              sx={{\n                display: 'flex',\n                justifyContent: { sm: 'space-between', xs: 'center' },\n                flexWrap: 'wrap'\n              }}\n            >\n              <CardHeader title=\"Danh sách tin tuyển dụng\" />\n              <Box\n                sx={{\n                  display: 'flex',\n                  justifyContent: { xs: 'center', sm: 'end' },\n                  px: 2,\n                  gap: 1\n                }}\n              >\n                {!isProfessionView && (\n                  <Box sx={{ margin: 'auto', width: '120px' }}>\n                    <SelectInput\n                      label=\"Trạng thái\"\n                      value={status}\n                      options={ApprovalStatusOption}\n                      onChange={(e) => handleChangeStatusFilter(e)}\n                      sx={{\n                        color: ApprovalStatusOption.find(\n                          (item) => item.value === status\n                        ).optionColor\n                      }}\n                    />\n                  </Box>\n                )}\n                <Button\n                  variant=\"contained\"\n                  color={!isProfessionView ? 'primary' : 'info'}\n                  onClick={handleToggleViewMode}\n                  sx={{ margin: 'auto', height: 35, width: 150 }}\n                >\n                  {!isProfessionView ? 'Xem theo ngành' : 'Tất cả'}\n                </Button>\n              </Box>\n            </Box>\n\n            <Divider />\n            <CardContent>\n              {isProfessionView && !selectedProfession && (\n                <ProfessionList\n                  handleSelectProfession={handleSelectProfession}\n                  handleViewProfessionMode={setIsProfessionView}\n                  total={dataList}\n                />\n              )}\n              {!isProfessionView && (\n                <Table\n                  statusFilter={status}\n                  selectedProfession={selectedProfession}\n                />\n              )}\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default JobApproval;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\nexports.default = _default;"],"names":["LinkWrapper","styled","Link","_ref","theme","textDecoration","color","colors","info","dark","primary","light","props","_jsx","useMutateJobStatus","queryClient","useQueryClient","toast","useApp","isLoading","mutateAsync","useMutation","id","data","JobUpdateStatusService","update","onSuccess","res","status","invalidateQueries","success","massage","message","error","onError","response","mutate","params","_data$data","_data$data$items","_data$data2","_data$data2$meta","_data$data3","_data$data3$meta","_data$data4","_data$data4$meta","_data$data5","_data$data5$meta","_data$data6","_data$data6$meta","isAdmin","refetch","useQuery","page","profession","key","get","keepPreviousData","retry","refetchOnWindowFocus","enabled","jobs","items","map","item","postId","totalItems","meta","itemCount","itemPerPage","totalPages","currentPage","ViewJobDialog","setSelectedId","_jsxs","Dialog","open","Boolean","onClose","fullWidth","maxWidth","fullScreen","isMobile","children","DialogTitle","sx","textAlign","fontWeight","fontSize","IconButton","onClick","position","right","top","palette","grey","CloseIcon","Divider","bgcolor","height","DialogContent","Container","paddingY","CardApply","TabContent","CompanyInfoTab","mt","company","employer","renderCheckInvalid","label","value","columns","field","headerName","minWidth","renderCell","_data$row","selectedId","useState","itemDetail","setItemDetail","useJob","console","log","rewriteUrl","row","jobTitle","Grid","container","alignItems","xs","sm","TypographyEllipsis","cursor","display","Tooltip","title","size","handleOpenDetailModal","_data$row2","_data$row3","_data$row4","_data$row4$employer","_data$row5","_data$row6","_data$row7","_data$row8","_renderCheckInvalid$f","detailsData","name","companyName","dayjs","createAt","add","format","submissionCount","view","find","_data$row9","check","detailsModal","ReadMoreIcon","resizable","Box","overflow","textOverflow","whiteSpace","lineHeight","WebkitLineClamp","WebkitBoxOrient","_data$value","_data$value2","_data$value3","_data$value4","component","LinkText","to","concat","btoa","userId","state","sortable","align","headerAlign","initValue","APPROVAL_STATUS","SelectInput","options","onChange","e","target","Object","keys","ApprovalStatus","alertDialog","handleConfirm","displayColor","_APPROVAL_STATUS$find","optionColor","initCheckValue","checkValue","setCheckValue","useEffect","Typography","width","borderRadius","py","Table","_APPROVAL_STATUS$find2","statusFilter","selectedProfession","start","setStart","showList","setShowList","setCurrentPage","selectedRows","setSelectedRows","useQueryJobByAdmin","num","async","result","sendChatGPTRequest","checkContent","dataToSend","jsonResult","checkIsJSON","JSON","parse","resultList","job","found","handleCheck","filter","includes","jobDescription","jobRequirements","benefits","requiredSkills","preProcessData","stringify","quickApproveValue","setQuickApproveValue","handleConfirmApprove","Promise","all","violationJob","some","float","md","spacing","length","disabled","Button","variant","px","handleQuickApprove","toUpperCase","CheckIcon","CircularProgress","TableData","minHeight","rows","hideFooter","checkboxSelection","rowSelection","onRowSelectionModelChange","ids","loading","initialState","columnVisibilityModel","disableRowSelectionOnClick","Pagination","handlePageChange","TotalResultEachProfessionByAdmin","dataList","ApprovalStatusOption","JobApproval","setStatus","setSelectedProfession","isProfessionView","setIsProfessionView","useQueryTotalJobsEachProfessionByAdmin","SuspenseLoader","direction","justifyContent","marginTop","Card","flexWrap","CardHeader","gap","margin","handleChangeStatusFilter","handleToggleViewMode","prev","CardContent","ProfessionList","handleSelectProfession","handleViewProfessionMode","total","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}