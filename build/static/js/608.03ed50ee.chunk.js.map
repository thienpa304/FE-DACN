{"version":3,"file":"static/js/608.03ed50ee.chunk.js","mappings":"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","sources":["components/Link/index.tsx","components/SearchBar/SearchBar.tsx","pages/view-result-job-list/index.tsx","../node_modules/@mui/icons-material/Search.js"],"sourcesContent":["import React, { forwardRef, useMemo } from 'react';\nimport { Link as ReactLink } from 'react-router-dom';\n\ninterface CustomLinkProps {\n  to?: string;\n  children: React.ReactNode;\n  sx?: any;\n  state?: any;\n  onClick?: () => void;\n}\n\nconst linkStyle = {\n  textDecoration: 'none',\n  color: '#551a8b'\n};\n\nconst handleMouseEnter = (e: React.MouseEvent<HTMLAnchorElement>) => {\n  e.currentTarget.style.color = '#FF7D55'; // Truy cập style thông qua currentTarget\n};\n\nconst handleMouseLeave = (\n  e: React.MouseEvent<HTMLAnchorElement>,\n  defaultColor\n) => {\n  e.currentTarget.style.color = defaultColor || '#551a8b'; // Truy cập style thông qua currentTarget\n};\n\nconst Link = forwardRef<HTMLButtonElement, CustomLinkProps>((props, ref) => {\n  const { to, children, sx } = props;\n\n  return (\n    <ReactLink\n      {...props}\n      to={to}\n      style={{ ...linkStyle, ...sx }}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={(e) => handleMouseLeave(e, sx?.color)}\n    >\n      {children}\n    </ReactLink>\n  );\n});\n\nexport default Link;\n","import { Box, Button, Grid, InputAdornment, TextField } from '@mui/material';\nimport React, { useState } from 'react';\nimport SearchIcon from '@mui/icons-material/Search';\nimport Link from 'src/components/Link';\nimport SelectInput from 'src/components/SelectInput';\nimport { PROFESSION, WORK_AT } from 'src/constants';\nimport { rewriteUrl } from 'src/utils/rewriteUrl';\n\nconst ProfessionOptions = [\n  {\n    label: 'Tất cả',\n    value: ''\n  },\n  ...PROFESSION\n];\nconst AddressOptions = [\n  {\n    label: 'Tất cả',\n    value: ''\n  },\n  ...WORK_AT\n];\n\nconst buildSearchUrl = (\n  baseUrl,\n  searchValue,\n  selectedProfession,\n  selectedAddress\n) => {\n  const searchParams = new URLSearchParams();\n  if (searchValue) searchParams.append('search', searchValue);\n  if (selectedProfession) searchParams.append('profession', selectedProfession);\n  if (selectedAddress) searchParams.append('address', selectedAddress);\n\n  return `${baseUrl}?${searchParams.toString()}`;\n};\n\nexport default function SearchBar({ to, sx }: { to: string; sx?: any }) {\n  const [searchValue, setSearchValue] = useState('');\n  const [selectedProfession, setSelectedProfession] = useState('');\n  const [selectedAddress, setSelectedAddress] = useState('');\n\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchValue(() => event.target.value);\n  };\n\n  const handleSelectProfession = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setSelectedProfession(() => event.target.value);\n  };\n\n  const handleSelectAddress = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSelectedAddress(() => event.target.value);\n  };\n\n  const searchUrl = buildSearchUrl(\n    to,\n    searchValue,\n    selectedProfession,\n    selectedAddress\n  );\n\n  return (\n    <Grid\n      container\n      display=\"flex\"\n      sx={{\n        border: '1px solid #98E4FF',\n        borderRadius: '5px',\n        ...sx\n      }}\n    >\n      <Grid item md={6} xs={12}>\n        <TextField\n          value={searchValue}\n          onChange={handleSearchChange}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <SearchIcon />\n              </InputAdornment>\n            )\n          }}\n          placeholder=\"Nhập vị trí muốn ứng tuyển\"\n          fullWidth\n          sx={{\n            backgroundColor: 'white',\n            boxShadow: '2px 2px 6px #98E4FF'\n          }}\n        />\n      </Grid>\n      <Grid item md={2} xs={6}>\n        <SelectInput\n          options={ProfessionOptions}\n          onChange={handleSelectProfession}\n          label=\"Nghề nghiệp\"\n          placeholder=\"Nghề nghiệp\"\n          fullWidth\n          sx={{\n            backgroundColor: 'white',\n            boxShadow: '2px 2px 6px #98E4FF',\n            borderRadius: '0px'\n          }}\n          labelmargintop=\"5px\"\n          size=\"medium\"\n        />\n      </Grid>\n      <Grid item md={2} xs={6}>\n        <SelectInput\n          options={AddressOptions}\n          onChange={handleSelectAddress}\n          label=\"Khu vực\"\n          placeholder=\"Khu vực\"\n          fullWidth\n          sx={{\n            backgroundColor: 'white',\n            boxShadow: '2px 2px 6px #98E4FF',\n            borderRadius: '0px'\n          }}\n          labelmargintop=\"5px\"\n          size=\"medium\"\n        />\n      </Grid>\n      <Grid item md={2} xs={12}>\n        <Link\n          to={\n            selectedProfession || searchValue || selectedAddress\n              ? searchUrl\n              : ''\n          }\n          sx={{ color: '#000' }}\n          state={{\n            jobTitle: searchValue?.trim(),\n            profession: selectedProfession,\n            pageTitle: searchValue\n          }}\n        >\n          <Button\n            variant=\"contained\"\n            sx={{ opacity: 0.8, height: '100%', borderRadius: '0px' }}\n            fullWidth\n          >\n            <SearchIcon />\n            Tìm kiếm\n          </Button>\n        </Link>\n      </Grid>\n    </Grid>\n  );\n}\n","import useQueryAllJob from 'src/modules/jobs/hooks/useQueryAllJob';\nimport JobList from 'src/modules/jobs/components/JobList';\nimport { useSearchParams } from 'react-router-dom';\nimport SearchBar from 'src/components/SearchBar/SearchBar';\nimport { Box, Container, Typography } from '@mui/material';\nimport { useResponsive } from 'src/utils/responsive';\n\nfunction ResultJobList() {\n  const [searchParams] = useSearchParams();\n  const jobTitle = searchParams.get('search');\n  const workAddress = searchParams.get('address');\n  const profession = searchParams.get('profession');\n  const { isMobile } = useResponsive();\n  const ResultTypo = () => {\n    return (\n      <Box\n        display={'flex'}\n        columnGap={1}\n        flexDirection={isMobile ? 'column' : 'row'}\n      >\n        <Typography sx={{ fontSize: { md: 20, xs: 16 } }}>\n          Kết quả việc làm:\n        </Typography>\n        {jobTitle && (\n          <Typography fontWeight={700} sx={{ fontSize: { md: 20, xs: 16 } }}>\n            {jobTitle}\n          </Typography>\n        )}\n        {profession && (\n          <Typography sx={{ fontSize: { md: 20, xs: 16 } }}>\n            ngành <b>{profession}</b>\n          </Typography>\n        )}\n        {workAddress && (\n          <Typography sx={{ fontSize: { md: 20, xs: 16 } }}>\n            tại <b>{workAddress}</b>\n          </Typography>\n        )}\n      </Box>\n    );\n  };\n\n  return (\n    <>\n      <Container disableGutters maxWidth=\"md\" sx={{ pt: 3 }}>\n        <SearchBar to=\"/profession\" />\n      </Container>\n      <JobList\n        pageTitle={<ResultTypo />}\n        profession={profession}\n        jobTitle={jobTitle}\n        workAddress={workAddress}\n        queryJobs={useQueryAllJob}\n      />\n    </>\n  );\n}\n\nexport default ResultJobList;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexports.default = _default;"],"names":["linkStyle","textDecoration","color","handleMouseEnter","e","currentTarget","style","forwardRef","props","ref","to","children","sx","_jsx","ReactLink","onMouseEnter","onMouseLeave","handleMouseLeave","defaultColor","ProfessionOptions","label","value","PROFESSION","AddressOptions","WORK_AT","buildSearchUrl","baseUrl","searchValue","selectedProfession","selectedAddress","searchParams","URLSearchParams","append","concat","toString","SearchBar","_ref","setSearchValue","useState","setSelectedProfession","setSelectedAddress","searchUrl","_jsxs","Grid","container","display","border","borderRadius","item","md","xs","TextField","onChange","event","target","InputProps","startAdornment","InputAdornment","position","SearchIcon","placeholder","fullWidth","backgroundColor","boxShadow","SelectInput","options","labelmargintop","size","Link","state","jobTitle","trim","profession","pageTitle","Button","variant","opacity","height","useSearchParams","get","workAddress","isMobile","useResponsive","ResultTypo","Box","columnGap","flexDirection","Typography","fontSize","fontWeight","_Fragment","Container","disableGutters","maxWidth","pt","JobList","queryJobs","useQueryAllJob","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}