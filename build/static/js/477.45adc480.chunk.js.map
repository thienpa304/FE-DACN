{"version":3,"file":"static/js/477.45adc480.chunk.js","mappings":"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","sources":["modules/admin/hooks/useQueryPostingsReport.ts","modules/admin/hooks/useQueryCandidateStatistics.ts","pages/admin/StatisticsAndReports.tsx"],"sourcesContent":["import { AxiosError } from 'axios';\r\nimport { useQuery } from 'react-query';\r\nimport { ResponseData } from 'src/common/http-request';\r\nimport { AdminJobPostingsReportService } from '../adminService';\r\n\r\nconst useQueryJobPostingsReport = () => {\r\n  const { data, isLoading } = useQuery<\r\n    ResponseData<any[]>,\r\n    AxiosError<ResponseData<any[]>>\r\n  >(['get-job-postings-report'], () => AdminJobPostingsReportService.get({}), {\r\n    keepPreviousData: true,\r\n    retry: 1,\r\n    refetchOnWindowFocus: false\r\n  });\r\n\r\n  return {\r\n    jobPostingData: data?.data?.map((item) => ({ ...item })) || [],\r\n    isLoading\r\n  };\r\n};\r\n\r\nexport default useQueryJobPostingsReport;\r\n","import { AxiosError } from 'axios';\r\nimport { useQuery } from 'react-query';\r\nimport { ResponseData } from 'src/common/http-request';\r\nimport { AdminCandidateStatisticsService } from '../adminService';\r\n\r\nconst useQueryCandidateStatistics = () => {\r\n  const { data, isLoading } = useQuery<\r\n    ResponseData<any[]>,\r\n    AxiosError<ResponseData<any[]>>\r\n  >(\r\n    ['get-candidate-statistics'],\r\n    () => AdminCandidateStatisticsService.get({}),\r\n    {\r\n      keepPreviousData: true,\r\n      retry: 1,\r\n      refetchOnWindowFocus: false\r\n    }\r\n  );\r\n\r\n  return {\r\n    candidateStatistics: data?.data?.map((item) => ({ ...item })) || [],\r\n    isLoading\r\n  };\r\n};\r\n\r\nexport default useQueryCandidateStatistics;\r\n","import React from 'react';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  Typography\r\n} from '@mui/material';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  PieChart, // Corrected component name\r\n  Pie, // Corrected component name\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  Cell\r\n} from 'recharts';\r\nimport useQueryJobPostingsReport from 'src/modules/admin/hooks/useQueryPostingsReport';\r\nimport useQueryCandidateStatistics from 'src/modules/admin/hooks/useQueryCandidateStatistics';\r\n\r\nconst StatisticsAndReports = () => {\r\n  // Example Data\r\n  // const jobPostingData = [\r\n  //   { name: 'January', value: 65 },\r\n  //   { name: 'February', value: 59 },\r\n  //   { name: 'March', value: 80 },\r\n  //   { name: 'April', value: 81 },\r\n  //   { name: 'May', value: 56 }\r\n  // ];\r\n\r\n  const applicantData = [\r\n    { name: 'Engineer', value: 12 },\r\n    { name: 'Designer', value: 19 },\r\n    { name: 'Manager', value: 3 },\r\n    { name: 'Analyst', value: 5 },\r\n    { name: 'Developer', value: 2 }\r\n  ];\r\n\r\n  const recruitmentStatusData = [\r\n    { name: 'Open', value: 10 },\r\n    { name: 'Closed', value: 5 },\r\n    { name: 'In Progress', value: 8 }\r\n  ];\r\n\r\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#814289'];\r\n\r\n  const { jobPostingData } = useQueryJobPostingsReport();\r\n  const { candidateStatistics } = useQueryCandidateStatistics();\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\">\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"stretch\"\r\n        spacing={3}\r\n        marginTop={0}\r\n      >\r\n        <Grid item xs={12}>\r\n          <Card>\r\n            <CardHeader title=\"Thống kê và Báo cáo\" />\r\n            <Divider />\r\n            <CardContent>\r\n              <Grid container>\r\n                <Grid item xs={8}>\r\n                  {/* Bar Chart - Job Postings */}\r\n                  <Typography variant=\"h6\">\r\n                    Số Lượng Công Việc Đăng Tuyển\r\n                  </Typography>\r\n                  <BarChart\r\n                    width={500}\r\n                    height={350}\r\n                    data={jobPostingData}\r\n                    margin={{ top: 30, right: 30, left: 20, bottom: 5 }}\r\n                  >\r\n                    <XAxis\r\n                      dataKey=\"name\"\r\n                      label={{\r\n                        value: 'Tháng',\r\n                        position: 'insideBottomRight',\r\n                        offset: 0\r\n                      }}\r\n                    />\r\n                    <YAxis\r\n                      type=\"number\"\r\n                      domain={[0, 'dataMax + 5']}\r\n                      label={{\r\n                        value: 'Công việc',\r\n                        position: 'insideLeft',\r\n                        angle: -90,\r\n                        offset: 15\r\n                      }}\r\n                    />\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <Tooltip />\r\n                    <Bar dataKey=\"value\" fill=\"#8884d8\" />\r\n                  </BarChart>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <Typography variant=\"h6\">Thống Kê Ứng Viên</Typography>\r\n                  <PieChart width={300} height={300}>\r\n                    <Tooltip />\r\n                    <Legend />\r\n                    <Pie\r\n                      data={candidateStatistics}\r\n                      dataKey=\"value\"\r\n                      nameKey=\"name\"\r\n                      outerRadius={80}\r\n                      fill=\"#8884d8\"\r\n                      startAngle={90}\r\n                      endAngle={-270}\r\n                    >\r\n                      {applicantData.map((entry, index) => (\r\n                        <Cell\r\n                          key={`cell-${index}`}\r\n                          fill={COLORS[index % COLORS.length]}\r\n                        />\r\n                      ))}\r\n                    </Pie>\r\n                    {/* Corrected component name */}\r\n                  </PieChart>\r\n                </Grid>\r\n              </Grid>\r\n              {/* Line Chart - Recruitment Status */}\r\n              <Typography variant=\"h6\">Tình Trạng Tuyển Dụng</Typography>\r\n              <LineChart\r\n                width={600}\r\n                height={300}\r\n                data={recruitmentStatusData}\r\n                margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n              >\r\n                <XAxis dataKey=\"name\" />\r\n                <YAxis />\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" />\r\n              </LineChart>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default StatisticsAndReports;\r\n"],"names":["useQueryJobPostingsReport","_data$data","data","isLoading","useQuery","AdminJobPostingsReportService","get","keepPreviousData","retry","refetchOnWindowFocus","jobPostingData","map","item","useQueryCandidateStatistics","AdminCandidateStatisticsService","candidateStatistics","StatisticsAndReports","COLORS","_jsx","Container","maxWidth","children","Grid","container","direction","justifyContent","alignItems","spacing","marginTop","xs","_jsxs","Card","CardHeader","title","Divider","CardContent","Typography","variant","BarChart","width","height","margin","top","right","left","bottom","XAxis","dataKey","label","value","position","offset","YAxis","type","domain","angle","CartesianGrid","strokeDasharray","Tooltip","Bar","fill","PieChart","Legend","Pie","nameKey","outerRadius","startAngle","endAngle","name","entry","index","Cell","length","concat","LineChart","Line","stroke"],"sourceRoot":""}