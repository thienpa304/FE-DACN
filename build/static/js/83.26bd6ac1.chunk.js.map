{"version":3,"file":"static/js/83.26bd6ac1.chunk.js","mappings":"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","sources":["components/ButtonGroup/index.tsx","components/EditButton/index.tsx","components/FollowButton/index.tsx","components/Link/index.tsx","constants/uploadFileRule.ts","modules/application/applicationService.ts","modules/jobProfile/attachedDocument/hooks/useQueryAttachedDocument.ts","modules/jobProfile/onlineProfile/hooks/useQueryOnlineProfile.ts","components/LinearPercent/index.tsx","components/UploadButton/index.tsx","modules/application/hooks/useMutateApplyJob.ts","modules/application/components/AnayzeProfileButton.tsx","modules/application/components/ModalApply.tsx","modules/jobs/components/CardApply.tsx","modules/jobs/components/CompanyInfoTab.tsx","modules/jobs/hooks/useMutateFollowJobById.ts","modules/jobs/components/FollowJobButton.tsx","modules/jobs/hooks/useFollowJobList.ts","modules/jobs/hooks/useJob.ts","modules/jobs/hooks/useQueryFollowJobs.ts","modules/users/hooks/useMutateUserHook.ts","modules/users/hooks/useMutateCompany.ts","modules/users/profile/Information/EditForm.tsx","modules/users/profile/Information/InfoField.tsx","modules/jobs/components/JobContent.tsx","pages/view-job-detail/TabContent.tsx","utils/reviewProfile.ts","utils/compareEnum.ts","utils/rewriteUrl.ts"],"sourcesContent":["import { Box, Button } from '@mui/material';\n\nexport default function ButtonGroup(props) {\n  const { handleSubmit, handleCancel } = props;\n  return (\n    <Box display=\"flex\" justifyContent=\"center\" sx={{ gap: 3 }}>\n      <Button\n        onClick={handleCancel}\n        variant=\"outlined\"\n        color=\"secondary\"\n        sx={{ width: 120 }}\n      >\n        Hủy\n      </Button>\n      <Button\n        color=\"success\"\n        onClick={handleSubmit}\n        variant=\"contained\"\n        sx={{ width: 120 }}\n      >\n        Xác nhận\n      </Button>\n    </Box>\n  );\n}\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, Typography, ButtonProps } from '@mui/material';\r\nimport AutoFixHighOutlinedIcon from '@mui/icons-material/AutoFixHighOutlined';\r\nimport { useResponsive } from 'src/utils/responsive';\r\n\r\nexport default function EditButton(props: ButtonProps) {\r\n  const { isMobile } = useResponsive();\r\n  return (\r\n    <Button\r\n      {...props}\r\n      variant=\"outlined\"\r\n      color=\"secondary\"\r\n      // startIcon={<AutoFixHighOutlinedIcon fontSize=\"large\" />}\r\n      sx={{ display: 'flex', borderRadius: { xs: 1, md: 5 } }}\r\n      size={isMobile ? 'small' : 'medium'}\r\n    >\r\n      <AutoFixHighOutlinedIcon fontSize=\"small\" />\r\n      <Typography textTransform=\"none\" display={isMobile && 'none'}>\r\n        Chỉnh sửa\r\n      </Typography>\r\n    </Button>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport { Box } from '@mui/material';\n\nexport default function FollowButton(props) {\n  const { isFollow: isFollowing } = props;\n  const [isFollow, setIsFollow] = useState(isFollowing);\n\n  const handleToggleFollow = (id) => {\n    setIsFollow((prev) => !prev);\n  };\n\n  useEffect(() => {\n    setIsFollow(isFollowing);\n  }, [isFollowing]);\n\n  return (\n    <Box\n      onClick={handleToggleFollow}\n      sx={{ display: 'flex', alignItem: 'center' }}\n    >\n      {isFollow ? (\n        <FavoriteIcon\n          sx={{\n            display: 'flex',\n            color: 'red',\n            '&:hover': {\n              color: 'darkred'\n            }\n          }}\n        />\n      ) : (\n        <FavoriteBorderIcon\n          sx={{\n            display: 'flex',\n            color: 'red',\n            '&:hover': {\n              color: 'darkred'\n            }\n          }}\n        />\n      )}\n    </Box>\n  );\n}\n","import React, { forwardRef, useMemo } from 'react';\nimport { Link as ReactLink } from 'react-router-dom';\n\ninterface CustomLinkProps {\n  to?: string;\n  children: React.ReactNode;\n  sx?: any;\n  state?: any;\n  onClick?: () => void;\n}\n\nconst linkStyle = {\n  textDecoration: 'none',\n  color: '#551a8b'\n};\n\nconst handleMouseEnter = (e: React.MouseEvent<HTMLAnchorElement>) => {\n  e.currentTarget.style.color = '#FF7D55'; // Truy cập style thông qua currentTarget\n};\n\nconst handleMouseLeave = (\n  e: React.MouseEvent<HTMLAnchorElement>,\n  defaultColor\n) => {\n  e.currentTarget.style.color = defaultColor || '#551a8b'; // Truy cập style thông qua currentTarget\n};\n\nconst Link = forwardRef<HTMLButtonElement, CustomLinkProps>((props, ref) => {\n  const { to, children, sx } = props;\n\n  return (\n    <ReactLink\n      {...props}\n      to={to}\n      style={{ ...linkStyle, ...sx }}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={(e) => handleMouseLeave(e, sx?.color)}\n    >\n      {children}\n    </ReactLink>\n  );\n});\n\nexport default Link;\n","export const defaultImage = {\n  companyAvatar:\n    'https://th.bing.com/th/id/OIP.EK1rvrib-MWNflZRM2XiDQHaH_?pid=ImgDet&w=183&h=197&c=7&dpr=1.3',\n  companyCover:\n    'https://png.pngtree.com/background/20210706/original/pngtree-business-background-white-collar-jobs-picture-image_216619.jpg'\n};\n\nexport const avatarFormat = {\n  acceptTypes: ['image/jpeg', 'image/png', 'image/gif'],\n  acceptSize: 1 * 1024 * 1024\n};\nexport const CVFormat = {\n  acceptTypes: ['application/pdf'],\n  acceptSize: 2 * 1024 * 1024\n};\nexport const coverImgFormat = {\n  acceptTypes: ['image/jpeg', 'image/png', 'image/gif'],\n  acceptSize: 4 * 1024 * 1024\n};\n","import BaseService from 'src/common/base-service';\n\nexport const ApplicationService = new BaseService('employee/applications');\nexport const CandidateProfilesService = new BaseService(\n  'employer/applications'\n);\nexport const UpdateStatusService = new BaseService('employer/applications');\nexport const ApplicationTotalResults = new BaseService(\n  'employer/applications/totalResults'\n);\n","import { AxiosError } from 'axios';\nimport { useQuery } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { AttachedDocument } from 'src/modules/jobProfile/model/index';\nimport { AttachedDocumentService } from 'src/modules/jobProfile/employeeProfileService';\nimport { useEffect, useState } from 'react';\nimport { getAccessToken } from 'src/utils/localStorage';\nimport { useApp } from 'src/modules/app/hooks';\nimport useDocumentHook from './useDocumentHook';\n\nconst useQueryAttachedDocument = () => {\n  const { isEmployee } = useApp();\n  const { setProfile } = useDocumentHook();\n  const isLoggedIn = Boolean(getAccessToken());\n\n  const { data, isLoading, isSuccess, refetch } = useQuery<\n    ResponseData<AttachedDocument>,\n    AxiosError<ResponseData<AttachedDocument>>\n  >(['get-AttachedDocument'], AttachedDocumentService.get, {\n    retry: (failureCount, error) =>\n      error.response.status === 404 ? false : failureCount < 2,\n    refetchOnWindowFocus: false,\n    enabled: isLoggedIn && isEmployee\n  });\n\n  useEffect(() => {\n    // Handle the data or error here\n    if (data) {\n      setProfile(data.data);\n    }\n  }, [isSuccess]);\n\n  return {\n    attachedDocument: data?.data,\n    isLoading,\n    refetch\n  };\n};\n\nexport default useQueryAttachedDocument;\n","import { AxiosError } from 'axios';\nimport { useQuery } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { OnlineProfile } from 'src/modules/jobProfile/model/index';\nimport { OnlineProfileService } from 'src/modules/jobProfile/employeeProfileService';\nimport { useEffect, useState } from 'react';\nimport { getAccessToken } from 'src/utils/localStorage';\nimport { useApp } from 'src/modules/app/hooks';\nimport useOnlineProfile from './useOnlineProfile';\n\nconst useQueryOnlineProfile = () => {\n  const { isEmployee } = useApp();\n  const { setProfile } = useOnlineProfile();\n  const isLoggedIn = Boolean(getAccessToken());\n\n  const { data, isLoading, isSuccess, refetch } = useQuery<\n    ResponseData<OnlineProfile>,\n    AxiosError<ResponseData<OnlineProfile>>\n  >(['get-OnlineProfile'], OnlineProfileService.get, {\n    retry: (failureCount, error) =>\n      error.response.status === 404 ? false : failureCount < 2,\n    refetchOnWindowFocus: false,\n    enabled: isLoggedIn && isEmployee\n  });\n\n  useEffect(() => {\n    // Handle the data or error here\n    if (data && isSuccess) {\n      setProfile(data?.data);\n    }\n  }, [isSuccess]);\n\n  return {\n    onlineProfile: data?.data,\n    isLoading,\n    refetch\n  };\n};\n\nexport default useQueryOnlineProfile;\n","import * as React from 'react';\nimport LinearProgress, {\n  LinearProgressProps\n} from '@mui/material/LinearProgress';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\n\nfunction LinearPercent(props: LinearProgressProps & { value: number }) {\n  return (\n    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n      <Box sx={{ width: '100%', mr: 1 }}>\n        <LinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box sx={{ minWidth: 35 }}>\n        <Typography variant=\"body2\" color=\"text.secondary\">{`${Math.round(\n          props.value\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nexport default LinearPercent;\n","import { useState } from 'react';\nimport { ref, uploadBytesResumable, getDownloadURL } from 'firebase/storage';\nimport { storage } from 'src/common/firebaseConfig';\nimport { styled } from '@mui/material/styles';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport Button, { ButtonProps } from '@mui/material/Button';\nimport Chip from '@mui/material/Chip';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Box from '@mui/material/Box';\nimport LinearPercent from '../LinearPercent';\nimport dayjs from 'dayjs';\nimport { ApplicationType } from 'src/constants/enum';\nimport { removeFileByUrl } from 'src/common/firebaseService';\n\nconst VisuallyHiddenInput = styled('input')({\n  display: 'none'\n});\n\nconst ButtonWrapper = styled(Button)<any>(({ theme }) => ({\n  backgroundColor: theme.colors.primary.lighter\n}));\nconst ChipWrapper = styled(Chip)(({ theme }) => ({\n  borderRadius: 6\n}));\n\ntype Props = ButtonProps & {\n  label?: string;\n  value?: string;\n  onChange?: (url: string) => void;\n  setIsChecked?: (value: string) => void;\n  setUrl?: (value: string) => void;\n};\n\nfunction UploadButton(props: Props) {\n  const { label, sx, onChange, setIsChecked, setUrl } = props;\n  // State to store uploaded file\n  const [file, setFile] = useState<File>();\n  const [fileUrl, setFileUrl] = useState<string | undefined>();\n\n  // progress\n  const [percent, setPercent] = useState(null);\n\n  // Handle file upload event and update state\n  const handleChange = async (event) => {\n    removeFileByUrl(fileUrl).then(() => {\n      const file = event.target.files[0];\n      if (!file) return;\n      setFile(() => file);\n      handleUpload(file);\n    });\n  };\n\n  const handleDeleteFile = async () => {\n    if (!fileUrl) return;\n    removeFileByUrl(fileUrl).then(() => {\n      setFile(() => null);\n      setIsChecked('');\n    });\n  };\n  console.log(file, fileUrl);\n\n  const handleUpload = (value) => {\n    if (!value) return;\n\n    let date = dayjs(new Date()).format('DDMMYYYY');\n    const storageRef = ref(storage, `/userDocument/${value.name}-${date}`);\n\n    // progress can be paused and resumed. It also exposes progress updates.\n    // Receives the storage reference and the file to upload.\n    const uploadTask = uploadBytesResumable(storageRef, value);\n\n    uploadTask.on(\n      'state_changed',\n      (snapshot) => {\n        const percent = Math.round(\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n        );\n\n        // update progress\n        setPercent(percent);\n      },\n      (err) => console.log(err),\n      () => {\n        // download url\n        getDownloadURL(uploadTask.snapshot.ref).then((url) => {\n          setPercent(null);\n          setFileUrl(() => url);\n          setUrl(url);\n          onChange(url);\n        });\n      }\n    );\n    setIsChecked(ApplicationType.cv_enclosed);\n  };\n\n  return (\n    <div>\n      <ButtonWrapper\n        component=\"label\"\n        variant=\"contained\"\n        startIcon={<CloudUploadIcon />}\n        sx={sx}\n      >\n        {label || 'Upload file'}\n        <VisuallyHiddenInput\n          type=\"file\"\n          onChange={handleChange}\n          accept=\"application/pdf\"\n        />\n      </ButtonWrapper>\n      <Box marginTop={2}>\n        {percent !== null && <LinearPercent value={percent} />}\n        {fileUrl && file && (\n          <ChipWrapper\n            label={file.name}\n            onDelete={handleDeleteFile}\n            deleteIcon={<DeleteIcon />}\n            variant=\"outlined\"\n          />\n        )}\n      </Box>\n    </div>\n  );\n}\n\nexport default UploadButton;\n","import { AxiosError } from 'axios';\nimport { useMutation } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { useApp } from 'src/modules/app/hooks';\nimport { useNavigate } from 'react-router';\nimport { ApplicationService } from '../applicationService';\nimport { Application } from '../model';\n\nconst useMutateApplyJob = () => {\n  const { toast } = useApp();\n  const navigate = useNavigate();\n  const { mutate: onSaveData, isLoading } = useMutation<\n    ResponseData<Application>,\n    AxiosError<ResponseData<Application>>,\n    Application\n  >(ApplicationService.create, {\n    onSuccess: (res) => {\n      if (res.status === 200) {\n        toast.success({ massage: 'Ứng tuyển thành công' });\n      } else {\n        toast.error({ massage: res.message });\n      }\n    },\n    onError: (error) => {\n      toast.error({ massage: error.response.data.message });\n    }\n  });\n\n  return {\n    onSaveData,\n    isLoading\n  };\n};\n\nexport default useMutateApplyJob;\n","import {\n  Box,\n  Button,\n  CircularProgress,\n  Container,\n  IconButton,\n  Rating,\n  Typography\n} from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { ApplicationType } from 'src/constants/enum';\nimport { useApp } from 'src/modules/app/hooks';\nimport GradeIcon from '@mui/icons-material/Grade';\nimport {\n  ProfileApplicationType,\n  LOW_SCORE,\n  NORMAL_SCORE,\n  HIGH_SCORE,\n  review,\n  firstRoundForGeneralInfo,\n  preprocessJobData,\n  preprocessProfileData,\n  ratingStar\n} from 'src/utils/reviewProfile';\nimport { LoadingButton } from '@mui/lab';\nimport alertDialog from 'src/utils/alertDialog';\n\nconst renderAnalyzeResult = (analyzeResult: number, hints: string) => {\n  const rating = ratingStar(analyzeResult);\n\n  return (\n    <>\n      <Box display={'flex'} textAlign={'left'}>\n        <Typography fontWeight={700} fontSize={16} mr={2}>\n          Độ phù hợp\n        </Typography>\n        {/* <Box\n          sx={{\n            width: 150,\n            borderRadius: 3,\n            p: 1,\n            bgcolor:\n              analyzeResult >= HIGH_SCORE\n                ? '#ffc107'\n                : analyzeResult >= NORMAL_SCORE\n                ? '#4caf50'\n                : analyzeResult >= LOW_SCORE\n                ? '#b5b5b5'\n                : '#efefef',\n            display: 'flex',\n            justifyContent: 'center'\n          }}\n        >\n          {analyzeResult >= HIGH_SCORE\n            ? 'Cao'\n            : analyzeResult >= NORMAL_SCORE\n            ? 'Trung bình'\n            : analyzeResult >= LOW_SCORE\n            ? 'Thấp'\n            : 'Không phù hợp'}\n        </Box> */}\n        <Rating value={rating} max={3} readOnly />\n      </Box>\n      <Box\n        display={'flex'}\n        flexDirection={'column'}\n        // justifyContent={'left'}\n        mt={2}\n        textAlign={'left'}\n      >\n        <Typography fontWeight={700} fontSize={16}>\n          Gợi ý:\n        </Typography>\n        <Typography mt={1}>{hints}</Typography>\n      </Box>\n    </>\n  );\n};\n\nexport default function AnayzeProfileButton(props) {\n  const {\n    selectedProfile,\n    job,\n    profileType,\n    setShowResult,\n    showResult,\n    fileUrl,\n    setHintsMessage\n  } = props;\n  const { user } = useApp();\n  const [start, setStart] = useState(false);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [analyzedProfile, setAnalyzedProfile] =\n    useState<ProfileApplicationType>(null);\n  const [passRoundProfiles, setPassOneProfiles] = useState<\n    ProfileApplicationType[]\n  >([]);\n  const [roundOneFinished, setRoundOneFinished] = useState(false);\n  const [roundTwoFinished, setRoundTwoFinished] = useState(false);\n  const [roundThreeFinished, setRoundThreeFinished] = useState(false);\n  const [analyzeResult, setAnalyzeResult] = useState<number>(null);\n  const [goToAnalyzeResult, setGoToAnalyzeResult] = useState({\n    signal: false,\n    resultData: null\n  });\n  const [hints, setHints] = useState('');\n\n  const finishedAll = () => {\n    setHintsMessage(hints);\n    setStart(false);\n    setRoundOneFinished(false);\n    setRoundTwoFinished(false);\n    setRoundThreeFinished(false);\n    setShowResult(true);\n    setIsAnalyzing(false);\n    setPassOneProfiles([]);\n    setGoToAnalyzeResult({ signal: false, resultData: null });\n    console.log('Finised All');\n    alertDialog({\n      message: renderAnalyzeResult(analyzeResult, hints),\n      hideCancelButton: true,\n      title: 'Kết quả phân tích'\n    });\n  };\n\n  const handleSetAnalyzedProfile = async (data: ProfileApplicationType[]) => {\n    setAnalyzedProfile(data[0]);\n  };\n\n  const handleIsAnalyzing = (data: boolean) => {\n    setIsAnalyzing(data);\n  };\n\n  const handleGoToAnalyzeResult = (signal: boolean, resultData) => {\n    setGoToAnalyzeResult({ signal: signal, resultData: resultData });\n    console.log('resultData', resultData);\n  };\n\n  const handleAnalyzeResult = async (result: any[]) => {\n    if (!result || !result[0]) {\n      if (\n        analyzedProfile?.employee_Profile?.online_profile ||\n        analyzedProfile?.employee_Profile?.attached_document\n      ) {\n        debugger;\n        console.log('....', analyzedProfile?.employee_Profile);\n\n        const matchingScore = firstRoundForGeneralInfo(\n          analyzedProfile?.employer_Requirement,\n          analyzedProfile?.employee_Profile\n        );\n\n        console.log('matchingScore', matchingScore);\n        setAnalyzeResult(() => matchingScore);\n        if (matchingScore >= LOW_SCORE) {\n          setPassOneProfiles(() => [analyzedProfile]);\n        } else {\n          setHints(\n            'Hồ sơ của bạn có vẻ chưa đáp ứng các yêu cầu cơ bản như: Giới tính, độ tuổi ngành nghề, trình độ, kinh nghiệm'\n          );\n          setIsAnalyzing(false);\n        }\n      }\n    } else {\n      const response = JSON.parse(result[0]);\n      const matchingScore: number = response?.result;\n      if (matchingScore + analyzeResult < LOW_SCORE) {\n        setHints(\n          'Hồ sơ của bạn có vẻ chưa đáp ứng các yêu cầu cơ bản như: Ngành nghề, trình độ, kinh nghiệm'\n        );\n      } else setHints(response?.hints);\n      setAnalyzeResult((prev) => prev + matchingScore);\n    }\n\n    if (start) {\n      if (!roundOneFinished) setRoundOneFinished(true);\n      else if (!roundTwoFinished) setRoundTwoFinished(true);\n      else if (!roundThreeFinished) setRoundThreeFinished(true);\n    }\n  };\n\n  const handleReviewProfile = () => {\n    review({\n      round: 1,\n      handleAnalyzeResult: handleAnalyzeResult,\n      setIsAnalyzing: handleIsAnalyzing,\n      setAnalyzedProfile: handleSetAnalyzedProfile,\n      resetMatchingScoreList: [analyzedProfile],\n      handleGoToAnalyzeResult: handleGoToAnalyzeResult\n    });\n  };\n\n  useEffect(() => {\n    if (goToAnalyzeResult.signal)\n      start && handleAnalyzeResult(goToAnalyzeResult.resultData);\n  }, [goToAnalyzeResult.signal]);\n\n  useEffect(() => {\n    let profileData;\n    if (profileType === ApplicationType.online_profile) {\n      profileData = {\n        personal_information: user,\n        online_profile: selectedProfile\n      };\n    } else if (profileType === ApplicationType.attached_document) {\n      profileData = {\n        personal_information: user,\n        attached_document: selectedProfile\n      };\n    } else {\n      profileData = {\n        application: {\n          id: 1,\n          CV: fileUrl,\n          applicationType: 'Nộp nhanh'\n        }\n      };\n    }\n    const data: ProfileApplicationType = {\n      id: 1,\n      employee_Profile: {\n        ...profileData,\n        personal_information: {\n          dob: profileData?.personal_information?.dob,\n          sex: profileData?.personal_information?.sex\n        }\n      },\n      employer_Requirement: preprocessJobData(job)\n    };\n    setAnalyzedProfile(() => data);\n\n    if (\n      data?.employee_Profile?.online_profile ||\n      data?.employee_Profile?.attached_document\n    ) {\n      const keywords =\n        data?.employee_Profile?.online_profile?.keywords ||\n        data?.employee_Profile?.attached_document?.keywords;\n      const analyzeResultData: ProfileApplicationType = {\n        ...data,\n        employee_Profile: {\n          ...data.employee_Profile,\n\n          application: {\n            id: 1,\n            keywords: keywords,\n            applicationType: profileType,\n            matchingScore: null\n          }\n        }\n      };\n      setAnalyzedProfile(() => analyzeResultData);\n      console.log(analyzeResultData);\n    }\n  }, [JSON.stringify(job), selectedProfile, fileUrl]);\n\n  // go to round 1\n  useEffect(() => {\n    console.log(analyzedProfile);\n    if (start && selectedProfile) {\n      setAnalyzeResult(null);\n      setShowResult(false);\n      handleReviewProfile();\n    }\n  }, [start]);\n\n  // go to round 2 and 3\n  useEffect(() => {\n    if (!start) return;\n    if (roundOneFinished && !roundTwoFinished) {\n      console.log('passRoundProfiles', passRoundProfiles);\n\n      // go to round 2\n      if (passRoundProfiles.length > 0)\n        review({\n          round: 2,\n          handleAnalyzeResult: handleAnalyzeResult,\n          setIsAnalyzing: handleIsAnalyzing,\n          passRoundProfiles: passRoundProfiles\n        });\n      else {\n        finishedAll();\n      }\n    } else if (roundTwoFinished && !roundThreeFinished) {\n      console.log('Round 2 finished');\n\n      // go to round 3\n      review({\n        round: 3,\n        handleAnalyzeResult: handleAnalyzeResult,\n        setIsAnalyzing: handleIsAnalyzing,\n        passRoundProfiles: passRoundProfiles\n      });\n    } else if (roundThreeFinished) {\n      console.log('Round 3 finished');\n      finishedAll();\n    }\n  }, [roundOneFinished, roundTwoFinished, roundThreeFinished]);\n\n  useEffect(() => {\n    console.log(analyzeResult);\n  }, [analyzeResult]);\n\n  return (\n    <Box display=\"flex\" sx={{ alignItems: 'center', gap: 1 }}>\n      <LoadingButton\n        loading={isAnalyzing}\n        onClick={() => {\n          setStart(true);\n        }}\n        variant=\"contained\"\n        color=\"primary\"\n        sx={{\n          minWidth: 200\n        }}\n        disabled={showResult || isAnalyzing}\n      >\n        <GradeIcon fontSize=\"small\" />\n        Phân tích độ phù hợp\n      </LoadingButton>\n      {/* {showResult && (\n        <Box\n          sx={{\n            width: 150,\n            borderRadius: 3,\n            p: 1,\n            bgcolor:\n              analyzeResult >= HIGH_SCORE\n                ? '#ffc107'\n                : analyzeResult >= NORMAL_SCORE\n                ? '#4caf50'\n                : analyzeResult >= LOW_SCORE\n                ? '#b5b5b5'\n                : '#efefef',\n            display: 'flex',\n            justifyContent: 'center'\n          }}\n        >\n          {analyzeResult >= HIGH_SCORE\n            ? 'Cao'\n            : analyzeResult >= NORMAL_SCORE\n            ? 'Trung bình'\n            : analyzeResult >= LOW_SCORE\n            ? 'Thấp'\n            : 'Không phù hợp'}\n        </Box>\n      )} */}\n    </Box>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  Grid,\n  Typography\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { useForm } from 'react-hook-form';\nimport FormControl from 'src/components/FormControl';\nimport TextField from 'src/components/TextField';\nimport UploadButton from 'src/components/UploadButton';\nimport AddIcon from '@mui/icons-material/Add';\nimport useMutateApplyJob from '../hooks/useMutateApplyJob';\nimport { ApplicationType } from 'src/constants/enum';\nimport useQueryOnlineProfile from 'src/modules/jobProfile/onlineProfile/hooks/useQueryOnlineProfile';\nimport useQueryAttachedDocument from 'src/modules/jobProfile/attachedDocument/hooks/useQueryAttachedDocument';\nimport { useApp } from 'src/modules/app/hooks';\nimport useProfileHook from 'src/modules/users/hooks/useUserHook';\nimport { v4 } from 'uuid';\nimport useOnlineProfile from 'src/modules/jobProfile/onlineProfile/hooks/useOnlineProfile';\nimport useDocumentHook from 'src/modules/jobProfile/attachedDocument/hooks/useDocumentHook';\nimport { review } from 'src/utils/reviewProfile';\nimport AnayzeProfileButton from './AnayzeProfileButton';\nimport { Job } from 'src/modules/jobs/model';\nimport { removeFileByUrl } from 'src/common/firebaseService';\nimport SuspenseLoader from 'src/components/SuspenseLoader';\nimport { isMobile } from 'src/constants/reponsive';\n\nconst Title = styled('div')(() => ({\n  fontWeight: 600,\n  fontSize: 18,\n  margin: '5px 0'\n}));\nconst SubTitle = styled('div')(({ theme }) => ({\n  fontWeight: 400,\n  fontSize: 12,\n  color: theme.colors.alpha.black[70]\n}));\n\ntype Props = {\n  postId: number;\n  open: boolean;\n  position: string;\n  company?: string;\n  job?: Partial<Job>;\n  onClose: () => void;\n};\n\nexport default function ModalApply(props: Props) {\n  const { onSaveData } = useMutateApplyJob();\n  const { open, onClose, position, company, postId, job } = props;\n  const { profile: user } = useProfileHook();\n  const { onlineProfile, isLoading: isLoadingOnline } = useQueryOnlineProfile();\n  const { attachedDocument, isLoading: isLoadingDocument } =\n    useQueryAttachedDocument();\n  const { profile: online, setProfile: setOnline } = useOnlineProfile();\n  const { profile: document, setProfile: setDocument } = useDocumentHook();\n  const [isChecked, setIsChecked] = useState('');\n  const [missInfo, setMissInfo] = useState(false);\n  const [selectedProfile, setSelectedProfile] = useState(null);\n  const [showResult, setShowResult] = useState(false);\n  const [url, setUrl] = useState('');\n  const [hintsMessage, setHintsMessage] = useState('');\n  const buttonStyle = {\n    width: '100%',\n    px: 1,\n    color: '#000'\n  };\n\n  const {\n    control,\n    handleSubmit,\n    reset,\n    formState: { errors }\n  } = useForm({\n    defaultValues: {}\n  });\n\n  const handleClose = () => {\n    if (url) removeFileByUrl(url).then(() => setUrl(''));\n    setIsChecked(null);\n    setHintsMessage(null);\n    setShowResult(null);\n    setSelectedProfile(null);\n    onClose();\n  };\n  const handleApply = (data) => {\n    if (!isChecked) {\n      setMissInfo(true);\n      return;\n    }\n\n    let submitProfile = '';\n\n    if (isChecked === ApplicationType.cv_enclosed) submitProfile = data.CV;\n    else {\n      if (url) removeFileByUrl(url);\n      submitProfile = '#' + v4();\n    }\n\n    onSaveData({\n      ...data,\n      postId,\n      applicationType: isChecked,\n      CV: submitProfile\n    });\n    setShowResult(null);\n    onClose();\n  };\n\n  const uploadProfile = (id) => {\n    setIsChecked(id);\n    setHintsMessage('');\n  };\n\n  useEffect(() => {\n    reset(user);\n    setShowResult(false);\n    if (isChecked === ApplicationType.online_profile) {\n      setSelectedProfile(online);\n    }\n    if (isChecked === ApplicationType.attached_document) {\n      setSelectedProfile(document);\n    }\n    if (isChecked === ApplicationType.cv_enclosed) {\n      setSelectedProfile(job);\n    }\n  }, [isChecked]);\n\n  if (isLoadingOnline || isLoadingOnline) return <SuspenseLoader />;\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        maxWidth=\"md\"\n        fullWidth\n        fullScreen={isMobile}\n      >\n        <DialogTitle>\n          <SubTitle> Vị trí ứng tuyển</SubTitle>\n          <Title>{position}</Title>\n          {company && <SubTitle>{company}</SubTitle>}\n        </DialogTitle>\n\n        <DialogContent>\n          <Grid container spacing={2}>\n            <Grid item xs={12} md={6} lg={4}>\n              <Button\n                startIcon={<AddIcon />}\n                variant=\"contained\"\n                disabled={onlineProfile ? false : true}\n                fullWidth\n                onClick={() => uploadProfile(ApplicationType.online_profile)}\n                sx={[\n                  buttonStyle,\n                  {\n                    bgcolor:\n                      isChecked === ApplicationType.online_profile\n                        ? '#f29c00'\n                        : '#fff6e5'\n                  }\n                ]}\n              >\n                {onlineProfile ? (\n                  'Hồ sơ trực tuyến'\n                ) : (\n                  <em>Chưa có hồ sơ trực tuyến</em>\n                )}\n              </Button>\n            </Grid>\n            <Grid item xs={12} md={6} lg={4}>\n              <Button\n                startIcon={<AddIcon />}\n                variant=\"contained\"\n                fullWidth\n                disabled={attachedDocument ? false : true}\n                onClick={() => uploadProfile(ApplicationType.attached_document)}\n                sx={[\n                  buttonStyle,\n                  {\n                    bgcolor:\n                      isChecked === ApplicationType.attached_document\n                        ? '#f29c00'\n                        : '#fff6e5'\n                  }\n                ]}\n              >\n                {attachedDocument ? (\n                  'Hồ sơ đính kèm'\n                ) : (\n                  <em>Chưa có hồ sơ đính kèm</em>\n                )}\n              </Button>\n            </Grid>\n            <Grid item xs={12} lg={4}>\n              <FormControl\n                control={control}\n                errors={errors}\n                id=\"CV\"\n                name=\"CV\"\n                label=\"Tải lên hồ sơ có sẵn\"\n              >\n                <UploadButton\n                  sx={[\n                    buttonStyle,\n                    {\n                      bgcolor:\n                        isChecked === ApplicationType.cv_enclosed\n                          ? '#f29c00'\n                          : '#fff6e5'\n                    }\n                  ]}\n                  setIsChecked={setIsChecked}\n                  setUrl={setUrl}\n                />\n              </FormControl>\n            </Grid>\n          </Grid>\n          {missInfo && (\n            <Typography\n              color=\"error\"\n              mb={3}\n              fontWeight={700}\n              fontStyle=\"italic\"\n            >\n              * Vui lòng chọn loại hồ sơ cần gửi !\n            </Typography>\n          )}\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <FormControl\n                element={<TextField />}\n                control={control}\n                errors={errors}\n                required\n                id=\"name\"\n                label=\"Họ và tên\"\n                name=\"name\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl\n                element={<TextField />}\n                control={control}\n                errors={errors}\n                required\n                id=\"email\"\n                label=\"Email\"\n                name=\"email\"\n                pattern=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl\n                element={<TextField />}\n                control={control}\n                errors={errors}\n                required\n                id=\"phone\"\n                label=\"Số điện thoại\"\n                name=\"phone\"\n                pattern=\"phone\"\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions\n          sx={{\n            display: 'flex',\n            justifyContent: { sm: 'space-between', xs: 'center' },\n            flexWrap: 'wrap',\n            p: 2,\n            gap: 2\n          }}\n        >\n          <AnayzeProfileButton\n            job={job}\n            selectedProfile={selectedProfile}\n            profileType={isChecked}\n            setShowResult={setShowResult}\n            showResult={showResult}\n            fileUrl={url}\n            setHintsMessage={setHintsMessage}\n          />\n          <Box sx={{ display: 'flex', columnGap: 1 }}>\n            <Button\n              onClick={handleClose}\n              variant=\"outlined\"\n              color=\"secondary\"\n              sx={{ minWidth: 120 }}\n            >\n              Hủy\n            </Button>\n            <Button\n              onClick={handleSubmit(handleApply)}\n              variant=\"contained\"\n              color=\"info\"\n              sx={{ minWidth: 120 }}\n            >\n              Nộp hồ sơ\n            </Button>\n          </Box>\n        </DialogActions>\n        {/* {hintsMessage && (\n          <Box mb={1} p={2} gap={1} display=\"flex\" flexDirection=\"column\">\n            <Divider sx={{ mb: 1, color: '#f29c00' }} />\n            <Typography fontWeight={700} fontSize={18}>\n              Gợi ý:\n            </Typography>\n            <Typography fontStyle=\"italic\" mx={2}>\n              {hintsMessage}\n            </Typography>\n          </Box>\n        )} */}\n      </Dialog>\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport { Avatar, Box, Grid, Button } from '@mui/material';\nimport DateRangeIcon from '@mui/icons-material/DateRange';\nimport PaidIcon from '@mui/icons-material/Paid';\nimport SendIcon from '@mui/icons-material/Send';\nimport AccessibilityIcon from '@mui/icons-material/Accessibility';\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\nimport { styled } from '@mui/material/styles';\nimport { Job } from '../model';\nimport ModalApply from '../../application/components/ModalApply';\nimport { toInputDateString } from 'src/utils/formatData';\nimport { defaultImage } from 'src/constants/uploadFileRule';\nimport { useApp } from 'src/modules/app/hooks';\nimport { Link, Navigate, useNavigate, useSearchParams } from 'react-router-dom';\nimport FollowJobButton from './FollowJobButton';\nimport SuspenseLoader from 'src/components/SuspenseLoader';\nimport CustomContainer from 'src/components/CustomContainer';\nimport { rewriteUrl } from 'src/utils/rewriteUrl';\nimport { isMobile } from 'src/constants/reponsive';\n\nconst AvatarWrapper = styled(Avatar)(({ theme }) => ({\n  width: 150,\n  height: 150,\n  objectFit: 'contain',\n  borderRadius: '5px'\n}));\nconst SubTitle = styled('h3')(({ theme }) => ({\n  fontWeight: 400,\n  fontSize: 16,\n  color: theme.colors.alpha.black[70]\n}));\nconst Title = styled('h3')(() => ({\n  fontWeight: 600,\n  fontSize: 18\n}));\nconst LabelText = styled('span')(({ theme }) => ({\n  color: theme.colors.alpha.black[70]\n}));\nconst ValueText = styled('span')(({ theme }) => ({\n  color: theme.colors.alpha.black[100],\n  marginLeft: 5\n}));\ntype Props = {\n  data: Partial<Job>;\n};\nconst CardApply: React.FC<Props> = ({ data }) => {\n  const { isEmployee, isEmployer, isAdmin } = useApp();\n  const [openFormApply, setOpenFormApply] = useState(false);\n  const navigate = useNavigate();\n  const onCloseFormApply = () => {\n    setOpenFormApply(false);\n  };\n  const handleOpenFormApply = () => {\n    setOpenFormApply(true);\n  };\n\n  return (\n    <CustomContainer sx={{ px: 5, pb: 5, mb: 2 }}>\n      <Grid container>\n        <Grid\n          item\n          xs={12}\n          md={2}\n          display=\"flex\"\n          alignItems=\"center\"\n          sx={{ justifyContent: { xs: 'center', sm: 'normal' } }}\n        >\n          <AvatarWrapper\n            src={data?.employer?.logo || defaultImage.companyAvatar}\n          />\n        </Grid>\n        <Grid item xs={12} md={10}>\n          <Box>\n            <Link\n              to={`/company/${rewriteUrl(\n                data?.employer?.companyName\n              )}?id=${btoa(data?.employer?.userId.toString())}`}\n              style={{ textDecoration: 'none' }}\n            >\n              <SubTitle>{data?.employer?.companyName}</SubTitle>\n            </Link>\n            <Title>{data.jobTitle}</Title>\n            <Grid container spacing={1}>\n              <Grid item xs={12} md={6}>\n                <Grid container alignItems={'center'}>\n                  <PaidIcon color=\"primary\" sx={{ margin: '0 5px' }} />\n                  <LabelText> Mức lương : </LabelText>\n                  <ValueText>\n                    {data.minSalary} - {data.maxSalary} triệu\n                  </ValueText>\n                </Grid>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Grid\n                  container\n                  alignItems={'center'}\n                  wrap=\"nowrap\"\n                  overflow={'hidden'}\n                >\n                  <DateRangeIcon color=\"primary\" sx={{ margin: '0 5px' }} />\n                  <LabelText> Hạn nộp hồ sơ : </LabelText>\n                  <ValueText>{data.applicationDeadline}</ValueText>\n                </Grid>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Grid container alignItems={'center'}>\n                  <AccessibilityIcon color=\"primary\" sx={{ margin: '0 5px' }} />\n                  <LabelText> Độ tuổi : </LabelText>\n                  <ValueText>\n                    {data.minAge} - {data.maxAge}\n                  </ValueText>\n                </Grid>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Grid container alignItems={'center'}>\n                  <LocationOnIcon color=\"primary\" sx={{ margin: '0 5px' }} />\n                  <LabelText> Khu vực ứng tuyển : </LabelText>\n                  <ValueText>{data.workAddress}</ValueText>\n                </Grid>\n              </Grid>\n            </Grid>\n            {!isEmployer && !isAdmin && (\n              <Box\n                sx={{\n                  marginTop: 2,\n                  display: 'flex',\n                  gap: 2,\n                  alignItems: 'center',\n                  justifyContent: isMobile && 'center'\n                }}\n              >\n                <Button\n                  onClick={\n                    isEmployee\n                      ? handleOpenFormApply\n                      : () => {\n                          navigate('/login', {\n                            state: {\n                              from:\n                                window.location.pathname +\n                                window.location.search,\n                              postId: data.postId\n                            }\n                          });\n                        }\n                  }\n                  variant=\"contained\"\n                  startIcon={<SendIcon />}\n                  color=\"info\"\n                >\n                  Nộp hồ sơ\n                </Button>\n                <FollowJobButton job={data} />\n              </Box>\n            )}\n          </Box>\n        </Grid>\n      </Grid>\n      <ModalApply\n        open={openFormApply}\n        postId={data.postId}\n        onClose={onCloseFormApply}\n        position={data.jobTitle}\n        company={data?.employer?.companyName}\n        job={data}\n      />\n    </CustomContainer>\n  );\n};\n\nexport default CardApply;\n","import { Box, Typography } from '@mui/material';\nimport CustomContainer from 'src/components/CustomContainer';\nimport { InfoGrid } from 'src/modules/users/profile/Information/InfoField';\nimport BusinessIcon from '@mui/icons-material/Business';\nimport { rewriteUrl } from 'src/utils/rewriteUrl';\nimport Link from 'src/components/Link';\nimport { textAlign } from 'html2canvas/dist/types/css/property-descriptors/text-align';\n\nconst CompanyData = (company) => [\n  { label: 'Tên công ty', value: company?.companyName },\n  { label: 'Địa chỉ công ty', value: company?.companyLocation },\n  { label: 'Lĩnh vực', value: company?.careerField },\n  { label: 'Giới thiệu doanh nghiệp', value: company?.description }\n];\n\nexport default function CompanyInfoTab(props) {\n  const { sx, company, companyPage = false } = props;\n\n  return (\n    <CustomContainer sx={{ px: 5, ...sx }}>\n      <Box\n        sx={{ display: { xs: 'normal', sm: 'flex' } }}\n        justifyContent=\"space-between\"\n      >\n        <Box display=\"flex\">\n          <BusinessIcon color=\"primary\" sx={{ fontSize: { sm: 56, xs: 46 } }} />\n          <Typography\n            fontWeight={700}\n            sx={{ fontSize: { sm: 22, xs: 20 } }}\n            lineHeight={3}\n          >\n            Thông tin công ty\n          </Typography>\n        </Box>\n        {!companyPage && (\n          <Link\n            to={`/company/${rewriteUrl(company?.companyName)}?id=${btoa(\n              company?.userId\n            )}`}\n            sx={{\n              textDecoration: 'none',\n              alignContent: 'center'\n            }}\n          >\n            Xem trang công ty\n          </Link>\n        )}\n      </Box>\n      {CompanyData(company)?.map((item, index) => (\n        <InfoGrid key={index} item={item} />\n      ))}\n    </CustomContainer>\n  );\n}\n","import { AxiosError } from 'axios';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { useApp } from 'src/modules/app/hooks';\nimport { FollowJobService } from '../jobService';\n\nconst useMutateFollowJobById = () => {\n  const queryClient = useQueryClient();\n  const { toast } = useApp();\n  const { mutate: onFollowJobById, isLoading } = useMutation<\n    ResponseData<any[]>,\n    AxiosError<ResponseData<any[]>>,\n    [id: number]\n  >(([id]) => FollowJobService.create({ jobPosting: id }), {\n    onSuccess: (res) => {\n      if (res.status === 200) {\n        queryClient.invalidateQueries(['get-FollowJobs']);\n        toast.success({ massage: res.message });\n      } else {\n        toast.error({ massage: res.message });\n      }\n    },\n    onError: (error) => {\n      toast.error({ massage: error.response.data.message });\n    }\n  });\n\n  return {\n    onFollowJobById,\n    isLoading\n  };\n};\n\nexport default useMutateFollowJobById;\n","import { useEffect, useState } from 'react';\r\nimport { Box } from '@mui/material';\r\nimport useMutateFollowJobById from '../hooks/useMutateFollowJobById';\r\nimport { useApp } from 'src/modules/app/hooks';\r\nimport FollowButton from 'src/components/FollowButton';\r\nimport useFollowJobList from 'src/modules/jobs/hooks/useFollowJobList';\r\nimport useJobList from '../hooks/useJobList';\r\nimport useQueryFollowJobs from '../hooks/useQueryFollowJobs';\r\n\r\nexport default function FollowJobButton(props) {\r\n  const { job, sx } = props;\r\n  const { onFollowJobById } = useMutateFollowJobById();\r\n  const { isEmployee } = useApp();\r\n  const [isFollow, setIsFollow] = useState(false);\r\n  const { followJobsList } = useFollowJobList();\r\n  const { jobList } = useJobList();\r\n  useQueryFollowJobs({ jobIds: jobList?.join(',') });\r\n\r\n  const handleToggleFollow = (id) => {\r\n    onFollowJobById([id]);\r\n    setIsFollow((prev) => !prev);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!job || !followJobsList?.length) return;\r\n    const foundItem = followJobsList?.includes(job?.postId);\r\n    foundItem && setIsFollow(true);\r\n  }, [JSON.stringify(followJobsList), JSON.stringify(job)]);\r\n\r\n  if (!job || !isEmployee) return;\r\n\r\n  return (\r\n    <Box\r\n      onClick={() => handleToggleFollow(job?.postId)}\r\n      sx={{ display: 'flex', alignItem: 'center', ...sx }}\r\n    >\r\n      <FollowButton isFollow={isFollow} />\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useAppDispatch, useAppSelector } from 'src/redux/hooks';\r\nimport {\r\n  selectFollowJobList,\r\n  setFollowJobList as setFollowJobListAction,\r\n  resetFollowJobList as reset\r\n} from '../followJobSlice';\r\nimport { FollowJobType } from 'src/modules/jobs/model';\r\n\r\nconst useFollowJobList = () => {\r\n  const { data: followJobsList } = useAppSelector(selectFollowJobList);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const setFollowJobList = (data: number[]) => {\r\n    dispatch(setFollowJobListAction(data));\r\n  };\r\n\r\n  const resetFollowJobList = () => {\r\n    dispatch(reset());\r\n  };\r\n\r\n  return {\r\n    followJobsList,\r\n    setFollowJobList,\r\n    resetFollowJobList\r\n  };\r\n};\r\n\r\nexport default useFollowJobList;\r\n","import React from 'react';\nimport { useAppDispatch, useAppSelector } from 'src/redux/hooks';\nimport { selectJob, setItemDetail as setItemDetailAction } from '../jobSlice';\nimport { Job } from '../model';\n\nconst useJob = () => {\n  const { itemDetail } = useAppSelector(selectJob);\n  const dispatch = useAppDispatch();\n\n  const setItemDetail = (data: Partial<Job>) => {\n    dispatch(setItemDetailAction(data));\n  };\n\n  return {\n    itemDetail,\n    setItemDetail\n  };\n};\n\nexport default useJob;\n","import { AxiosError } from 'axios';\r\nimport { useQuery } from 'react-query';\r\nimport { PaginationType, ResponseData } from 'src/common/http-request';\r\nimport { FollowJobType, Job } from '../model';\r\nimport { FollowJobService } from '../jobService';\r\nimport { useApp } from 'src/modules/app/hooks';\r\nimport { Company } from 'src/modules/users/model';\r\nimport useFollowJobList from 'src/modules/jobs/hooks/useFollowJobList';\r\nimport { useEffect } from 'react';\r\n\r\nconst useQueryFollowJobs = (params?) => {\r\n  const { isEmployee } = useApp();\r\n  const { setFollowJobList } = useFollowJobList();\r\n  const { data, isLoading, refetch } = useQuery<\r\n    ResponseData<PaginationType<FollowJobType[]>>,\r\n    AxiosError<ResponseData<FollowJobType[]>>\r\n  >(\r\n    ['get-FollowJobs', params],\r\n    () =>\r\n      FollowJobService.get({ params }).then((res) => {\r\n        if (res.data?.meta?.itemCount) {\r\n          const idList: number[] = res.data?.items?.map(\r\n            (item: FollowJobType) => item.postId\r\n          );\r\n          setFollowJobList(idList);\r\n        }\r\n        return res;\r\n      }),\r\n    {\r\n      keepPreviousData: true,\r\n      retry: 1,\r\n      refetchOnWindowFocus: false,\r\n      enabled: isEmployee\r\n    }\r\n  );\r\n\r\n  return {\r\n    jobFollow: data?.data?.items,\r\n    totalPages: data?.data?.meta?.totalPages,\r\n    isLoading,\r\n    refetch\r\n  };\r\n};\r\n\r\nexport default useQueryFollowJobs;\r\n","import { AxiosError } from 'axios';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { useApp } from 'src/modules/app/hooks';\nimport { User } from '../model';\nimport { SetProfile } from '../userService';\n\nconst useMutateUserData = () => {\n  const queryClient = useQueryClient();\n  const { toast } = useApp();\n  const mutationFunction = SetProfile.create;\n  const { mutate: onSaveData, isLoading } = useMutation<\n    ResponseData<User>,\n    AxiosError<ResponseData<User>>,\n    User\n  >(mutationFunction, {\n    onSuccess: (res) => {\n      if (res.status === 200) {\n        queryClient.invalidateQueries('get-Profile');\n        toast.success({ massage: res.message });\n      } else {\n        toast.error({ massage: res.message });\n      }\n    },\n    onError: (error) => {\n      toast.error({ massage: error.response.data.message });\n    }\n  });\n  return {\n    onSaveData,\n    isLoading\n  };\n};\n\nexport default useMutateUserData;\n","import { AxiosError } from 'axios';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { useApp } from 'src/modules/app/hooks';\nimport { Company } from '../model';\nimport { SetCompany } from '../userService';\n\nconst useMutateCompany = () => {\n  const queryClient = useQueryClient();\n  const { toast } = useApp();\n  const mutationFunction = SetCompany.create;\n  const { mutate: onSaveData, isLoading } = useMutation<\n    ResponseData<Company>,\n    AxiosError<ResponseData<Company>>,\n    Company\n  >(mutationFunction, {\n    onSuccess: (res) => {\n      if (res.status === 200) {\n        queryClient.invalidateQueries('get-Company');\n        toast.success({ massage: res.message });\n      } else {\n        toast.error({ massage: res.message });\n      }\n    },\n    onError: (error) => {\n      toast.error({ massage: error.response.data.message });\n    }\n  });\n  return {\n    onSaveData,\n    isLoading\n  };\n};\n\nexport default useMutateCompany;\n","import { Box, Button, Grid } from '@mui/material';\r\nimport { useForm } from 'react-hook-form';\r\nimport DatePicker from 'src/components/DatePicker';\r\nimport FormControl from 'src/components/FormControl';\r\nimport SelectInput from 'src/components/SelectInput';\r\nimport { Company, User } from '../../model';\r\nimport {\r\n  CAREER_FIELDS,\r\n  GENDER,\r\n  ISMARRIED,\r\n  ISMARRIED_OPTION,\r\n  PROFESSION\r\n} from 'src/constants/option';\r\nimport dayjs from 'dayjs';\r\nimport useMutateUserData from '../../hooks/useMutateUserHook';\r\nimport useMutateCompany from '../../hooks/useMutateCompany';\r\nimport TextField from 'src/components/TextField';\r\nimport { toInputDateString, toOutputDateString } from 'src/utils/formatData';\r\nimport ButtonGroup from 'src/components/ButtonGroup';\r\nimport { useApp } from 'src/modules/app/hooks';\r\nimport { setUser } from 'src/modules/app/appSlice';\r\nimport Autocomplete from 'src/components/Autocomplete';\r\n\r\nexport function UserForm(props) {\r\n  const { isEmployee } = useApp();\r\n  const { close, user } = props;\r\n  const { onSaveData: onSaveUser } = useMutateUserData();\r\n\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm<User>({\r\n    defaultValues: {\r\n      ...user,\r\n      dob: toInputDateString(user.dob as string, 'DD-MM-YYYY'),\r\n      sex: GENDER.find((item) => item.label === user.sex)?.value,\r\n      isMarried: user.isMarried ? 'Đã kết hôn' : 'Độc thân'\r\n    }\r\n  });\r\n\r\n  const handleSaveProfile = async (data) => {\r\n    const formattedDob = toOutputDateString(data.dob);\r\n    const isMarried = data.isMarried === 'Đã kết hôn' ? '1' : '0';\r\n    const newData = { ...data, dob: formattedDob, isMarried: isMarried };\r\n    onSaveUser(newData);\r\n    setUser(newData);\r\n    close();\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <Grid container spacing={3} mb={4}>\r\n        <Grid item xs={12} sm={6}>\r\n          <FormControl\r\n            element={<TextField />}\r\n            control={control}\r\n            errors={errors}\r\n            fullWidth\r\n            id=\"name\"\r\n            label=\"Họ và tên\"\r\n            name=\"name\"\r\n            required\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <FormControl\r\n            element={<TextField />}\r\n            control={control}\r\n            errors={errors}\r\n            disabled\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            required\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <FormControl\r\n            element={<TextField />}\r\n            control={control}\r\n            errors={errors}\r\n            fullWidth\r\n            id=\"phone\"\r\n            label=\"Số điện thoại\"\r\n            name=\"phone\"\r\n            pattern=\"phone\"\r\n            required\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <FormControl\r\n            element={<TextField />}\r\n            control={control}\r\n            errors={errors}\r\n            fullWidth\r\n            id=\"address\"\r\n            label=\"Địa chỉ\"\r\n            name=\"address\"\r\n            multiline\r\n            required\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <FormControl\r\n            element={<DatePicker maxDate={dayjs()} />}\r\n            control={control}\r\n            errors={errors}\r\n            fullWidth\r\n            id=\"dob\"\r\n            label=\"Ngày sinh\"\r\n            name=\"dob\"\r\n            required\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <FormControl\r\n            element={<SelectInput />}\r\n            options={GENDER}\r\n            control={control}\r\n            errors={errors}\r\n            fullWidth\r\n            id=\"sex\"\r\n            label=\"Giới tính\"\r\n            name=\"sex\"\r\n            required\r\n          />\r\n        </Grid>\r\n        {isEmployee && (\r\n          <Grid item xs={12} sm={6}>\r\n            <FormControl\r\n              element={<SelectInput />}\r\n              options={ISMARRIED_OPTION}\r\n              control={control}\r\n              errors={errors}\r\n              fullWidth\r\n              id=\"isMarried\"\r\n              label=\"Tình trạng hôn nhân\"\r\n              name=\"isMarried\"\r\n              required\r\n            />\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n      <ButtonGroup\r\n        handleSubmit={handleSubmit(handleSaveProfile)}\r\n        handleCancel={() => close()}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport function CompanyForm(props) {\r\n  const { close, user } = props;\r\n  const { onSaveData: onSaveCompany } = useMutateCompany();\r\n\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm<Company>({\r\n    defaultValues: {\r\n      ...user\r\n    }\r\n  });\r\n\r\n  const handleSaveCompany = (data) => {\r\n    onSaveCompany(data);\r\n    close();\r\n  };\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <Grid container spacing={3} mb={4}>\r\n        <Grid item xs={12}>\r\n          <FormControl\r\n            element={<TextField />}\r\n            control={control}\r\n            errors={errors}\r\n            fullWidth\r\n            id=\"companyName\"\r\n            label=\"Tên công ty\"\r\n            name=\"companyName\"\r\n            multiline\r\n            required\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <FormControl\r\n            element={<TextField />}\r\n            control={control}\r\n            errors={errors}\r\n            fullWidth\r\n            id=\"taxCode\"\r\n            label=\"Mã số thuế\"\r\n            name=\"taxCode\"\r\n            required\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <FormControl\r\n            element={<TextField />}\r\n            control={control}\r\n            errors={errors}\r\n            fullWidth\r\n            id=\"companyLocation\"\r\n            label=\"Địa chỉ\"\r\n            name=\"companyLocation\"\r\n            required\r\n            multiline\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <FormControl\r\n            element={\r\n              <Autocomplete\r\n                size=\"small\"\r\n                freeSolo={true}\r\n                options={CAREER_FIELDS}\r\n                autoComplete\r\n                autoSelect\r\n                autoHighlight\r\n                multiple={false}\r\n                defaultValue={user?.careerField}\r\n              />\r\n            }\r\n            control={control}\r\n            errors={errors}\r\n            fullWidth\r\n            name=\"careerField\"\r\n            label=\"Lĩnh vực\"\r\n            required\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <FormControl\r\n            element={<TextField />}\r\n            control={control}\r\n            errors={errors}\r\n            fullWidth\r\n            multiline\r\n            maxRows={6}\r\n            minRows={3}\r\n            id=\"description\"\r\n            label=\"Mô tả công ty\"\r\n            name=\"description\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <ButtonGroup\r\n        handleSubmit={handleSubmit(handleSaveCompany)}\r\n        handleCancel={() => close()}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Container,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  styled,\r\n  Divider\r\n} from '@mui/material';\r\nimport AutoFixHighOutlinedIcon from '@mui/icons-material/AutoFixHighOutlined';\r\nimport { CompanyForm, UserForm } from './EditForm';\r\nimport EditButton from 'src/components/EditButton';\r\nimport { isMobile } from 'src/constants/reponsive';\r\n\r\nexport const InputLabel = styled(Grid)(({ theme }) => ({\r\n  fontFamily: theme.typography.fontFamily,\r\n  fontWeight: 700,\r\n  minHeight: 50,\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: isMobile ? 'center' : 'left'\r\n}));\r\n\r\nexport const InputData = styled(Grid)(({ theme }) => ({\r\n  fontFamily: theme.typography.fontFamily,\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: isMobile ? 'center' : 'left'\r\n}));\r\n\r\nexport const InfoGrid = (props) => {\r\n  const { item } = props;\r\n  const [more, setMore] = useState(false);\r\n  return (\r\n    <Grid container sx={{ borderTop: 1, borderColor: 'grey.300' }}>\r\n      {item.label !== 'Giới thiệu doanh nghiệp' && (\r\n        <>\r\n          <InputLabel item xs={12} sm={6} md={4}>\r\n            {item.label}\r\n          </InputLabel>\r\n          <InputData item xs={12} sm={6} md={8}>\r\n            <Typography lineHeight={2}>{item.value}</Typography>\r\n          </InputData>\r\n        </>\r\n      )}\r\n      {item.label === 'Giới thiệu doanh nghiệp' && item.value && (\r\n        <>\r\n          <InputLabel item xs={12}>\r\n            {item.label}\r\n          </InputLabel>\r\n          <InputData item xs={12}>\r\n            <Typography\r\n              lineHeight={2}\r\n              sx={{\r\n                overflow: 'hidden',\r\n                textOverflow: 'ellipsis',\r\n                display: '-webkit-box',\r\n                WebkitLineClamp: more ? 100 : 3,\r\n                WebkitBoxOrient: 'vertical'\r\n              }}\r\n            >\r\n              {item.value}\r\n            </Typography>\r\n          </InputData>\r\n          <Button\r\n            onClick={() => {\r\n              setMore((prev) => !prev);\r\n            }}\r\n            sx={{ mx: 'auto' }}\r\n            color=\"secondary\"\r\n          >\r\n            {more ? 'Thu gọn' : 'Đọc thêm'}\r\n          </Button>\r\n        </>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default function InfoField(props) {\r\n  const { user, data, title, editIcon, openForm } = props;\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleEdit = () => setOpen(true);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleData = (value) => (value === null ? null : value);\r\n\r\n  const myForm =\r\n    openForm === 'User' ? (\r\n      <UserForm close={handleClose} user={user} />\r\n    ) : (\r\n      <CompanyForm close={handleClose} user={user} />\r\n    );\r\n\r\n  return (\r\n    <Container sx={{ paddingX: 2 }}>\r\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Box display=\"flex\">\r\n          {editIcon}\r\n          <Box>\r\n            <Typography\r\n              fontWeight={700}\r\n              sx={{\r\n                fontSize: { md: 22, xs: 18 },\r\n                lineHeight: 2\r\n              }}\r\n            >\r\n              {title}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        <EditButton onClick={handleEdit} />\r\n        <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          fullWidth\r\n          maxWidth={'md'}\r\n          fullScreen={isMobile}\r\n        >\r\n          <DialogTitle\r\n            sx={{\r\n              textAlign: 'center',\r\n              fontWeight: 700,\r\n              fontSize: { md: '1.3rem', xs: '1rem' }\r\n            }}\r\n          >\r\n            {title}\r\n          </DialogTitle>\r\n          <Divider />\r\n          <DialogContent>{myForm}</DialogContent>\r\n        </Dialog>\r\n      </Box>\r\n      <Box sx={{ mt: 1 }}>\r\n        {data.map((item, index) => (\r\n          <InfoGrid item={item} key={index} />\r\n        ))}\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import ApartmentIcon from '@mui/icons-material/Apartment';\r\nimport ArticleIcon from '@mui/icons-material/Article';\r\nimport DateRangeIcon from '@mui/icons-material/DateRange';\r\nimport EventAvailableIcon from '@mui/icons-material/EventAvailable';\r\nimport GppGoodIcon from '@mui/icons-material/GppGood';\r\nimport HowToRegIcon from '@mui/icons-material/HowToReg';\r\nimport PeopleIcon from '@mui/icons-material/People';\r\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\r\nimport WcIcon from '@mui/icons-material/Wc';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Typography\r\n} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport { TextParser } from 'src/components/TextEditor';\r\nimport { Job } from '../model';\r\nimport CakeIcon from '@mui/icons-material/Cake';\r\nimport dayjs from 'dayjs';\r\n\r\nconst CommonInfo = styled(Box)(({ theme }) => ({\r\n  padding: 10,\r\n  backgroundColor: '#F0FFF0',\r\n  color: theme.colors.alpha.black[100],\r\n  borderRadius: 6\r\n}));\r\nconst AvatarWrapper = styled(Avatar)(({ theme }) => ({\r\n  backgroundColor: '#e6f6e6',\r\n  color: '#006400'\r\n}));\r\n\r\ntype Props = {\r\n  data: Partial<Job>;\r\n};\r\nconst JobContent: React.FC<Props> = ({ data }) => {\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h3\" fontSize={22} noWrap marginBottom={2.5}>\r\n        Thông tin chung\r\n      </Typography>\r\n      <CommonInfo>\r\n        <Grid container sx={{ my: 0.5 }}>\r\n          <Grid item xs={12} md={4}>\r\n            <ListItem>\r\n              <ListItemAvatar>\r\n                <AvatarWrapper>\r\n                  <DateRangeIcon />\r\n                </AvatarWrapper>\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={dayjs(data.createAt).format('YYYY-MM-DD')}\r\n                secondary=\"Ngày đăng\"\r\n              />\r\n            </ListItem>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <ListItem>\r\n              <ListItemAvatar>\r\n                <AvatarWrapper>\r\n                  <EventAvailableIcon />\r\n                </AvatarWrapper>\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={`${data.trialPeriod} tháng`}\r\n                secondary=\"Thời gian thử việc\"\r\n              />\r\n            </ListItem>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <ListItem>\r\n              <ListItemAvatar>\r\n                <AvatarWrapper>\r\n                  <HowToRegIcon />\r\n                </AvatarWrapper>\r\n              </ListItemAvatar>\r\n              <ListItemText primary={data.positionLevel} secondary=\"Cấp bậc\" />\r\n            </ListItem>\r\n          </Grid>\r\n        </Grid>\r\n        <Divider sx={{ width: '90%', margin: 'auto', my: 1 }} />\r\n\r\n        <Grid container sx={{ my: 0.5 }}>\r\n          <Grid item xs={12} md={4}>\r\n            <ListItem>\r\n              <ListItemAvatar>\r\n                <AvatarWrapper>\r\n                  <PeopleIcon />\r\n                </AvatarWrapper>\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={data.numberOfVacancies}\r\n                secondary=\"Số lượng tuyển\"\r\n              />\r\n            </ListItem>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <ListItem>\r\n              <ListItemAvatar>\r\n                <AvatarWrapper>\r\n                  <ArticleIcon />\r\n                </AvatarWrapper>\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={data.employmentType}\r\n                secondary=\"Hình thức làm việc\"\r\n              />\r\n            </ListItem>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <ListItem>\r\n              <ListItemAvatar>\r\n                <AvatarWrapper>\r\n                  <WcIcon />\r\n                </AvatarWrapper>\r\n              </ListItemAvatar>\r\n              <ListItemText primary={data.sex} secondary=\"Giới tính\" />\r\n            </ListItem>\r\n          </Grid>\r\n        </Grid>\r\n        <Divider sx={{ width: '90%', margin: 'auto', my: 1 }} />\r\n\r\n        <Grid container sx={{ my: 0.5 }}>\r\n          <Grid item xs={12} md={4}>\r\n            <ListItem>\r\n              <ListItemAvatar>\r\n                <AvatarWrapper>\r\n                  <GppGoodIcon />\r\n                </AvatarWrapper>\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={data.degree}\r\n                secondary=\"Yêu cầu bằng cấp\"\r\n              />\r\n            </ListItem>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <ListItem>\r\n              <ListItemAvatar>\r\n                <AvatarWrapper>\r\n                  <ApartmentIcon />\r\n                </AvatarWrapper>\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={data.experience}\r\n                secondary=\"Yêu cầu kinh nghiệm\"\r\n              />\r\n            </ListItem>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <ListItem>\r\n              <ListItemAvatar>\r\n                <AvatarWrapper>\r\n                  <CakeIcon />\r\n                </AvatarWrapper>\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={`${data.minAge} - ${data.maxAge}`}\r\n                secondary=\"Độ tuổi\"\r\n              />\r\n            </ListItem>\r\n          </Grid>\r\n        </Grid>\r\n      </CommonInfo>\r\n      <Typography variant=\"h3\" fontSize={22} noWrap marginTop={2.5}>\r\n        Kĩ năng bắt buộc\r\n      </Typography>\r\n      <Typography marginTop={2.5}>\r\n        {data?.requiredSkills?.split(',')?.join(', ')}\r\n      </Typography>\r\n      <Typography variant=\"h3\" fontSize={22} noWrap marginTop={2.5}>\r\n        Mô tả công việc\r\n      </Typography>\r\n      <Box>\r\n        <TextParser content={data.jobDescription} />\r\n      </Box>\r\n      <Typography variant=\"h3\" fontSize={22} noWrap marginTop={2.5}>\r\n        Yêu cầu công việc\r\n      </Typography>\r\n      <Box>\r\n        <TextParser content={data.jobRequirements} />\r\n      </Box>\r\n      <Typography variant=\"h3\" fontSize={22} noWrap marginTop={2.5}>\r\n        Quyền lợi\r\n      </Typography>\r\n      <Box>\r\n        <TextParser content={data.benefits} />\r\n      </Box>\r\n      <Typography variant=\"h3\" fontSize={22} noWrap marginTop={2.5}>\r\n        Địa điểm làm việc\r\n      </Typography>\r\n      <Grid container alignItems={'center'} marginTop={2}>\r\n        <LocationOnIcon color=\"primary\" sx={{ marginRight: 1 }} />\r\n        <Box>{data.contactAddress}</Box>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default JobContent;\r\n","import { Card, CardContent, Grid, Tab, Tabs } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { ChangeEvent, useState } from 'react';\nimport CustomContainer from 'src/components/CustomContainer';\nimport { useApp } from 'src/modules/app/hooks';\nimport JobContent from 'src/modules/jobs/components/JobContent';\nimport useJob from 'src/modules/jobs/hooks/useJob';\n\nconst TabsWrapper = styled(Tabs)(\n  () => `\n    .MuiTabs-scrollableX {\n      overflow-x: auto !important;\n    }, \n`\n);\n\nfunction TabContent() {\n  const { itemDetail } = useJob();\n  const { isEmployer } = useApp();\n  const [currentTab, setCurrentTab] = useState<string>('info_job');\n  const tabs = [\n    { value: 'info_job', label: 'Chi tiết tuyển dụng', show: true },\n    { value: 'info_company', label: 'Thông tin công ty', show: isEmployer }\n  ];\n\n  const handleTabsChange = (event: ChangeEvent<{}>, value: string): void => {\n    setCurrentTab(value);\n  };\n\n  return (\n    <CustomContainer sx={{ py: 3, mb: 2 }}>\n      <JobContent data={itemDetail} />\n    </CustomContainer>\n  );\n}\n\nexport default TabContent;\n","import {\n  RoundOneCheck,\n  cvAnalysist,\n  extractCommonInfo,\n  extractSkill,\n  translate\n} from 'src/GPT/roles';\nimport { checkIsJSON, preProcessText } from './formatData';\nimport sendChatGPTRequest, { getEmbedding } from 'src/GPT/sendChatGPTRequest';\nimport { getFileByUrl } from 'src/common/firebaseService';\nimport pdfToText from 'react-pdftotext';\nimport { User } from 'src/modules/users/model';\nimport { AttachedDocument, OnlineProfile } from 'src/modules/jobProfile/model';\nimport { Application } from 'src/modules/application/model';\nimport { Job } from 'src/modules/jobs/model';\nimport { compareDegrees, compareExperience } from './compareEnum';\nimport dayjs from 'dayjs';\nimport { dot } from 'mathjs';\nimport { loadKeywords } from './keywords';\n\nexport const FAIL_SCORE = 0; // < 30\nexport const LOW_SCORE = 30; // 30 - 80\nexport const NORMAL_SCORE = 80; // 80 - 110\nexport const HIGH_SCORE = 110; // higher than 110\n\nexport const ratingStar = (score: number) => {\n  return score >= HIGH_SCORE\n    ? 3\n    : score >= NORMAL_SCORE\n    ? 2\n    : score >= LOW_SCORE\n    ? 1\n    : 0;\n};\nexport type ProfileTypeInfo = {\n  personal_information: User;\n  online_profile?: OnlineProfile;\n  attached_document?: AttachedDocument;\n  application: Partial<Omit<Application, 'applicationType'>> & {\n    id: number;\n    applicationType: string;\n    matchingScore: number;\n  };\n};\n\nexport type ProfileApplicationType = {\n  id: number;\n  employee_Profile: ProfileTypeInfo;\n  employer_Requirement: Partial<Job>;\n};\n\nconst fetchAndProcessCVData = async (dataToAnalyze, dataProcessor) => {\n  return Promise.all(\n    dataToAnalyze.map(async (data) => ({\n      ...data,\n      employee_Profile: await dataProcessor(data.employee_Profile)\n    }))\n  );\n};\n\nconst filterAndMapProfiles = (dataList) => {\n  return dataList\n    .filter((data) => data.employee_Profile)\n    .map(({ employee_Profile, employer_Requirement }) => ({\n      employee_Profile,\n      employer_Requirement\n    }));\n};\n\nconst preprocessText = (text) => {\n  if (!text) return null;\n\n  const preprocessedText = text\n    .replace(/[^\\w\\s,+()@.:\\/-]/g, '')\n    .replace(/\\s+/g, ' ');\n\n  return preprocessedText ? preprocessedText : null;\n};\n\nconst findMatchedProfile = (\n  profileId,\n  cvEnclosedProfileList,\n  attachProfileList\n) => {\n  return (\n    cvEnclosedProfileList.find(\n      (cvItem) => cvItem.employee_Profile.application.id === profileId\n    ) ||\n    attachProfileList.find(\n      (attachItem) => attachItem.employee_Profile.application.id === profileId\n    )\n  );\n};\n\nexport const preprocessJobData = (job) => ({\n  ...job,\n  jobDescription: preProcessText(job?.jobDescription),\n  jobRequirements: preProcessText(job?.jobRequirements),\n  benefits: preProcessText(job?.benefits)\n});\n\nexport const preprocessProfileData = (profile) => ({\n  ...profile,\n  personal_information: {\n    dob: profile?.employee?.user?.dob,\n    sex: profile?.employee?.user?.sex\n  }\n});\n\nexport const matchProfileById = (\n  analyzedProfile,\n  cvEnclosedProfileList,\n  attachProfileList\n) => {\n  return analyzedProfile.map((item) => {\n    const foundItem = findMatchedProfile(\n      item.id,\n      cvEnclosedProfileList,\n      attachProfileList\n    );\n    if (foundItem) return { ...item, ...foundItem };\n    return item;\n  });\n};\n\nexport const firstRoundForGeneralInfo = (job, profile) => {\n  console.log('profile', profile);\n\n  const { personal_information, online_profile, attached_document } = profile;\n\n  const birthday = dayjs(personal_information?.dob, 'YYYY-MM-DD').isValid()\n    ? dayjs(personal_information?.dob, 'YYYY-MM-DD')\n    : dayjs(personal_information?.dob, 'DD-MM-YYYY');\n  const age = dayjs().year() - birthday.year();\n\n  if (\n    (job?.sex !== null && job?.sex !== personal_information?.sex) ||\n    job?.minAge > age ||\n    job?.maxAge < age\n  )\n    return -10;\n\n  if (online_profile && !isProfileQualified(online_profile, job)) return -10;\n\n  if (attached_document && !isProfileQualified(attached_document, job))\n    return -10;\n\n  return 30;\n};\n\nconst isProfileQualified = (profile, job) => {\n  const { profession, degree, experience } = profile;\n\n  const employeeProfessionList = profession.split(',');\n  const jobProfessionList = job.profession.split(',');\n  if (!employeeProfessionList.some((item) => jobProfessionList.includes(item)))\n    return false;\n\n  if (compareDegrees(degree, job?.degree) < 0) return false;\n\n  if (compareExperience(experience, job?.experience) < 0) return false;\n\n  return true;\n};\n\nconst handleRoundOne = async (\n  resetMatchingScoreList: ProfileApplicationType[],\n  setAnalyzedProfile: (data: ProfileApplicationType[]) => Promise<void>,\n  handleAnalyzeResult: (result: any[]) => Promise<void>,\n  handleGoToAnalyzeResult: (signal: boolean, resultData: any) => void\n) => {\n  console.log('Start round 1');\n  const attachedDocumentDataList = resetMatchingScoreList.filter(\n    (item) => item.employee_Profile.attached_document?.CV\n  );\n  const cvEnclosedDataList = resetMatchingScoreList.filter(\n    (item) =>\n      !item.employee_Profile?.online_profile &&\n      !item.employee_Profile.attached_document\n  );\n\n  const attachedDocumentList = await fetchAndProcessCVData(\n    attachedDocumentDataList,\n    readCVData\n  );\n  const cvEnclosedList = await fetchAndProcessCVData(\n    cvEnclosedDataList,\n    readEnclosedCVData\n  );\n\n  const attachProfileList = filterAndMapProfiles(attachedDocumentList);\n  const cvEnclosedProfileList = filterAndMapProfiles(cvEnclosedList);\n\n  const cvContentProfile = matchProfileById(\n    resetMatchingScoreList,\n    cvEnclosedProfileList,\n    attachProfileList\n  );\n\n  const extractPromise = async () => {\n    return Promise.all(\n      cvEnclosedProfileList.map(async (item) => {\n        const result = await sendChatGPTRequest(extractCommonInfo, [\n          item?.employee_Profile?.application?.CV\n        ]);\n\n        const validResult = result.filter((res) => checkIsJSON(res));\n\n        const extractedResult = validResult.map((res) => {\n          const jsonRes = JSON.parse(res);\n          return {\n            employee_Profile: jsonRes,\n            employer_Requirement: {\n              profession: item?.employer_Requirement?.profession,\n              degree: item?.employer_Requirement?.degree,\n              experience: item?.employer_Requirement?.experience\n            },\n            id: item?.employee_Profile?.application?.id\n          };\n        });\n        // result[0] + '\\n -id: ' + item?.employee_Profile?.application?.id;\n        return extractedResult;\n      })\n    );\n  };\n\n  const commonInfo = await extractPromise();\n\n  const messagesToSend = commonInfo.map((item) => {\n    console.log('item', item[0]?.employer_Requirement?.profession);\n\n    return `\n    - application_id: ${item[0]?.id}\n    - Yêu cầu tuyển dụng: ngành nghề: [${item[0]?.employer_Requirement?.profession}]; trình độ: ${item[0]?.employer_Requirement?.degree}; kinh nghiệm: ${item[0]?.employer_Requirement?.experience};\n    - Thông tin hồ sơ xin việc: ngành nghề: ${item[0]?.employee_Profile?.profession}; trình độ ${item[0]?.employee_Profile?.degree}; kinh nghiệm ${item[0]?.employee_Profile?.experience}\n    `;\n  });\n\n  const response = await sendChatGPTRequest(\n    RoundOneCheck,\n    messagesToSend\n  ).catch(() => []);\n  console.log('response', response);\n\n  const result = Array.isArray(response)\n    ? response?.filter((item) => checkIsJSON(item))\n    : [];\n  setAnalyzedProfile(cvContentProfile);\n  handleGoToAnalyzeResult(true, result);\n};\n\nconst handleRoundTwo = async (\n  passRoundProfiles,\n  handleAnalyzeResult: (result: any[]) => Promise<void>\n) => {\n  console.log('Start round 2');\n\n  const dataSendToGPT = passRoundProfiles.map((item) => {\n    let profile;\n    if (item?.employee_Profile?.online_profile) {\n      const onlineProfile = item?.employee_Profile?.online_profile;\n      profile = {\n        jobTitle: onlineProfile.jobTitle,\n        skills: onlineProfile.skills,\n        another_degree: (onlineProfile.another_degree || []).map(\n          (degree) => degree.Name\n        ),\n        education_informations: (\n          onlineProfile.education_informations || []\n        ).map((education) => education.degreeName),\n        work_experiences: (onlineProfile.work_experiences || []).map(\n          (experience) => ({\n            jobTitle: experience?.jobTitle,\n            jobDescription: experience?.jobDescription\n          })\n        )\n      };\n    } else if (item?.employee_Profile?.attached_document) {\n      const attachedDocument = item?.employee_Profile?.attached_document;\n      profile = {\n        skills: attachedDocument.skills,\n        CV: attachedDocument.CV\n      };\n    } else {\n      profile = item?.employee_Profile?.application.CV;\n    }\n    return {\n      employer_Requirement: {\n        requiredSkills: item.employer_Requirement.requiredSkills\n      },\n      employee_Profile: {\n        profile: profile,\n        application_id: item?.employee_Profile?.application.application_id\n      }\n    };\n  });\n\n  console.log(dataSendToGPT);\n\n  const skillList = await Promise.all(\n    dataSendToGPT?.map(async (item) => {\n      const extractRequiredSkillList = dataSendToGPT?.map(\n        (data) => data?.employee_Profile?.profile\n      );\n      const skillsList = await sendChatGPTRequest(\n        extractSkill,\n        extractRequiredSkillList,\n        null,\n        { '58': 5, '60': 5 }\n      );\n      return {\n        id: item.employee_Profile.application_id,\n        employee_Profile: loadKeywords(skillsList)?.split(',') || '',\n        employer_Requirement:\n          item.employer_Requirement.requiredSkills.split(',') || ''\n      };\n    })\n  );\n\n  const responses = (await getEmbedding(skillList)) || [];\n\n  const result = responses?.map((item) => {\n    const matchingSkills = item?.employer_Requirement?.filter((require) =>\n      item?.employee_Profile?.some((skills) => {\n        if (skills?.result?.length === require?.result?.length) {\n          return dot(skills.result, require.result) > 0.6;\n        } else {\n          console.error('Vectors must have the same number of dimensions');\n          return false;\n        }\n      })\n    );\n    const matchPercentage = matchingSkills\n      ? (100 / item?.employer_Requirement?.length) * matchingSkills.length\n      : 0;\n    return {\n      id: item.id,\n      result: matchPercentage\n    };\n  });\n\n  handleAnalyzeResult(result.map((res) => JSON.stringify(res)));\n};\n\nconst handleRoundThree = async (\n  passRoundProfiles,\n  handleAnalyzeResult: (result: any[]) => Promise<void>\n) => {\n  console.log('Start round 3');\n\n  try {\n    // Step 1: Retrieve keywords for profiles\n    const profilesWithKeywords = await Promise.all(\n      passRoundProfiles.map(async (item) => {\n        if (\n          item?.employee_Profile?.application?.applicationType !== 'Nộp nhanh'\n        ) {\n          return item;\n        } else {\n          const keywords = await loadKeywords(\n            await sendChatGPTRequest(cvAnalysist, [\n              item?.employee_Profile?.application?.CV\n            ])\n          );\n          return {\n            ...item,\n            employee_Profile: {\n              application: {\n                keywords\n              }\n            }\n          };\n        }\n      })\n    );\n\n    console.log('Profiles with keywords:', profilesWithKeywords);\n\n    // Step 2: Calculate similarity scores between profiles and job requirements\n    const response = await getEmbedding(\n      profilesWithKeywords.map((item) => ({\n        id: item.id,\n        employee_Profile:\n          item?.employee_Profile?.application.keywords?.split(','),\n        employer_Requirement: item?.employer_Requirement?.keywords?.split(',')\n      }))\n    );\n\n    // Step 3: Analyze results and provide hints\n    const resultList = await Promise.all(\n      response?.map(async (item) => {\n        let score = item?.employee_Profile?.reduce((acc, profile) => {\n          const hasMatch = item?.employer_Requirement?.some((requirement) => {\n            const cosineSimilarity = dot(profile.result, requirement.result);\n            return cosineSimilarity > 0.6;\n          });\n          return hasMatch ? acc + 5 : acc;\n        }, 0);\n\n        const lackOfSkillsList =\n          item?.employer_Requirement\n            ?.filter(\n              (require) =>\n                !item?.employee_Profile?.some(\n                  (skills) => dot(skills.result, require.result) > 0.6\n                )\n            )\n            ?.map((require) => require.word) || [];\n\n        const hints =\n          lackOfSkillsList.length > 0\n            ? `Để tăng tỉ lệ đậu bạn có thể trang bị thêm kĩ năng: ${[\n                ...new Set(lackOfSkillsList)\n              ]\n                .slice(0, 4)\n                .join(', ')}`\n            : 'Hồ sơ của bạn đã đáp ứng yêu cầu của tin tuyển dụng này';\n\n        return {\n          id: item.id,\n          result: score,\n          hints: hints\n        };\n      })\n    );\n\n    // Step 4: Convert results to list and pass to the handler function\n    const list = resultList.map((result) => JSON.stringify(result));\n    await handleAnalyzeResult(list);\n  } catch (error) {\n    console.error('Error in round 3 analysis:', error);\n    // Handle or log the error appropriately\n  }\n};\n\nexport const fetchDataFromUrl = async (url, type) => {\n  try {\n    const filePath = await getFileByUrl(url);\n    const response = await fetch(filePath);\n    if (!response.ok) {\n      throw new Error('Failed to fetch file');\n    }\n    const blob = await response.blob();\n    return pdfToText(blob);\n  } catch (error) {\n    console.error('Error fetching data:', error);\n    return null;\n  }\n};\n\nexport const readCVData = async (employee_Profile) => {\n  if (employee_Profile?.attached_document) {\n    const text = await fetchDataFromUrl(\n      employee_Profile.attached_document.CV,\n      'attached_document'\n    );\n    const preprocessedText = preprocessText(text);\n\n    return preprocessedText\n      ? {\n          ...employee_Profile,\n          attached_document: {\n            ...employee_Profile.attached_document,\n            CV: preprocessedText\n          }\n        }\n      : null;\n  }\n  return null;\n};\n\nexport const readEnclosedCVData = async (employee_Profile) => {\n  if (\n    employee_Profile?.application?.applicationType === 'Nộp nhanh' &&\n    employee_Profile?.application?.CV\n  ) {\n    const text = await fetchDataFromUrl(\n      employee_Profile.application.CV,\n      'enclosed_CV'\n    );\n    const preprocessedText = preprocessText(text);\n\n    if (preprocessedText) {\n      return {\n        ...employee_Profile,\n        application: { ...employee_Profile.application, CV: preprocessedText }\n      };\n    }\n\n    return employee_Profile;\n  }\n  return null;\n};\n\nexport const review = async ({\n  round,\n  handleAnalyzeResult,\n  setIsAnalyzing,\n  setAnalyzedProfile,\n  passRoundProfiles,\n  resetMatchingScoreList,\n  handleGoToAnalyzeResult\n}: {\n  round: number;\n  handleAnalyzeResult: (result: any[]) => Promise<void>;\n  setIsAnalyzing: (data: boolean) => void;\n  setAnalyzedProfile?: (data: ProfileApplicationType[]) => Promise<void>;\n  passRoundProfiles?: ProfileApplicationType[];\n  resetMatchingScoreList?: ProfileApplicationType[];\n  handleGoToAnalyzeResult?: any;\n}) => {\n  setIsAnalyzing(true);\n\n  switch (round) {\n    case 1:\n      await handleRoundOne(\n        resetMatchingScoreList,\n        setAnalyzedProfile,\n        handleAnalyzeResult,\n        handleGoToAnalyzeResult\n      );\n      break;\n    case 2:\n      await handleRoundTwo(passRoundProfiles, handleAnalyzeResult);\n      break;\n    case 3:\n      await handleRoundThree(passRoundProfiles, handleAnalyzeResult);\n      break;\n    default:\n      break;\n  }\n};\n\nexport const parseResponseJSONData = async (result: any[]) => {\n  return Promise.all(\n    result.map(async (data) => {\n      console.log(data.indexOf('{'));\n\n      if (data?.indexOf('{') >= 0 && data?.lastIndexOf('}') >= 0)\n        return JSON.parse(\n          data.substring(data.indexOf('{'), data.lastIndexOf('}') + 1)\n        );\n    })\n  );\n};\n\nexport const getKeywords = (item) => {\n  return (\n    item?.keywords ||\n    item?.employee?.online_profile?.keywords ||\n    item?.employee?.attached_document?.keywords\n  );\n};\n\nexport const calculateMatchingScore = (\n  profile: any,\n  responses: any[],\n  roundOneFinished: boolean\n) => {\n  const foundItem = responses.find((res) => res?.id === profile?.id);\n  const profileMatchingScore =\n    profile?.employee_Profile?.application?.matchingScore;\n\n  if (foundItem?.result != null) {\n    return (profileMatchingScore || 0) + foundItem.result;\n  } else if (\n    !roundOneFinished &&\n    (profile?.employee_Profile?.online_profile ||\n      profile?.employee_Profile?.attached_document)\n  ) {\n    return firstRoundForGeneralInfo(\n      profile?.employer_Requirement,\n      profile?.employee_Profile\n    );\n  } else {\n    return profileMatchingScore;\n  }\n};\n","import { Degree, Experience } from 'src/constants/enum';\nimport { findObjectKey } from './formatData';\n\nexport function compareExperience(\n  employee: string,\n  requirement: string\n): number {\n  // Chuyển đổi chuỗi sang giá trị enum tương ứng\n  const employeeIndex = Object.values(Experience).indexOf(\n    employee as Experience\n  );\n  const requirementIndex = Object.values(Experience).indexOf(\n    employee as Experience\n  );\n  // So sánh giá trị enum\n  if (employeeIndex > requirementIndex) {\n    return -1; // idx cang lon trinh do cang thap\n  } else return 1;\n}\n\nexport function compareDegrees(employee: string, requirement: string): number {\n  const employeeIndex = Object.values(Degree).indexOf(employee as Degree);\n  const requirementIndex = Object.values(Degree).indexOf(requirement as Degree);\n  // So sánh giá trị enum\n  if (employeeIndex > requirementIndex) {\n    return -1; // idx cang lon trinh do cang thap\n  } else return 1; // employee lớn hơn requirement\n}\n","export function rewriteUrl(url) {\n  const Alphabet = {\n    à: 'a',\n    á: 'a',\n    ả: 'a',\n    ã: 'a',\n    ạ: 'a',\n    ă: 'a',\n    ắ: 'a',\n    ằ: 'a',\n    ẳ: 'a',\n    ẵ: 'a',\n    ặ: 'a',\n    â: 'a',\n    ấ: 'a',\n    ầ: 'a',\n    ẩ: 'a',\n    ẫ: 'a',\n    ậ: 'a',\n    đ: 'd',\n    è: 'e',\n    é: 'e',\n    ẻ: 'e',\n    ẽ: 'e',\n    ẹ: 'e',\n    ê: 'e',\n    ế: 'e',\n    ề: 'e',\n    ể: 'e',\n    ễ: 'e',\n    ệ: 'e',\n    ì: 'i',\n    í: 'i',\n    ỉ: 'i',\n    ĩ: 'i',\n    ị: 'i',\n    ò: 'o',\n    ó: 'o',\n    ỏ: 'o',\n    õ: 'o',\n    ọ: 'o',\n    ô: 'o',\n    ố: 'o',\n    ồ: 'o',\n    ổ: 'o',\n    ỗ: 'o',\n    ộ: 'o',\n    ơ: 'o',\n    ớ: 'o',\n    ờ: 'o',\n    ở: 'o',\n    ỡ: 'o',\n    ợ: 'o',\n    ù: 'u',\n    ú: 'u',\n    ủ: 'u',\n    ũ: 'u',\n    ụ: 'u',\n    ư: 'u',\n    ứ: 'u',\n    ừ: 'u',\n    ử: 'u',\n    ữ: 'u',\n    ự: 'u',\n    ỳ: 'y',\n    ý: 'y',\n    ỷ: 'y',\n    ỹ: 'y',\n    ỵ: 'y',\n    À: 'A',\n    Á: 'A',\n    Ả: 'A',\n    Ã: 'A',\n    Ạ: 'A',\n    Ă: 'A',\n    Ắ: 'A',\n    Ằ: 'A',\n    Ẳ: 'A',\n    Ẵ: 'A',\n    Ặ: 'A',\n    Â: 'A',\n    Ấ: 'A',\n    Ầ: 'A',\n    Ẩ: 'A',\n    Ẫ: 'A',\n    Ậ: 'A',\n    Đ: 'D',\n    È: 'E',\n    É: 'E',\n    Ẻ: 'E',\n    Ẽ: 'E',\n    Ẹ: 'E',\n    Ê: 'E',\n    Ế: 'E',\n    Ề: 'E',\n    Ể: 'E',\n    Ễ: 'E',\n    Ệ: 'E',\n    Ì: 'I',\n    Í: 'I',\n    Ỉ: 'I',\n    Ĩ: 'I',\n    Ị: 'I',\n    Ò: 'O',\n    Ó: 'O',\n    Ỏ: 'O',\n    Õ: 'O',\n    Ọ: 'O',\n    Ô: 'O',\n    Ố: 'O',\n    Ồ: 'O',\n    Ổ: 'O',\n    Ỗ: 'O',\n    Ộ: 'O',\n    Ơ: 'O',\n    Ớ: 'O',\n    Ờ: 'O',\n    Ở: 'O',\n    Ỡ: 'O',\n    Ợ: 'O',\n    Ù: 'U',\n    Ú: 'U',\n    Ủ: 'U',\n    Ũ: 'U',\n    Ụ: 'U',\n    Ư: 'U',\n    Ứ: 'U',\n    Ừ: 'U',\n    Ử: 'U',\n    Ữ: 'U',\n    Ự: 'U',\n    Ỳ: 'Y',\n    Ý: 'Y',\n    Ỷ: 'Y',\n    Ỹ: 'Y',\n    Ỵ: 'Y'\n  };\n  const specialCharacter = [\n    '!',\n    '@',\n    '#',\n    '$',\n    '%',\n    '^',\n    '&',\n    '*',\n    '_',\n    '-',\n    '+',\n    '=',\n    '{',\n    '}',\n    '[',\n    ']',\n    '|',\n    '\\\\',\n    ':',\n    ';',\n    '\"',\n    \"'\",\n    '<',\n    '>',\n    ',',\n    '.',\n    '/',\n    '?',\n    ' '\n  ];\n\n  let chuoiKhongDau = '';\n  for (var i = 0; i < url?.length; i++) {\n    if (Alphabet[url[i]]) {\n      chuoiKhongDau += Alphabet[url[i]];\n    } else if (!specialCharacter.includes(url[i])) {\n      // Không thay đổi các khoảng trắng\n      chuoiKhongDau += url[i];\n    } else if (!chuoiKhongDau.endsWith('-')) {\n      chuoiKhongDau += '-';\n    }\n  }\n  return chuoiKhongDau;\n}\n"],"names":["ButtonGroup","props","handleSubmit","handleCancel","_jsxs","Box","display","justifyContent","sx","gap","children","_jsx","Button","onClick","variant","color","width","EditButton","isMobile","useResponsive","borderRadius","xs","md","size","AutoFixHighOutlinedIcon","fontSize","Typography","textTransform","FollowButton","isFollow","isFollowing","setIsFollow","useState","useEffect","id","prev","alignItem","FavoriteIcon","FavoriteBorderIcon","linkStyle","textDecoration","handleMouseEnter","e","currentTarget","style","forwardRef","ref","to","ReactLink","onMouseEnter","onMouseLeave","handleMouseLeave","defaultColor","defaultImage","companyAvatar","companyCover","avatarFormat","acceptTypes","acceptSize","CVFormat","coverImgFormat","ApplicationService","BaseService","CandidateProfilesService","UpdateStatusService","useQueryAttachedDocument","isEmployee","useApp","setProfile","useDocumentHook","isLoggedIn","Boolean","getAccessToken","data","isLoading","isSuccess","refetch","useQuery","AttachedDocumentService","get","retry","failureCount","error","response","status","refetchOnWindowFocus","enabled","attachedDocument","useQueryOnlineProfile","useOnlineProfile","OnlineProfileService","onlineProfile","alignItems","mr","LinearProgress","minWidth","concat","Math","round","value","VisuallyHiddenInput","styled","ButtonWrapper","_ref","theme","backgroundColor","colors","primary","lighter","ChipWrapper","Chip","_ref2","label","onChange","setIsChecked","setUrl","file","setFile","fileUrl","setFileUrl","percent","setPercent","console","log","handleUpload","date","dayjs","Date","format","storageRef","storage","name","uploadTask","uploadBytesResumable","on","snapshot","bytesTransferred","totalBytes","err","getDownloadURL","then","url","ApplicationType","cv_enclosed","component","startIcon","CloudUploadIcon","type","async","removeFileByUrl","event","target","files","accept","marginTop","LinearPercent","onDelete","deleteIcon","DeleteIcon","useMutateApplyJob","toast","mutate","onSaveData","useNavigate","useMutation","create","onSuccess","res","success","massage","message","onError","renderAnalyzeResult","analyzeResult","hints","rating","ratingStar","_Fragment","textAlign","fontWeight","Rating","max","readOnly","flexDirection","mt","AnayzeProfileButton","selectedProfile","job","profileType","setShowResult","showResult","setHintsMessage","user","start","setStart","isAnalyzing","setIsAnalyzing","analyzedProfile","setAnalyzedProfile","passRoundProfiles","setPassOneProfiles","roundOneFinished","setRoundOneFinished","roundTwoFinished","setRoundTwoFinished","roundThreeFinished","setRoundThreeFinished","setAnalyzeResult","goToAnalyzeResult","setGoToAnalyzeResult","signal","resultData","setHints","finishedAll","alertDialog","hideCancelButton","title","handleSetAnalyzedProfile","handleIsAnalyzing","handleGoToAnalyzeResult","handleAnalyzeResult","result","JSON","parse","matchingScore","LOW_SCORE","_analyzedProfile$empl","_analyzedProfile$empl2","employee_Profile","online_profile","attached_document","firstRoundForGeneralInfo","employer_Requirement","_profileData","_profileData$personal","_profileData2","_profileData2$persona","_data$employee_Profil","_data$employee_Profil2","profileData","personal_information","application","CV","applicationType","dob","sex","preprocessJobData","_data$employee_Profil3","_data$employee_Profil4","_data$employee_Profil5","_data$employee_Profil6","keywords","analyzeResultData","stringify","review","resetMatchingScoreList","length","LoadingButton","loading","disabled","GradeIcon","Title","margin","SubTitle","alpha","black","ModalApply","open","onClose","position","company","postId","profile","useProfileHook","isLoadingOnline","isLoadingDocument","online","setOnline","document","setDocument","isChecked","missInfo","setMissInfo","setSelectedProfile","hintsMessage","buttonStyle","px","control","reset","formState","errors","useForm","defaultValues","handleClose","uploadProfile","SuspenseLoader","Dialog","maxWidth","fullWidth","fullScreen","DialogTitle","DialogContent","Grid","container","spacing","item","lg","AddIcon","bgcolor","FormControl","UploadButton","mb","fontStyle","element","TextField","required","pattern","DialogActions","sm","flexWrap","p","columnGap","submitProfile","v4","AvatarWrapper","Avatar","height","objectFit","LabelText","_ref3","ValueText","_ref4","marginLeft","_ref5","_data$employer","_data$employer2","_data$employer3","_data$employer4","_data$employer5","isEmployer","isAdmin","openFormApply","setOpenFormApply","navigate","CustomContainer","pb","src","employer","logo","Link","rewriteUrl","companyName","btoa","userId","toString","jobTitle","PaidIcon","minSalary","maxSalary","wrap","overflow","DateRangeIcon","applicationDeadline","AccessibilityIcon","minAge","maxAge","LocationOnIcon","workAddress","handleOpenFormApply","state","from","window","location","pathname","search","SendIcon","FollowJobButton","onCloseFormApply","CompanyData","companyLocation","careerField","description","CompanyInfoTab","_CompanyData","companyPage","BusinessIcon","lineHeight","alignContent","map","index","InfoGrid","useMutateFollowJobById","queryClient","useQueryClient","onFollowJobById","FollowJobService","jobPosting","invalidateQueries","followJobsList","useFollowJobList","jobList","useJobList","useQueryFollowJobs","jobIds","join","includes","handleToggleFollow","useAppSelector","selectFollowJobList","dispatch","useAppDispatch","setFollowJobList","setFollowJobListAction","resetFollowJobList","useJob","itemDetail","selectJob","setItemDetail","setItemDetailAction","params","_data$data","_data$data2","_data$data2$meta","_res$data","_res$data$meta","meta","itemCount","_res$data2","_res$data2$items","idList","items","keepPreviousData","jobFollow","totalPages","useMutateUserData","mutationFunction","SetProfile","useMutateCompany","SetCompany","UserForm","_GENDER$find","close","onSaveUser","toInputDateString","GENDER","find","isMarried","multiline","DatePicker","maxDate","SelectInput","options","ISMARRIED_OPTION","formattedDob","toOutputDateString","newData","setUser","CompanyForm","onSaveCompany","Autocomplete","freeSolo","CAREER_FIELDS","autoComplete","autoSelect","autoHighlight","multiple","defaultValue","maxRows","minRows","InputLabel","fontFamily","typography","minHeight","InputData","more","setMore","borderTop","borderColor","textOverflow","WebkitLineClamp","WebkitBoxOrient","mx","InfoField","editIcon","openForm","setOpen","myForm","Container","paddingX","handleEdit","Divider","CommonInfo","padding","_data$requiredSkills","_data$requiredSkills$","noWrap","marginBottom","my","ListItem","ListItemAvatar","ListItemText","createAt","secondary","EventAvailableIcon","trialPeriod","HowToRegIcon","positionLevel","PeopleIcon","numberOfVacancies","ArticleIcon","employmentType","WcIcon","GppGoodIcon","degree","ApartmentIcon","experience","CakeIcon","requiredSkills","split","TextParser","content","jobDescription","jobRequirements","benefits","marginRight","contactAddress","Tabs","currentTab","setCurrentTab","py","JobContent","score","fetchAndProcessCVData","dataToAnalyze","dataProcessor","Promise","all","filterAndMapProfiles","dataList","filter","preprocessText","text","preprocessedText","replace","preProcessText","birthday","isValid","age","year","isProfileQualified","profession","employeeProfessionList","jobProfessionList","some","employee","requirement","Object","values","Degree","indexOf","Experience","compareExperience","fetchDataFromUrl","filePath","getFileByUrl","fetch","ok","Error","blob","pdfToText","readCVData","readEnclosedCVData","_employee_Profile$app","_employee_Profile$app2","attachedDocumentDataList","_item$employee_Profil","cvEnclosedDataList","_item$employee_Profil2","attachedDocumentList","cvEnclosedList","attachProfileList","cvEnclosedProfileList","cvContentProfile","matchProfileById","foundItem","findMatchedProfile","profileId","cvItem","attachItem","messagesToSend","_item$employee_Profil3","_item$employee_Profil4","sendChatGPTRequest","extractCommonInfo","checkIsJSON","_item$employer_Requir","_item$employer_Requir2","_item$employer_Requir3","_item$employee_Profil5","_item$employee_Profil6","extractPromise","_item$","_item$$employer_Requi","_item$2","_item$3","_item$3$employer_Requ","_item$4","_item$4$employer_Requ","_item$5","_item$5$employer_Requ","_item$6","_item$6$employee_Prof","_item$7","_item$7$employee_Prof","_item$8","_item$8$employee_Prof","RoundOneCheck","catch","Array","isArray","handleRoundOne","dataSendToGPT","_item$employee_Profil7","_item$employee_Profil9","_item$employee_Profil12","_item$employee_Profil8","skills","another_degree","Name","education_informations","education","degreeName","work_experiences","_item$employee_Profil10","_item$employee_Profil11","application_id","skillList","_loadKeywords","extractRequiredSkillList","skillsList","extractSkill","loadKeywords","responses","getEmbedding","_item$employer_Requir4","_item$employer_Requir5","matchingSkills","require","_item$employee_Profil13","_skills$result","_require$result","dot","matchPercentage","handleRoundTwo","profilesWithKeywords","_item$employee_Profil14","_item$employee_Profil15","_item$employee_Profil16","_item$employee_Profil17","cvAnalysist","_item$employee_Profil18","_item$employee_Profil19","_item$employer_Requir6","_item$employer_Requir7","list","_item$employee_Profil20","_item$employer_Requir9","_item$employer_Requir10","reduce","acc","_item$employer_Requir8","lackOfSkillsList","_item$employee_Profil21","word","Set","slice","handleRoundThree","parseResponseJSONData","lastIndexOf","substring","getKeywords","_item$employee","_item$employee$online","_item$employee2","_item$employee2$attac","calculateMatchingScore","_profile$employee_Pro","_profile$employee_Pro2","_profile$employee_Pro3","_profile$employee_Pro4","profileMatchingScore","Alphabet","à","á","ả","ã","ạ","ă","ắ","ằ","ẳ","ẵ","ặ","â","ấ","ầ","ẩ","ẫ","ậ","đ","è","é","ẻ","ẽ","ẹ","ê","ế","ề","ể","ễ","ệ","ì","í","ỉ","ĩ","ị","ò","ó","ỏ","õ","ọ","ô","ố","ồ","ổ","ỗ","ộ","ơ","ớ","ờ","ở","ỡ","ợ","ù","ú","ủ","ũ","ụ","ư","ứ","ừ","ử","ữ","ự","ỳ","ý","ỷ","ỹ","ỵ","À","Á","Ả","Ã","Ạ","Ă","Ắ","Ằ","Ẳ","Ẵ","Ặ","Â","Ấ","Ầ","Ẩ","Ẫ","Ậ","Đ","È","É","Ẻ","Ẽ","Ẹ","Ê","Ế","Ề","Ể","Ễ","Ệ","Ì","Í","Ỉ","Ĩ","Ị","Ò","Ó","Ỏ","Õ","Ọ","Ô","Ố","Ồ","Ổ","Ỗ","Ộ","Ơ","Ớ","Ờ","Ở","Ỡ","Ợ","Ù","Ú","Ủ","Ũ","Ụ","Ư","Ứ","Ừ","Ử","Ữ","Ự","Ỳ","Ý","Ỷ","Ỹ","Ỵ","specialCharacter","chuoiKhongDau","i","endsWith"],"sourceRoot":""}