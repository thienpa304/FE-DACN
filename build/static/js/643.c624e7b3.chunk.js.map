{"version":3,"file":"static/js/643.c624e7b3.chunk.js","mappings":"gSAaA,MAeA,EAfkBA,KAAO,IAADC,EACtB,MAAOC,EAAcC,IAAmBC,EAAAA,EAAAA,MAClCC,EAASC,KAAKJ,EAAaK,IAAI,QAC/B,KAAEC,EAAI,UAAEC,GCLD,SAAyBC,GACtC,IAAKA,EAAI,MAAO,CAAC,EACjB,MAAMC,GAAWC,EAAAA,EAAAA,OACX,cAAEC,EAAa,WAAEC,IAAeC,EAAAA,EAAAA,MAChC,KAAEP,EAAI,UAAEC,EAAS,WAAEO,IAAeC,EAAAA,EAAAA,UAGtC,CAAC,cAAeP,IAAKQ,SAAYC,EAAAA,GAAeC,QAAQV,IAAK,CAC7DW,MAAO,EACPC,sBAAsB,EACtBC,OAAAA,CAAQC,IACNC,EAAAA,EAAAA,GAAY,CACVC,QAAS,gFACTC,kBAAmB,mBACnBC,cAAeA,KACbjB,GAAU,EAAE,EAEdkB,kBAAkB,GAEtB,IAaF,OAVAC,EAAAA,EAAAA,YAAU,KACR,GAAQ,OAAJtB,QAAI,IAAJA,GAAAA,EAAMA,KAAM,CAAC,IAADuB,EAAAC,EACd,MAAMC,EAAU,IACP,OAAJzB,QAAI,IAAJA,OAAI,EAAJA,EAAMA,KACT0B,IAAyB,QAAhB,OAAJ1B,QAAI,IAAJA,GAAU,QAANuB,EAAJvB,EAAMA,YAAI,IAAAuB,OAAN,EAAJA,EAAYG,KAAe,mBAAe,OAAJ1B,QAAI,IAAJA,GAAU,QAANwB,EAAJxB,EAAMA,YAAI,IAAAwB,OAAN,EAAJA,EAAYE,KAEzDrB,EAAcoB,EAChB,IACC,CAACE,KAAKC,UAAU5B,KAEZ,CACLA,KAAMM,EACNL,YACAO,aAEJ,CDhC8BqB,CAAgBhC,GAC5C,OAAII,GAAkB6B,EAAAA,EAAAA,KAACC,EAAAA,EAAc,KAEnCC,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAACC,GAAI,CAAEC,SAAU,GAAIC,SAAA,EAC7BN,EAAAA,EAAAA,KAACO,EAAAA,EAAa,CAACC,QAAS,CAAK,OAAJtC,QAAI,IAAJA,GAAc,QAAVP,EAAJO,EAAMuC,gBAAQ,IAAA9C,OAAV,EAAJA,EAAgB+C,SACzCV,EAAAA,EAAAA,KAACW,EAAAA,EAAS,CAACzC,KAAMA,KACjB8B,EAAAA,EAAAA,KAACY,EAAAA,EAAU,KACXZ,EAAAA,EAAAA,KAACa,EAAAA,EAAc,CAACT,GAAI,CAAEU,GAAI,GAAKC,QAAa,OAAJ7C,QAAI,IAAJA,OAAI,EAAJA,EAAMuC,aACpC,C","sources":["pages/view-job-detail/index.tsx","modules/jobs/hooks/useQueryJobById.ts"],"sourcesContent":["import { Box, Container } from '@mui/material';\r\nimport CardApply from 'src/modules/jobs/components/CardApply';\r\nimport TabContent from './TabContent';\r\nimport { useLocation, useParams } from 'react-router';\r\nimport useQueryJobById from 'src/modules/jobs/hooks/useQueryJobById';\r\nimport { useEffect, useState } from 'react';\r\nimport useJob from 'src/modules/jobs/hooks/useJob';\r\nimport CompanyInfoTab from 'src/modules/jobs/components/CompanyInfoTab';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport SuspenseLoader from 'src/components/SuspenseLoader';\r\nimport PreloadImages from 'src/components/PreLoadImages';\r\nimport { defaultImage } from 'src/constants/uploadFileRule';\r\n\r\nconst JobDetail = () => {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const postId = atob(searchParams.get('id'));\r\n  const { data, isLoading } = useQueryJobById(postId);\r\n  if (isLoading) return <SuspenseLoader />;\r\n  return (\r\n    <Container sx={{ paddingY: 2 }}>\r\n      <PreloadImages sources={[data?.employer?.logo]} />\r\n      <CardApply data={data} />\r\n      <TabContent />\r\n      <CompanyInfoTab sx={{ mt: 2 }} company={data?.employer} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default JobDetail;\r\n","import { AxiosError } from 'axios';\nimport { useQuery } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { Job } from '../model';\nimport { JobViewService } from '../jobService';\nimport { useApp } from 'src/modules/app/hooks';\nimport { useEffect, useState } from 'react';\nimport alertDialog from 'src/utils/alertDialog';\nimport { useNavigate } from 'react-router';\nimport useJob from './useJob';\n\nexport default function useQueryJobById(id) {\n  if (!id) return {};\n  const navigate = useNavigate();\n  const { setItemDetail, itemDetail } = useJob();\n  const { data, isLoading, isFetching } = useQuery<\n    ResponseData<Job>,\n    AxiosError<ResponseData<Job>>\n  >(['job-getById', id], async () => JobViewService.getById(id), {\n    retry: 1,\n    refetchOnWindowFocus: false,\n    onError(err) {\n      alertDialog({\n        message: 'Việc làm đã đóng hoặc không tồn tại',\n        confirmButtonText: 'Trở về',\n        handleConfirm: () => {\n          navigate(-1);\n        },\n        hideCancelButton: true\n      });\n    }\n  });\n\n  useEffect(() => {\n    if (data?.data) {\n      const saveJob = {\n        ...data?.data,\n        sex: data?.data?.sex === null ? 'Tất cả' : data?.data?.sex\n      };\n      setItemDetail(saveJob);\n    }\n  }, [JSON.stringify(data)]);\n\n  return {\n    data: itemDetail,\n    isLoading,\n    isFetching\n  };\n}\n"],"names":["JobDetail","_data$employer","searchParams","setSearchParams","useSearchParams","postId","atob","get","data","isLoading","id","navigate","useNavigate","setItemDetail","itemDetail","useJob","isFetching","useQuery","async","JobViewService","getById","retry","refetchOnWindowFocus","onError","err","alertDialog","message","confirmButtonText","handleConfirm","hideCancelButton","useEffect","_data$data","_data$data2","saveJob","sex","JSON","stringify","useQueryJobById","_jsx","SuspenseLoader","_jsxs","Container","sx","paddingY","children","PreloadImages","sources","employer","logo","CardApply","TabContent","CompanyInfoTab","mt","company"],"sourceRoot":""}