{"version":3,"file":"static/js/629.25ce06ca.chunk.js","mappings":"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","sources":["components/FollowButton/index.tsx","components/Link/index.tsx","modules/application/applicationService.ts","modules/jobProfile/attachedDocument/hooks/useQueryAttachedDocument.ts","components/LinearPercent/index.tsx","components/UploadButton/index.tsx","modules/application/hooks/useMutateApplyJob.ts","modules/application/components/AnayzeProfileButton.tsx","modules/application/components/ModalApply.tsx","modules/application/hooks/useQueryCheckApplied.ts","modules/jobs/components/CardApply.tsx","modules/jobs/components/CompanyInfoTab.tsx","modules/jobs/hooks/useMutateFollowJobById.ts","modules/jobs/components/FollowJobButton.tsx","modules/jobs/hooks/useFollowJobList.ts","modules/jobs/hooks/useJob.ts","modules/jobs/hooks/useQueryFollowJobs.ts","modules/users/hooks/useMutateCompany.ts","modules/users/profile/Information/EditForm.tsx","modules/users/profile/Information/InfoField.tsx","modules/jobs/components/JobContent.tsx","pages/view-job-detail/TabContent.tsx","utils/reviewProfile.ts","utils/compareEnum.ts","utils/rewriteUrl.ts"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport { Box } from '@mui/material';\n\nexport default function FollowButton(props) {\n  const { isFollow: isFollowing } = props;\n  const [isFollow, setIsFollow] = useState(isFollowing);\n\n  const handleToggleFollow = (id) => {\n    setIsFollow((prev) => !prev);\n  };\n\n  useEffect(() => {\n    setIsFollow(isFollowing);\n  }, [isFollowing]);\n\n  return (\n    <Box\n      onClick={handleToggleFollow}\n      sx={{ display: 'flex', alignItem: 'center' }}\n    >\n      {isFollow ? (\n        <FavoriteIcon\n          sx={{\n            display: 'flex',\n            color: 'red',\n            '&:hover': {\n              color: 'darkred'\n            }\n          }}\n        />\n      ) : (\n        <FavoriteBorderIcon\n          sx={{\n            display: 'flex',\n            color: 'red',\n            '&:hover': {\n              color: 'darkred'\n            }\n          }}\n        />\n      )}\n    </Box>\n  );\n}\n","import React, { forwardRef, useMemo } from 'react';\nimport { Link as ReactLink } from 'react-router-dom';\n\ninterface CustomLinkProps {\n  to?: string;\n  children: React.ReactNode;\n  sx?: any;\n  state?: any;\n  onClick?: () => void;\n}\n\nconst linkStyle = {\n  textDecoration: 'none',\n  color: '#551a8b'\n};\n\nconst handleMouseEnter = (e: React.MouseEvent<HTMLAnchorElement>) => {\n  e.currentTarget.style.color = '#FF7D55'; // Truy cập style thông qua currentTarget\n};\n\nconst handleMouseLeave = (\n  e: React.MouseEvent<HTMLAnchorElement>,\n  defaultColor\n) => {\n  e.currentTarget.style.color = defaultColor || '#551a8b'; // Truy cập style thông qua currentTarget\n};\n\nconst Link = forwardRef<HTMLButtonElement, CustomLinkProps>((props, ref) => {\n  const { to, children, sx } = props;\n\n  return (\n    <ReactLink\n      {...props}\n      to={to}\n      style={{ ...linkStyle, ...sx }}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={(e) => handleMouseLeave(e, sx?.color)}\n    >\n      {children}\n    </ReactLink>\n  );\n});\n\nexport default Link;\n","import BaseService from 'src/common/base-service';\n\nexport const ApplicationService = new BaseService('employee/applications');\nexport const CandidateProfilesService = new BaseService(\n  'employer/applications'\n);\nexport const UpdateStatusService = new BaseService('employer/applications');\nexport const ApplicationTotalResults = new BaseService(\n  'employer/applications/totalResults'\n);\nexport const CheckApplied = new BaseService('employee/job-postings');\n","import { AxiosError } from 'axios';\nimport { useQuery } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { AttachedDocument } from 'src/modules/jobProfile/model/index';\nimport { AttachedDocumentService } from 'src/modules/jobProfile/employeeProfileService';\nimport { useEffect, useState } from 'react';\nimport { getAccessToken } from 'src/utils/localStorage';\nimport { useApp } from 'src/modules/app/hooks';\nimport useDocumentHook from './useDocumentHook';\n\nconst useQueryAttachedDocument = () => {\n  const { isEmployee } = useApp();\n  const { setProfile } = useDocumentHook();\n  const isLoggedIn = Boolean(getAccessToken());\n\n  const { data, isLoading, isSuccess, refetch } = useQuery<\n    ResponseData<AttachedDocument>,\n    AxiosError<ResponseData<AttachedDocument>>\n  >(['get-AttachedDocument'], AttachedDocumentService.get, {\n    retry: (failureCount, error) =>\n      error.response.status === 404 ? false : failureCount < 2,\n    refetchOnWindowFocus: false,\n    enabled: isLoggedIn && isEmployee\n  });\n\n  useEffect(() => {\n    // Handle the data or error here\n    if (data) {\n      setProfile(data.data);\n    }\n  }, [isSuccess]);\n\n  return {\n    attachedDocument: data?.data,\n    isLoading,\n    refetch\n  };\n};\n\nexport default useQueryAttachedDocument;\n","import * as React from 'react';\nimport LinearProgress, {\n  LinearProgressProps\n} from '@mui/material/LinearProgress';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\n\nfunction LinearPercent(props: LinearProgressProps & { value: number }) {\n  return (\n    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n      <Box sx={{ width: '100%', mr: 1 }}>\n        <LinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box sx={{ minWidth: 35 }}>\n        <Typography variant=\"body2\" color=\"text.secondary\">{`${Math.round(\n          props.value\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nexport default LinearPercent;\n","import { useState } from 'react';\nimport { ref, uploadBytesResumable, getDownloadURL } from 'firebase/storage';\nimport { storage } from 'src/common/firebaseConfig';\nimport { styled } from '@mui/material/styles';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport Button, { ButtonProps } from '@mui/material/Button';\nimport Chip from '@mui/material/Chip';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Box from '@mui/material/Box';\nimport LinearPercent from '../LinearPercent';\nimport dayjs from 'dayjs';\nimport { ApplicationType } from 'src/constants/enum';\nimport { removeFileByUrl } from 'src/common/firebaseService';\n\nconst VisuallyHiddenInput = styled('input')({\n  display: 'none'\n});\n\nconst ButtonWrapper = styled(Button)<any>(({ theme }) => ({\n  backgroundColor: theme.colors.primary.lighter\n}));\nconst ChipWrapper = styled(Chip)(({ theme }) => ({\n  borderRadius: 6\n}));\n\ntype Props = ButtonProps & {\n  label?: string;\n  value?: string;\n  onChange?: (url: string) => void;\n  setIsChecked?: (value: string) => void;\n  setUrl?: (value: string) => void;\n};\n\nfunction UploadButton(props: Props) {\n  const { label, sx, onChange, setIsChecked, setUrl } = props;\n  // State to store uploaded file\n  const [file, setFile] = useState<File>();\n  const [fileUrl, setFileUrl] = useState<string | undefined>();\n\n  // progress\n  const [percent, setPercent] = useState(null);\n\n  // Handle file upload event and update state\n  const handleChange = async (event) => {\n    removeFileByUrl(fileUrl).then(() => {\n      const file = event.target.files[0];\n      if (!file) return;\n      setFile(() => file);\n      handleUpload(file);\n    });\n  };\n\n  const handleDeleteFile = async () => {\n    if (!fileUrl) return;\n    removeFileByUrl(fileUrl).then(() => {\n      setFile(() => null);\n      setIsChecked('');\n    });\n  };\n  console.log(file, fileUrl);\n\n  const handleUpload = (value) => {\n    if (!value) return;\n\n    let date = dayjs(new Date()).format('DDMMYYYY');\n    const storageRef = ref(storage, `/userDocument/${value.name}-${date}`);\n\n    // progress can be paused and resumed. It also exposes progress updates.\n    // Receives the storage reference and the file to upload.\n    const uploadTask = uploadBytesResumable(storageRef, value);\n\n    uploadTask.on(\n      'state_changed',\n      (snapshot) => {\n        const percent = Math.round(\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n        );\n\n        // update progress\n        setPercent(percent);\n      },\n      (err) => console.error(err),\n      () => {\n        // download url\n        getDownloadURL(uploadTask.snapshot.ref).then((url) => {\n          setPercent(null);\n          setFileUrl(() => url);\n          setUrl(url);\n          onChange(url);\n        });\n      }\n    );\n    setIsChecked(ApplicationType.cv_enclosed);\n  };\n\n  return (\n    <div>\n      <ButtonWrapper\n        component=\"label\"\n        variant=\"contained\"\n        startIcon={<CloudUploadIcon />}\n        sx={sx}\n      >\n        {label || 'Upload file'}\n        <VisuallyHiddenInput\n          type=\"file\"\n          onChange={handleChange}\n          accept=\"application/pdf\"\n        />\n      </ButtonWrapper>\n      <Box marginTop={2}>\n        {percent !== null && <LinearPercent value={percent} />}\n        {fileUrl && file && (\n          <ChipWrapper\n            label={file.name}\n            onDelete={handleDeleteFile}\n            deleteIcon={<DeleteIcon />}\n            variant=\"outlined\"\n          />\n        )}\n      </Box>\n    </div>\n  );\n}\n\nexport default UploadButton;\n","import { AxiosError } from 'axios';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { useApp } from 'src/modules/app/hooks';\nimport { useNavigate } from 'react-router';\nimport { ApplicationService } from '../applicationService';\nimport { Application } from '../model';\n\nconst useMutateApplyJob = () => {\n  const { toast } = useApp();\n  const queryClient = useQueryClient();\n  const { mutate: onSaveData, isLoading } = useMutation<\n    ResponseData<Application>,\n    AxiosError<ResponseData<Application>>,\n    Application\n  >(ApplicationService.create, {\n    onSuccess: (res) => {\n      if (res.status === 200) {\n        queryClient.invalidateQueries(['job-getById']);\n        toast.success({ massage: 'Ứng tuyển thành công' });\n      } else {\n        toast.error({ massage: res.message });\n      }\n    },\n    onError: (error) => {\n      toast.error({ massage: error.response.data.message });\n    }\n  });\n\n  return {\n    onSaveData,\n    isLoading\n  };\n};\n\nexport default useMutateApplyJob;\n","import { Box, Rating, Typography } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { ApplicationType } from 'src/constants/enum';\nimport { useApp } from 'src/modules/app/hooks';\nimport GradeIcon from '@mui/icons-material/Grade';\nimport {\n  ProfileApplicationType,\n  LOW_SCORE,\n  NORMAL_SCORE,\n  HIGH_SCORE,\n  review,\n  firstRoundForGeneralInfo,\n  preprocessJobData,\n  ratingStar\n} from 'src/utils/reviewProfile';\nimport { LoadingButton } from '@mui/lab';\nimport alertDialog from 'src/utils/alertDialog';\n\nconst renderAnalyzeResult = (analyzeResult: number, hints: string) => {\n  const rating = ratingStar(analyzeResult);\n\n  return (\n    <>\n      <Box display={'flex'} textAlign={'left'}>\n        <Typography fontWeight={700} fontSize={16} mr={2}>\n          Độ phù hợp\n        </Typography>\n        {/* <Box\n          sx={{\n            width: 150,\n            borderRadius: 3,\n            p: 1,\n            bgcolor:\n              analyzeResult >= HIGH_SCORE\n                ? '#ffc107'\n                : analyzeResult >= NORMAL_SCORE\n                ? '#4caf50'\n                : analyzeResult >= LOW_SCORE\n                ? '#b5b5b5'\n                : '#efefef',\n            display: 'flex',\n            justifyContent: 'center'\n          }}\n        >\n          {analyzeResult >= HIGH_SCORE\n            ? 'Cao'\n            : analyzeResult >= NORMAL_SCORE\n            ? 'Trung bình'\n            : analyzeResult >= LOW_SCORE\n            ? 'Thấp'\n            : 'Không phù hợp'}\n        </Box> */}\n        <Rating value={rating} max={3} readOnly />\n      </Box>\n      <Box\n        display={'flex'}\n        flexDirection={'column'}\n        // justifyContent={'left'}\n        mt={2}\n        textAlign={'left'}\n      >\n        <Typography fontWeight={700} fontSize={16}>\n          Gợi ý:\n        </Typography>\n        <Typography mt={1}>{hints}</Typography>\n      </Box>\n    </>\n  );\n};\n\nexport default function AnayzeProfileButton(props) {\n  const {\n    selectedProfile,\n    job,\n    profileType,\n    setShowResult,\n    showResult,\n    fileUrl,\n    setHintsMessage\n  } = props;\n  const { user } = useApp();\n  const [start, setStart] = useState(false);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [analyzedProfile, setAnalyzedProfile] =\n    useState<ProfileApplicationType>(null);\n  const [passRoundProfiles, setPassOneProfiles] = useState<\n    ProfileApplicationType[]\n  >([]);\n  const [roundOneFinished, setRoundOneFinished] = useState(false);\n  const [roundTwoFinished, setRoundTwoFinished] = useState(false);\n  const [roundThreeFinished, setRoundThreeFinished] = useState(false);\n  const [analyzeResult, setAnalyzeResult] = useState<number>(null);\n  const [goToAnalyzeResult, setGoToAnalyzeResult] = useState({\n    signal: false,\n    resultData: null\n  });\n  const [hints, setHints] = useState('');\n\n  const finishedAll = () => {\n    setHintsMessage(hints);\n    setStart(false);\n    setRoundOneFinished(false);\n    setRoundTwoFinished(false);\n    setRoundThreeFinished(false);\n    setShowResult(true);\n    setIsAnalyzing(false);\n    setPassOneProfiles([]);\n    setGoToAnalyzeResult({ signal: false, resultData: null });\n    console.log('Finised All');\n    alertDialog({\n      message: renderAnalyzeResult(analyzeResult, hints),\n      hideCancelButton: true,\n      title: 'Kết quả phân tích'\n    });\n  };\n\n  const handleSetAnalyzedProfile = async (data: ProfileApplicationType[]) => {\n    setAnalyzedProfile(data[0]);\n  };\n\n  const handleIsAnalyzing = (data: boolean) => {\n    setIsAnalyzing(data);\n  };\n\n  const handleGoToAnalyzeResult = (signal: boolean, resultData) => {\n    setGoToAnalyzeResult({ signal: signal, resultData: resultData });\n  };\n\n  const handleAnalyzeResult = async (result: any[]) => {\n    if (!result || !result[0]) {\n      if (\n        analyzedProfile?.employee_Profile?.online_profile ||\n        analyzedProfile?.employee_Profile?.attached_document\n      ) {\n        const matchingScore = firstRoundForGeneralInfo(\n          analyzedProfile?.employer_Requirement,\n          analyzedProfile?.employee_Profile\n        );\n\n        console.log('matchingScore', matchingScore);\n        setAnalyzeResult(() => matchingScore);\n        if (matchingScore >= LOW_SCORE) {\n          setPassOneProfiles(() => [analyzedProfile]);\n        } else {\n          setHints(\n            'Hồ sơ của bạn có vẻ chưa đáp ứng các yêu cầu cơ bản như: Giới tính, độ tuổi ngành nghề, trình độ, kinh nghiệm'\n          );\n          setIsAnalyzing(false);\n        }\n      }\n    } else {\n      const response = JSON.parse(result[0]);\n      const matchingScore: number = response?.result;\n      if (matchingScore + analyzeResult < LOW_SCORE) {\n        setHints(\n          'Hồ sơ của bạn có vẻ chưa đáp ứng các yêu cầu cơ bản như: Ngành nghề, trình độ, kinh nghiệm'\n        );\n      } else setHints(response?.hints);\n      setAnalyzeResult((prev) => prev + matchingScore);\n    }\n\n    if (start) {\n      if (!roundOneFinished) setRoundOneFinished(true);\n      else if (!roundTwoFinished) setRoundTwoFinished(true);\n      else if (!roundThreeFinished) setRoundThreeFinished(true);\n    }\n  };\n\n  const handleReviewProfile = () => {\n    review({\n      round: 1,\n      handleAnalyzeResult: handleAnalyzeResult,\n      setIsAnalyzing: handleIsAnalyzing,\n      setAnalyzedProfile: handleSetAnalyzedProfile,\n      resetMatchingScoreList: [analyzedProfile],\n      handleGoToAnalyzeResult: handleGoToAnalyzeResult\n    });\n  };\n\n  useEffect(() => {\n    if (goToAnalyzeResult.signal)\n      start && handleAnalyzeResult(goToAnalyzeResult.resultData);\n  }, [goToAnalyzeResult.signal]);\n\n  useEffect(() => {\n    let profileData;\n    if (profileType === ApplicationType.online_profile) {\n      profileData = {\n        personal_information: user,\n        online_profile: selectedProfile\n      };\n    } else if (profileType === ApplicationType.attached_document) {\n      profileData = {\n        personal_information: user,\n        attached_document: selectedProfile\n      };\n    } else {\n      profileData = {\n        application: {\n          id: 1,\n          CV: fileUrl,\n          applicationType: 'Nộp nhanh'\n        }\n      };\n    }\n    const data: ProfileApplicationType = {\n      id: 1,\n      employee_Profile: {\n        ...profileData,\n        personal_information: {\n          dob: profileData?.personal_information?.dob,\n          sex: profileData?.personal_information?.sex\n        }\n      },\n      employer_Requirement: preprocessJobData(job)\n    };\n    setAnalyzedProfile(() => data);\n\n    if (\n      data?.employee_Profile?.online_profile ||\n      data?.employee_Profile?.attached_document\n    ) {\n      const keywords =\n        data?.employee_Profile?.online_profile?.keywords ||\n        data?.employee_Profile?.attached_document?.keywords;\n      const analyzeResultData: ProfileApplicationType = {\n        ...data,\n        employee_Profile: {\n          ...data.employee_Profile,\n\n          application: {\n            id: 1,\n            keywords: keywords,\n            applicationType: profileType,\n            matchingScore: null\n          }\n        }\n      };\n      setAnalyzedProfile(() => analyzeResultData);\n      console.log(analyzeResultData);\n    }\n  }, [JSON.stringify(job), selectedProfile, fileUrl]);\n\n  // go to round 1\n  useEffect(() => {\n    if (start && selectedProfile) {\n      setAnalyzeResult(null);\n      setShowResult(false);\n      handleReviewProfile();\n    }\n  }, [start]);\n\n  // go to round 2 and 3\n  useEffect(() => {\n    if (!start) return;\n    if (roundOneFinished && !roundTwoFinished) {\n      console.log('passRoundProfiles', passRoundProfiles);\n\n      // go to round 2\n      if (passRoundProfiles.length > 0)\n        review({\n          round: 2,\n          handleAnalyzeResult: handleAnalyzeResult,\n          setIsAnalyzing: handleIsAnalyzing,\n          passRoundProfiles: passRoundProfiles\n        });\n      else {\n        finishedAll();\n      }\n    } else if (roundTwoFinished && !roundThreeFinished) {\n      console.log('Round 2 finished');\n\n      // go to round 3\n      review({\n        round: 3,\n        handleAnalyzeResult: handleAnalyzeResult,\n        setIsAnalyzing: handleIsAnalyzing,\n        passRoundProfiles: passRoundProfiles\n      });\n    } else if (roundThreeFinished) {\n      console.log('Round 3 finished');\n      finishedAll();\n    }\n  }, [roundOneFinished, roundTwoFinished, roundThreeFinished]);\n\n  return (\n    <Box display=\"flex\" sx={{ alignItems: 'center', gap: 1 }}>\n      <LoadingButton\n        loading={isAnalyzing}\n        onClick={() => {\n          setStart(true);\n        }}\n        variant=\"contained\"\n        color=\"primary\"\n        sx={{\n          minWidth: 200\n        }}\n        disabled={showResult || isAnalyzing}\n      >\n        <GradeIcon fontSize=\"small\" />\n        Phân tích độ phù hợp\n      </LoadingButton>\n      {/* {showResult && (\n        <Box\n          sx={{\n            width: 150,\n            borderRadius: 3,\n            p: 1,\n            bgcolor:\n              analyzeResult >= HIGH_SCORE\n                ? '#ffc107'\n                : analyzeResult >= NORMAL_SCORE\n                ? '#4caf50'\n                : analyzeResult >= LOW_SCORE\n                ? '#b5b5b5'\n                : '#efefef',\n            display: 'flex',\n            justifyContent: 'center'\n          }}\n        >\n          {analyzeResult >= HIGH_SCORE\n            ? 'Cao'\n            : analyzeResult >= NORMAL_SCORE\n            ? 'Trung bình'\n            : analyzeResult >= LOW_SCORE\n            ? 'Thấp'\n            : 'Không phù hợp'}\n        </Box>\n      )} */}\n    </Box>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  Grid,\n  Typography\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { useForm } from 'react-hook-form';\nimport FormControl from 'src/components/FormControl';\nimport TextField from 'src/components/TextField';\nimport UploadButton from 'src/components/UploadButton';\nimport AddIcon from '@mui/icons-material/Add';\nimport useMutateApplyJob from '../hooks/useMutateApplyJob';\nimport { ApplicationType } from 'src/constants/enum';\nimport useQueryOnlineProfile from 'src/modules/jobProfile/onlineProfile/hooks/useQueryOnlineProfile';\nimport useQueryAttachedDocument from 'src/modules/jobProfile/attachedDocument/hooks/useQueryAttachedDocument';\nimport { useApp } from 'src/modules/app/hooks';\nimport useProfileHook from 'src/modules/users/hooks/useUserHook';\nimport { v4 } from 'uuid';\nimport useOnlineProfile from 'src/modules/jobProfile/onlineProfile/hooks/useOnlineProfile';\nimport useDocumentHook from 'src/modules/jobProfile/attachedDocument/hooks/useDocumentHook';\nimport { review } from 'src/utils/reviewProfile';\nimport AnayzeProfileButton from './AnayzeProfileButton';\nimport { Job } from 'src/modules/jobs/model';\nimport { removeFileByUrl } from 'src/common/firebaseService';\nimport SuspenseLoader from 'src/components/SuspenseLoader';\nimport { useResponsive } from 'src/utils/responsive';\n\nconst Title = styled('div')(() => ({\n  fontWeight: 600,\n  fontSize: 18,\n  margin: '5px 0'\n}));\nconst SubTitle = styled('div')(({ theme }) => ({\n  fontWeight: 400,\n  fontSize: 12,\n  color: theme.colors.alpha.black[70]\n}));\n\ntype Props = {\n  postId: number;\n  open: boolean;\n  position: string;\n  company?: string;\n  job?: Partial<Job>;\n  onClose: () => void;\n};\n\nconst buttonStyle = {\n  width: '100%',\n  px: 1,\n  color: '#000'\n};\n\nexport default function ModalApply(props: Props) {\n  const { isMobile } = useResponsive();\n  const { onSaveData } = useMutateApplyJob();\n  const { open, onClose, position, company, postId, job } = props;\n  const { profile: user } = useProfileHook();\n  const { onlineProfile, isLoading: isLoadingOnline } = useQueryOnlineProfile();\n  const { attachedDocument, isLoading: isLoadingDocument } =\n    useQueryAttachedDocument();\n  const { profile: online, setProfile: setOnline } = useOnlineProfile();\n  const { profile: document, setProfile: setDocument } = useDocumentHook();\n  const [isChecked, setIsChecked] = useState('');\n  const [missInfo, setMissInfo] = useState(false);\n  const [selectedProfile, setSelectedProfile] = useState(null);\n  const [showResult, setShowResult] = useState(false);\n  const [url, setUrl] = useState('');\n  const [hintsMessage, setHintsMessage] = useState('');\n\n  const {\n    control,\n    handleSubmit,\n    reset,\n    formState: { errors }\n  } = useForm({\n    defaultValues: {}\n  });\n\n  const handleClose = () => {\n    if (url) removeFileByUrl(url).then(() => setUrl(''));\n    setIsChecked(null);\n    setHintsMessage(null);\n    setShowResult(null);\n    setSelectedProfile(null);\n    onClose();\n  };\n  const handleApply = (data) => {\n    if (!isChecked) {\n      setMissInfo(true);\n      return;\n    }\n\n    let submitProfile = '';\n\n    if (isChecked === ApplicationType.cv_enclosed) submitProfile = data.CV;\n    else {\n      if (url) removeFileByUrl(url);\n      submitProfile = '#' + v4();\n    }\n\n    onSaveData({\n      ...data,\n      postId,\n      applicationType: isChecked,\n      CV: submitProfile\n    });\n    setShowResult(null);\n    onClose();\n  };\n\n  const uploadProfile = (id) => {\n    setIsChecked(id);\n    setHintsMessage('');\n  };\n\n  useEffect(() => {\n    reset(user);\n    setShowResult(false);\n    if (isChecked === ApplicationType.online_profile) {\n      setSelectedProfile(online);\n    }\n    if (isChecked === ApplicationType.attached_document) {\n      setSelectedProfile(document);\n    }\n    if (isChecked === ApplicationType.cv_enclosed) {\n      setSelectedProfile(job);\n    }\n  }, [isChecked]);\n\n  if (isLoadingOnline || isLoadingDocument) return <SuspenseLoader />;\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      maxWidth=\"md\"\n      fullWidth\n      fullScreen={isMobile}\n    >\n      <DialogTitle>\n        <SubTitle> Vị trí ứng tuyển</SubTitle>\n        <Title>{position}</Title>\n        {company && <SubTitle>{company}</SubTitle>}\n      </DialogTitle>\n\n      <DialogContent>\n        <Grid container spacing={2}>\n          <Grid item xs={12} md={6} lg={4}>\n            <Button\n              startIcon={<AddIcon />}\n              variant=\"contained\"\n              disabled={onlineProfile ? false : true}\n              fullWidth\n              onClick={() => uploadProfile(ApplicationType.online_profile)}\n              sx={[\n                buttonStyle,\n                {\n                  bgcolor:\n                    isChecked === ApplicationType.online_profile\n                      ? '#f29c00'\n                      : '#fff6e5'\n                }\n              ]}\n            >\n              {onlineProfile ? (\n                'Hồ sơ trực tuyến'\n              ) : (\n                <em>Chưa có hồ sơ trực tuyến</em>\n              )}\n            </Button>\n          </Grid>\n          <Grid item xs={12} md={6} lg={4}>\n            <Button\n              startIcon={<AddIcon />}\n              variant=\"contained\"\n              fullWidth\n              disabled={attachedDocument ? false : true}\n              onClick={() => uploadProfile(ApplicationType.attached_document)}\n              sx={[\n                buttonStyle,\n                {\n                  bgcolor:\n                    isChecked === ApplicationType.attached_document\n                      ? '#f29c00'\n                      : '#fff6e5'\n                }\n              ]}\n            >\n              {attachedDocument ? (\n                'Hồ sơ đính kèm'\n              ) : (\n                <em>Chưa có hồ sơ đính kèm</em>\n              )}\n            </Button>\n          </Grid>\n          <Grid item xs={12} lg={4}>\n            <FormControl\n              control={control}\n              errors={errors}\n              id=\"CV\"\n              name=\"CV\"\n              label=\"Tải lên hồ sơ có sẵn\"\n            >\n              <UploadButton\n                sx={[\n                  buttonStyle,\n                  {\n                    bgcolor:\n                      isChecked === ApplicationType.cv_enclosed\n                        ? '#f29c00'\n                        : '#fff6e5'\n                  }\n                ]}\n                setIsChecked={setIsChecked}\n                setUrl={setUrl}\n              />\n            </FormControl>\n          </Grid>\n        </Grid>\n        {missInfo && (\n          <Typography color=\"error\" mb={3} fontWeight={700} fontStyle=\"italic\">\n            * Vui lòng chọn loại hồ sơ cần gửi !\n          </Typography>\n        )}\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <FormControl\n              element={<TextField />}\n              control={control}\n              errors={errors}\n              required\n              id=\"name\"\n              label=\"Họ và tên\"\n              name=\"name\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <FormControl\n              element={<TextField />}\n              control={control}\n              errors={errors}\n              required\n              id=\"email\"\n              label=\"Email\"\n              name=\"email\"\n              pattern=\"email\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <FormControl\n              element={<TextField />}\n              control={control}\n              errors={errors}\n              required\n              id=\"phone\"\n              label=\"Số điện thoại\"\n              name=\"phone\"\n              pattern=\"phone\"\n            />\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions\n        sx={{\n          display: 'flex',\n          justifyContent: { sm: 'space-between', xs: 'center' },\n          flexWrap: 'wrap',\n          p: 2,\n          gap: 2\n        }}\n      >\n        <AnayzeProfileButton\n          job={job}\n          selectedProfile={selectedProfile}\n          profileType={isChecked}\n          setShowResult={setShowResult}\n          showResult={showResult}\n          fileUrl={url}\n          setHintsMessage={setHintsMessage}\n        />\n        <Box sx={{ display: 'flex', columnGap: 1 }}>\n          <Button\n            onClick={handleClose}\n            variant=\"outlined\"\n            color=\"secondary\"\n            sx={{ minWidth: 120 }}\n          >\n            Hủy\n          </Button>\n          <Button\n            onClick={handleSubmit(handleApply)}\n            variant=\"contained\"\n            color=\"info\"\n            sx={{ minWidth: 120 }}\n          >\n            Nộp hồ sơ\n          </Button>\n        </Box>\n      </DialogActions>\n      {/* {hintsMessage && (\n          <Box mb={1} p={2} gap={1} display=\"flex\" flexDirection=\"column\">\n            <Divider sx={{ mb: 1, color: '#f29c00' }} />\n            <Typography fontWeight={700} fontSize={18}>\n              Gợi ý:\n            </Typography>\n            <Typography fontStyle=\"italic\" mx={2}>\n              {hintsMessage}\n            </Typography>\n          </Box>\n        )} */}\n    </Dialog>\n  );\n}\n","import { AxiosError } from 'axios';\nimport { useQuery } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { CheckApplied } from '../applicationService';\nimport { useApp } from 'src/modules/app/hooks';\n\nconst useQueryCheckApplied = (params?) => {\n  const { isEmployee } = useApp();\n  const { data, isLoading } = useQuery<\n    ResponseData<Boolean>,\n    AxiosError<ResponseData<Boolean>>\n  >(\n    ['job-getById', params],\n    () => CheckApplied.getById(params?.postId + '/applied', { params }),\n    {\n      keepPreviousData: true,\n      retry: 1,\n      refetchOnWindowFocus: false,\n      enabled: isEmployee && Boolean(params?.postId)\n    }\n  );\n\n  return {\n    isApplied: data?.data,\n    isLoading\n  };\n};\n\nexport default useQueryCheckApplied;\n","import { useState } from 'react';\nimport { Avatar, Box, Grid, Button, Typography } from '@mui/material';\nimport DateRangeIcon from '@mui/icons-material/DateRange';\nimport PaidIcon from '@mui/icons-material/Paid';\nimport SendIcon from '@mui/icons-material/Send';\nimport AccessibilityIcon from '@mui/icons-material/Accessibility';\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\nimport { styled } from '@mui/material/styles';\nimport { Job } from '../model';\nimport ModalApply from '../../application/components/ModalApply';\nimport { toInputDateString } from 'src/utils/formatData';\nimport { defaultImage } from 'src/constants/uploadFileRule';\nimport { useApp } from 'src/modules/app/hooks';\nimport { Link, Navigate, useNavigate, useSearchParams } from 'react-router-dom';\nimport FollowJobButton from './FollowJobButton';\nimport SuspenseLoader from 'src/components/SuspenseLoader';\nimport CustomContainer from 'src/components/CustomContainer';\nimport { rewriteUrl } from 'src/utils/rewriteUrl';\nimport { useResponsive } from 'src/utils/responsive';\nimport useQueryCheckApplied from 'src/modules/application/hooks/useQueryCheckApplied';\nimport LazyLoadImage from 'src/components/LazyLoadImage';\n\nconst AvatarWrapper = styled(Avatar)(({ theme }) => ({\n  width: 150,\n  height: 150,\n  objectFit: 'contain',\n  borderRadius: '5px'\n}));\nconst SubTitle = styled('h3')(({ theme }) => ({\n  fontWeight: 400,\n  fontSize: 16,\n  color: theme.colors.alpha.black[70]\n}));\nconst Title = styled('h3')(() => ({\n  fontWeight: 600,\n  fontSize: 18\n}));\nconst LabelText = styled('span')(({ theme }) => ({\n  color: theme.colors.alpha.black[70]\n}));\nconst ValueText = styled('span')(({ theme }) => ({\n  color: theme.colors.alpha.black[100],\n  marginLeft: 5\n}));\ntype Props = {\n  data: Partial<Job>;\n};\nconst CardApply: React.FC<Props> = ({ data }) => {\n  const { isMobile } = useResponsive();\n  const { isEmployee, isEmployer, isAdmin } = useApp();\n  const [openFormApply, setOpenFormApply] = useState(false);\n  const navigate = useNavigate();\n  const onCloseFormApply = () => {\n    setOpenFormApply(false);\n  };\n  const handleOpenFormApply = () => {\n    setOpenFormApply(true);\n  };\n  const { isApplied } = useQueryCheckApplied({ postId: data?.postId });\n\n  return (\n    <CustomContainer\n      sx={{\n        px: 5,\n        pb: 5,\n        mb: 2,\n        minHeight: !isEmployer && !isAdmin ? 280 : 260\n      }}\n    >\n      <Grid container>\n        <Grid\n          item\n          xs={12}\n          md={2}\n          display=\"flex\"\n          alignItems=\"center\"\n          sx={{ justifyContent: { xs: 'center', sm: 'normal' } }}\n        >\n          <LazyLoadImage\n            src={data?.employer?.logo || defaultImage.companyAvatar_md}\n            placeholderSrc={defaultImage.companyAvatar_md}\n            style={{\n              width: 150,\n              height: 150,\n              objectFit: 'contain',\n              borderRadius: '5px'\n            }}\n          />\n        </Grid>\n        <Grid item xs={12} md={10}>\n          <Box>\n            <Link\n              to={`/company/${rewriteUrl(\n                data?.employer?.companyName\n              )}?id=${btoa(data?.employer?.userId.toString())}`}\n              style={{ textDecoration: 'none' }}\n            >\n              <SubTitle>{data?.employer?.companyName}</SubTitle>\n            </Link>\n            <Title>{data?.jobTitle}</Title>\n            <Grid container spacing={1}>\n              <Grid item xs={12} md={6}>\n                <Grid container alignItems={'center'}>\n                  <PaidIcon color=\"primary\" sx={{ margin: '0 5px' }} />\n                  <LabelText> Mức lương : </LabelText>\n                  <ValueText>\n                    {data?.minSalary} - {data?.maxSalary} triệu\n                  </ValueText>\n                </Grid>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Grid\n                  container\n                  alignItems={'center'}\n                  wrap=\"nowrap\"\n                  overflow={'hidden'}\n                >\n                  <DateRangeIcon color=\"primary\" sx={{ margin: '0 5px' }} />\n                  <LabelText> Hạn nộp hồ sơ : </LabelText>\n                  <ValueText>{data?.applicationDeadline}</ValueText>\n                </Grid>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Grid container alignItems={'center'}>\n                  <AccessibilityIcon color=\"primary\" sx={{ margin: '0 5px' }} />\n                  <LabelText> Độ tuổi : </LabelText>\n                  <ValueText>\n                    {data?.minAge} - {data?.maxAge}\n                  </ValueText>\n                </Grid>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Grid container alignItems={'center'}>\n                  <LocationOnIcon color=\"primary\" sx={{ margin: '0 5px' }} />\n                  <LabelText> Khu vực ứng tuyển : </LabelText>\n                  <ValueText>{data?.workAddress}</ValueText>\n                </Grid>\n              </Grid>\n            </Grid>\n            {!isEmployer && !isAdmin && (\n              <Box\n                sx={{\n                  marginTop: 2,\n                  display: 'flex',\n                  gap: 2,\n                  alignItems: 'center',\n                  justifyContent: isMobile && 'center'\n                }}\n              >\n                <Button\n                  onClick={\n                    isEmployee\n                      ? handleOpenFormApply\n                      : () => {\n                          navigate('/login', {\n                            state: {\n                              from:\n                                window.location.pathname +\n                                window.location.search,\n                              postId: data?.postId\n                            }\n                          });\n                        }\n                  }\n                  variant=\"contained\"\n                  startIcon={<SendIcon />}\n                  color=\"info\"\n                  sx={{ display: isApplied && 'none' }}\n                >\n                  Nộp hồ sơ\n                </Button>\n                <Typography display={!isApplied && 'none'} color=\"red\">\n                  Bạn đã nộp đơn ứng tuyển\n                </Typography>\n                <FollowJobButton job={data} />\n              </Box>\n            )}\n          </Box>\n        </Grid>\n      </Grid>\n      <ModalApply\n        open={openFormApply}\n        postId={data?.postId}\n        onClose={onCloseFormApply}\n        position={data?.jobTitle}\n        company={data?.employer?.companyName}\n        job={data}\n      />\n    </CustomContainer>\n  );\n};\n\nexport default CardApply;\n","import { Box, Typography } from '@mui/material';\nimport CustomContainer from 'src/components/CustomContainer';\nimport { InfoGrid } from 'src/modules/users/profile/Information/InfoField';\nimport BusinessIcon from '@mui/icons-material/Business';\nimport { rewriteUrl } from 'src/utils/rewriteUrl';\nimport Link from 'src/components/Link';\nimport { textAlign } from 'html2canvas/dist/types/css/property-descriptors/text-align';\n\nconst CompanyData = (company) => [\n  { label: 'Tên công ty', value: company?.companyName },\n  { label: 'Địa chỉ công ty', value: company?.companyLocation },\n  { label: 'Lĩnh vực', value: company?.careerField },\n  { label: 'Giới thiệu doanh nghiệp', value: company?.description }\n];\n\nexport default function CompanyInfoTab(props) {\n  const { sx, company, companyPage = false } = props;\n\n  return (\n    <CustomContainer sx={{ px: 5, ...sx, minHeight: 300 }}>\n      <Box\n        sx={{ display: { xs: 'normal', sm: 'flex' } }}\n        justifyContent=\"space-between\"\n      >\n        <Box display=\"flex\">\n          <BusinessIcon color=\"primary\" sx={{ fontSize: { sm: 56, xs: 46 } }} />\n          <Typography\n            fontWeight={700}\n            sx={{ fontSize: { sm: 22, xs: 20 } }}\n            lineHeight={3}\n          >\n            Thông tin công ty\n          </Typography>\n        </Box>\n        {!companyPage && (\n          <Link\n            to={`/company/${rewriteUrl(company?.companyName)}?id=${btoa(\n              company?.userId\n            )}`}\n            sx={{\n              textDecoration: 'none',\n              alignContent: 'center'\n            }}\n          >\n            Xem trang công ty\n          </Link>\n        )}\n      </Box>\n      {CompanyData(company)?.map((item, index) => (\n        <InfoGrid key={index} item={item} />\n      ))}\n    </CustomContainer>\n  );\n}\n","import { AxiosError } from 'axios';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { useApp } from 'src/modules/app/hooks';\nimport { FollowJobService } from '../jobService';\n\nconst useMutateFollowJobById = () => {\n  const queryClient = useQueryClient();\n  const { toast } = useApp();\n  const { mutate: onFollowJobById, isLoading } = useMutation<\n    ResponseData<any[]>,\n    AxiosError<ResponseData<any[]>>,\n    [id: number]\n  >(([id]) => FollowJobService.create({ jobPosting: id }), {\n    onSuccess: (res) => {\n      if (res.status === 200) {\n        queryClient.invalidateQueries(['get-FollowJobs']);\n        toast.success({ massage: res.message });\n      } else {\n        toast.error({ massage: res.message });\n      }\n    },\n    onError: (error) => {\n      toast.error({ massage: error.response.data.message });\n    }\n  });\n\n  return {\n    onFollowJobById,\n    isLoading\n  };\n};\n\nexport default useMutateFollowJobById;\n","import { useEffect, useState } from 'react';\nimport { Box } from '@mui/material';\nimport useMutateFollowJobById from '../hooks/useMutateFollowJobById';\nimport { useApp } from 'src/modules/app/hooks';\nimport FollowButton from 'src/components/FollowButton';\nimport useFollowJobList from 'src/modules/jobs/hooks/useFollowJobList';\nimport useJobList from '../hooks/useJobList';\nimport useQueryFollowJobs from '../hooks/useQueryFollowJobs';\n\nexport default function FollowJobButton(props) {\n  const { job, sx } = props;\n  const { onFollowJobById } = useMutateFollowJobById();\n  const { isEmployee } = useApp();\n  const [isFollow, setIsFollow] = useState(false);\n  const { followJobsList } = useFollowJobList();\n  const { jobList } = useJobList();\n  useQueryFollowJobs({ jobIds: jobList?.join(',') });\n\n  const handleToggleFollow = (id) => {\n    onFollowJobById([id]);\n    setIsFollow((prev) => !prev);\n  };\n\n  useEffect(() => {\n    if (!job || !followJobsList?.length) return;\n    const foundItem = followJobsList?.includes(job?.postId);\n    foundItem && setIsFollow(true);\n  }, [JSON.stringify(followJobsList), JSON.stringify(job)]);\n\n  if (!job || !isEmployee) return;\n\n  return (\n    <Box\n      onClick={() => handleToggleFollow(job?.postId)}\n      sx={{ display: 'flex', alignItem: 'center', ...sx }}\n    >\n      <FollowButton isFollow={isFollow} />\n    </Box>\n  );\n}\n","import { useAppDispatch, useAppSelector } from 'src/redux/hooks';\nimport {\n  selectFollowJobList,\n  setFollowJobList as setFollowJobListAction,\n  resetFollowJobList as reset\n} from '../followJobSlice';\n\nconst useFollowJobList = () => {\n  const { data: followJobsList } = useAppSelector(selectFollowJobList);\n  const dispatch = useAppDispatch();\n\n  const setFollowJobList = (data: number[]) => {\n    dispatch(setFollowJobListAction(data));\n  };\n\n  const resetFollowJobList = () => {\n    dispatch(reset());\n  };\n\n  return {\n    followJobsList,\n    setFollowJobList,\n    resetFollowJobList\n  };\n};\n\nexport default useFollowJobList;\n","import { useAppDispatch, useAppSelector } from 'src/redux/hooks';\nimport {\n  selectJob,\n  setItemDetail as setItemDetailAction,\n  resetItemDetail as resetItemDetailAction\n} from '../jobSlice';\nimport { Job } from '../model';\n\nconst useJob = () => {\n  const { itemDetail } = useAppSelector(selectJob);\n  const dispatch = useAppDispatch();\n\n  const setItemDetail = (data: Partial<Job>) => {\n    dispatch(setItemDetailAction(data));\n  };\n\n  const resetItemDetail = () => {\n    dispatch(resetItemDetailAction());\n  };\n\n  return {\n    itemDetail,\n    setItemDetail,\n    resetItemDetail\n  };\n};\n\nexport default useJob;\n","import { AxiosError } from 'axios';\nimport { useQuery } from 'react-query';\nimport { PaginationType, ResponseData } from 'src/common/http-request';\nimport { FollowJobType } from '../model';\nimport { FollowJobService } from '../jobService';\nimport { useApp } from 'src/modules/app/hooks';\nimport useFollowJobList from 'src/modules/jobs/hooks/useFollowJobList';\n\nconst useQueryFollowJobs = (params?) => {\n  const { isEmployee } = useApp();\n  const { setFollowJobList } = useFollowJobList();\n  const { data, isLoading, refetch } = useQuery<\n    ResponseData<PaginationType<FollowJobType[]>>,\n    AxiosError<ResponseData<FollowJobType[]>>\n  >(\n    ['get-FollowJobs', params],\n    () =>\n      FollowJobService.get({ params }).then((res) => {\n        if (res.data?.meta?.itemCount) {\n          const idList: number[] = res.data?.items?.map(\n            (item: FollowJobType) => item.postId\n          );\n          setFollowJobList(idList);\n        }\n        return res;\n      }),\n    {\n      keepPreviousData: true,\n      retry: 1,\n      refetchOnWindowFocus: false,\n      enabled: isEmployee\n    }\n  );\n\n  return {\n    jobFollow: data?.data?.items,\n    totalPages: data?.data?.meta?.totalPages,\n    isLoading,\n    refetch\n  };\n};\n\nexport default useQueryFollowJobs;\n","import { AxiosError } from 'axios';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { useApp } from 'src/modules/app/hooks';\nimport { Company } from '../model';\nimport { SetCompany } from '../userService';\n\nconst useMutateCompany = () => {\n  const queryClient = useQueryClient();\n  const { toast } = useApp();\n  const mutationFunction = SetCompany.create;\n  const { mutate: onSaveData, isLoading } = useMutation<\n    ResponseData<Company>,\n    AxiosError<ResponseData<Company>>,\n    Company\n  >(mutationFunction, {\n    onSuccess: (res) => {\n      if (res.status === 200) {\n        queryClient.invalidateQueries('get-Company');\n        toast.success({ massage: res.message });\n      } else {\n        toast.error({ massage: res.message });\n      }\n    },\n    onError: (error) => {\n      toast.error({ massage: error.response.data.message });\n    }\n  });\n  return {\n    onSaveData,\n    isLoading\n  };\n};\n\nexport default useMutateCompany;\n","import { Box, Button, Grid } from '@mui/material';\nimport { useForm } from 'react-hook-form';\nimport DatePicker from 'src/components/DatePicker';\nimport FormControl from 'src/components/FormControl';\nimport SelectInput from 'src/components/SelectInput';\nimport { Company, User } from '../../model';\nimport {\n  CAREER_FIELDS,\n  GENDER,\n  ISMARRIED,\n  ISMARRIED_OPTION,\n  PROFESSION\n} from 'src/constants/option';\nimport dayjs from 'dayjs';\nimport useMutateUserData from '../../hooks/useMutateUserHook';\nimport useMutateCompany from '../../hooks/useMutateCompany';\nimport TextField from 'src/components/TextField';\nimport { toInputDateString, toOutputDateString } from 'src/utils/formatData';\nimport ButtonGroup from 'src/components/ButtonGroup';\nimport { useApp } from 'src/modules/app/hooks';\nimport { setUser } from 'src/modules/app/appSlice';\nimport Autocomplete from 'src/components/Autocomplete';\n\nexport function UserForm(props) {\n  const { isEmployee } = useApp();\n  const { close, user } = props;\n  const { onSaveData: onSaveUser } = useMutateUserData();\n\n  const {\n    control,\n    handleSubmit,\n    formState: { errors }\n  } = useForm<User>({\n    defaultValues: {\n      ...user,\n      dob: toInputDateString(user.dob as string, 'DD-MM-YYYY'),\n      sex: GENDER.find((item) => item.label === user.sex)?.value,\n      isMarried: user.isMarried ? 'Đã kết hôn' : 'Độc thân'\n    }\n  });\n\n  const handleSaveProfile = async (data) => {\n    const formattedDob = toOutputDateString(data.dob);\n    const isMarried = data.isMarried === 'Đã kết hôn' ? '1' : '0';\n    const newData = { ...data, dob: formattedDob, isMarried: isMarried };\n    onSaveUser(newData);\n    setUser(newData);\n    close();\n  };\n\n  return (\n    <Box sx={{ p: 3 }}>\n      <Grid container spacing={3} mb={4}>\n        <Grid item xs={12} sm={6}>\n          <FormControl\n            element={<TextField />}\n            control={control}\n            errors={errors}\n            fullWidth\n            id=\"name\"\n            label=\"Họ và tên\"\n            name=\"name\"\n            required\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <FormControl\n            element={<TextField />}\n            control={control}\n            errors={errors}\n            disabled\n            fullWidth\n            id=\"email\"\n            label=\"Email\"\n            name=\"email\"\n            required\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <FormControl\n            element={<TextField />}\n            control={control}\n            errors={errors}\n            fullWidth\n            id=\"phone\"\n            label=\"Số điện thoại\"\n            name=\"phone\"\n            pattern=\"phone\"\n            required\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <FormControl\n            element={<TextField />}\n            control={control}\n            errors={errors}\n            fullWidth\n            id=\"address\"\n            label=\"Địa chỉ\"\n            name=\"address\"\n            multiline\n            required\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <FormControl\n            element={<DatePicker maxDate={dayjs()} />}\n            control={control}\n            errors={errors}\n            fullWidth\n            id=\"dob\"\n            label=\"Ngày sinh\"\n            name=\"dob\"\n            required\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <FormControl\n            element={<SelectInput />}\n            options={GENDER}\n            control={control}\n            errors={errors}\n            fullWidth\n            id=\"sex\"\n            label=\"Giới tính\"\n            name=\"sex\"\n            required\n          />\n        </Grid>\n        {isEmployee && (\n          <Grid item xs={12} sm={6}>\n            <FormControl\n              element={<SelectInput />}\n              options={ISMARRIED_OPTION}\n              control={control}\n              errors={errors}\n              fullWidth\n              id=\"isMarried\"\n              label=\"Tình trạng hôn nhân\"\n              name=\"isMarried\"\n              required\n            />\n          </Grid>\n        )}\n      </Grid>\n      <ButtonGroup\n        handleSubmit={handleSubmit(handleSaveProfile)}\n        handleCancel={() => close()}\n      />\n    </Box>\n  );\n}\n\nexport function CompanyForm(props) {\n  const { close, user } = props;\n  const { onSaveData: onSaveCompany } = useMutateCompany();\n  const {\n    control,\n    handleSubmit,\n    formState: { errors }\n  } = useForm<Company>({\n    defaultValues: {\n      ...user\n    }\n  });\n\n  const handleSaveCompany = (data) => {\n    onSaveCompany(data);\n    close();\n  };\n  return (\n    <Box sx={{ p: 3 }}>\n      <Grid container spacing={3} mb={4}>\n        <Grid item xs={12}>\n          <FormControl\n            element={<TextField />}\n            control={control}\n            errors={errors}\n            fullWidth\n            id=\"companyName\"\n            label=\"Tên công ty\"\n            name=\"companyName\"\n            multiline\n            required\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <FormControl\n            element={<TextField />}\n            control={control}\n            errors={errors}\n            fullWidth\n            id=\"taxCode\"\n            label=\"Mã số thuế\"\n            name=\"taxCode\"\n            required\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <FormControl\n            element={<TextField />}\n            control={control}\n            errors={errors}\n            fullWidth\n            id=\"companyLocation\"\n            label=\"Địa chỉ\"\n            name=\"companyLocation\"\n            required\n            multiline\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <FormControl\n            element={\n              <Autocomplete\n                size=\"small\"\n                freeSolo={true}\n                options={CAREER_FIELDS}\n                autoComplete\n                autoSelect\n                autoHighlight\n                multiple={false}\n                defaultValue={user?.careerField}\n              />\n            }\n            control={control}\n            errors={errors}\n            fullWidth\n            name=\"careerField\"\n            label=\"Lĩnh vực\"\n            required\n          />\n        </Grid>\n\n        <Grid item xs={12}>\n          <FormControl\n            element={<TextField />}\n            control={control}\n            errors={errors}\n            fullWidth\n            multiline\n            maxRows={6}\n            minRows={3}\n            id=\"description\"\n            label=\"Mô tả công ty\"\n            name=\"description\"\n          />\n        </Grid>\n      </Grid>\n      <ButtonGroup\n        handleSubmit={handleSubmit(handleSaveCompany)}\n        handleCancel={() => close()}\n      />\n    </Box>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Button,\n  Grid,\n  Typography,\n  Container,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  styled,\n  Divider\n} from '@mui/material';\nimport AutoFixHighOutlinedIcon from '@mui/icons-material/AutoFixHighOutlined';\nimport { CompanyForm, UserForm } from './EditForm';\nimport EditButton from 'src/components/EditButton';\nimport { useResponsive } from 'src/utils/responsive';\n\nexport const InputLabel = styled(Grid)(({ theme }) => {\n  const { isMobile } = useResponsive();\n  return {\n    fontFamily: theme.typography.fontFamily,\n    fontWeight: 700,\n    minHeight: isMobile ? 35 : 50,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: isMobile ? 'center' : 'left'\n  };\n});\n\nexport const InputData = styled(Grid)(({ theme }) => {\n  const { isMobile } = useResponsive();\n  return {\n    fontFamily: theme.typography.fontFamily,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: isMobile ? 'center' : 'left'\n  };\n});\n\nexport const InfoGrid = (props) => {\n  const { item } = props;\n  const [more, setMore] = useState(false);\n  return (\n    <Grid container sx={{ borderTop: 1, borderColor: 'grey.300' }}>\n      {item.label !== 'Giới thiệu doanh nghiệp' && (\n        <>\n          <InputLabel item xs={12} sm={6} md={4}>\n            {item.label}\n          </InputLabel>\n          <InputData item xs={12} sm={6} md={8}>\n            <Typography\n              sx={{\n                textAlign: { xs: 'center', md: 'left' },\n                lineHeight: { xs: 1.5, md: 2 }\n              }}\n            >\n              {item.value}\n            </Typography>\n          </InputData>\n        </>\n      )}\n      {item.label === 'Giới thiệu doanh nghiệp' && item.value && (\n        <>\n          <InputLabel item xs={12}>\n            {item.label}\n          </InputLabel>\n          <InputData item xs={12}>\n            <Typography\n              sx={{\n                overflow: 'hidden',\n                textOverflow: 'ellipsis',\n                display: '-webkit-box',\n                WebkitLineClamp: more ? 100 : 3,\n                WebkitBoxOrient: 'vertical',\n                textAlign: { xs: 'center', md: 'left' },\n                lineHeight: {\n                  xs: 1.5,\n                  md: 2\n                }\n              }}\n            >\n              {item.value}\n            </Typography>\n          </InputData>\n          <Button\n            onClick={() => {\n              setMore((prev) => !prev);\n            }}\n            sx={{ mx: 'auto' }}\n            color=\"secondary\"\n          >\n            {more ? 'Thu gọn' : 'Đọc thêm'}\n          </Button>\n        </>\n      )}\n    </Grid>\n  );\n};\n\nexport default function InfoField(props) {\n  const { isMobile } = useResponsive();\n  const { user, data, title, editIcon, openForm } = props;\n  const [open, setOpen] = useState(false);\n\n  const handleEdit = () => setOpen(true);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const myForm =\n    openForm === 'User' ? (\n      <UserForm close={handleClose} user={user} />\n    ) : (\n      <CompanyForm close={handleClose} user={user} />\n    );\n\n  return (\n    <Container sx={{ paddingX: 2 }}>\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Box display=\"flex\" alignItems={'end'}>\n          {editIcon}\n          <Typography\n            fontWeight={700}\n            sx={{\n              fontSize: { md: 22, xs: 18 },\n              lineHeight: { md: 2, xs: 1.5 }\n            }}\n          >\n            {title}\n          </Typography>\n        </Box>\n        <EditButton onClick={handleEdit} />\n        <Dialog\n          open={open}\n          onClose={handleClose}\n          fullWidth\n          maxWidth={'md'}\n          fullScreen={isMobile}\n        >\n          <DialogTitle\n            sx={{\n              textAlign: 'center',\n              fontWeight: 700,\n              fontSize: { md: '1.3rem', xs: '1rem' }\n            }}\n          >\n            {title}\n          </DialogTitle>\n          <Divider />\n          <DialogContent>{myForm}</DialogContent>\n        </Dialog>\n      </Box>\n      <Box sx={{ mt: 1 }}>\n        {data.map((item, index) => (\n          <InfoGrid item={item} key={index} />\n        ))}\n      </Box>\n    </Container>\n  );\n}\n","import ApartmentIcon from '@mui/icons-material/Apartment';\nimport ArticleIcon from '@mui/icons-material/Article';\nimport DateRangeIcon from '@mui/icons-material/DateRange';\nimport EventAvailableIcon from '@mui/icons-material/EventAvailable';\nimport GppGoodIcon from '@mui/icons-material/GppGood';\nimport HowToRegIcon from '@mui/icons-material/HowToReg';\nimport PeopleIcon from '@mui/icons-material/People';\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\nimport WcIcon from '@mui/icons-material/Wc';\nimport {\n  Avatar,\n  Box,\n  Container,\n  Divider,\n  Grid,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Typography\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { TextParser } from 'src/components/TextEditor';\nimport { Job } from '../model';\nimport CakeIcon from '@mui/icons-material/Cake';\nimport dayjs from 'dayjs';\n\nconst CommonInfo = styled(Box)(({ theme }) => ({\n  padding: 10,\n  backgroundColor: '#F0FFF0',\n  color: theme.colors.alpha.black[100],\n  borderRadius: 6\n}));\nconst AvatarWrapper = styled(Avatar)(({ theme }) => ({\n  backgroundColor: '#e6f6e6',\n  color: '#006400'\n}));\n\ntype Props = {\n  data: Partial<Job>;\n};\nconst JobContent: React.FC<Props> = ({ data }) => {\n  return (\n    <Container sx={{ height: '100%' }}>\n      <Typography variant=\"h3\" fontSize={22} noWrap marginBottom={2.5}>\n        Thông tin chung\n      </Typography>\n      <CommonInfo sx={{ minHeight: 240, width: '100%' }}>\n        <Grid container sx={{ my: 0.5 }}>\n          <Grid item xs={12} md={4}>\n            <ListItem>\n              <ListItemAvatar>\n                <AvatarWrapper>\n                  <DateRangeIcon />\n                </AvatarWrapper>\n              </ListItemAvatar>\n              <ListItemText\n                primary={dayjs(data.createAt).format('YYYY-MM-DD')}\n                secondary=\"Ngày đăng\"\n              />\n            </ListItem>\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <ListItem>\n              <ListItemAvatar>\n                <AvatarWrapper>\n                  <EventAvailableIcon />\n                </AvatarWrapper>\n              </ListItemAvatar>\n              <ListItemText\n                primary={`${data.trialPeriod} tháng`}\n                secondary=\"Thời gian thử việc\"\n              />\n            </ListItem>\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <ListItem>\n              <ListItemAvatar>\n                <AvatarWrapper>\n                  <HowToRegIcon />\n                </AvatarWrapper>\n              </ListItemAvatar>\n              <ListItemText primary={data.positionLevel} secondary=\"Cấp bậc\" />\n            </ListItem>\n          </Grid>\n        </Grid>\n        <Divider sx={{ width: '90%', margin: 'auto', my: 1 }} />\n\n        <Grid container sx={{ my: 0.5 }}>\n          <Grid item xs={12} md={4}>\n            <ListItem>\n              <ListItemAvatar>\n                <AvatarWrapper>\n                  <PeopleIcon />\n                </AvatarWrapper>\n              </ListItemAvatar>\n              <ListItemText\n                primary={data.numberOfVacancies}\n                secondary=\"Số lượng tuyển\"\n              />\n            </ListItem>\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <ListItem>\n              <ListItemAvatar>\n                <AvatarWrapper>\n                  <ArticleIcon />\n                </AvatarWrapper>\n              </ListItemAvatar>\n              <ListItemText\n                primary={data.employmentType}\n                secondary=\"Hình thức làm việc\"\n              />\n            </ListItem>\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <ListItem>\n              <ListItemAvatar>\n                <AvatarWrapper>\n                  <WcIcon />\n                </AvatarWrapper>\n              </ListItemAvatar>\n              <ListItemText\n                primary={data.sex || 'Tất cả'}\n                secondary=\"Giới tính\"\n              />\n            </ListItem>\n          </Grid>\n        </Grid>\n        <Divider sx={{ width: '90%', margin: 'auto', my: 1 }} />\n\n        <Grid container sx={{ my: 0.5 }}>\n          <Grid item xs={12} md={4}>\n            <ListItem>\n              <ListItemAvatar>\n                <AvatarWrapper>\n                  <GppGoodIcon />\n                </AvatarWrapper>\n              </ListItemAvatar>\n              <ListItemText\n                primary={data.degree}\n                secondary=\"Yêu cầu bằng cấp\"\n              />\n            </ListItem>\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <ListItem>\n              <ListItemAvatar>\n                <AvatarWrapper>\n                  <ApartmentIcon />\n                </AvatarWrapper>\n              </ListItemAvatar>\n              <ListItemText\n                primary={data.experience}\n                secondary=\"Yêu cầu kinh nghiệm\"\n              />\n            </ListItem>\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <ListItem>\n              <ListItemAvatar>\n                <AvatarWrapper>\n                  <CakeIcon />\n                </AvatarWrapper>\n              </ListItemAvatar>\n              <ListItemText\n                primary={`${data.minAge} - ${data.maxAge}`}\n                secondary=\"Độ tuổi\"\n              />\n            </ListItem>\n          </Grid>\n        </Grid>\n      </CommonInfo>\n      <Typography variant=\"h3\" fontSize={22} noWrap marginTop={2.5}>\n        Kĩ năng bắt buộc\n      </Typography>\n      <Typography marginTop={2.5}>\n        {data?.requiredSkills?.split(',')?.join(', ')}\n      </Typography>\n      <Typography variant=\"h3\" fontSize={22} noWrap marginTop={2.5}>\n        Mô tả công việc\n      </Typography>\n      <Box>\n        <TextParser content={data.jobDescription} />\n      </Box>\n      <Typography variant=\"h3\" fontSize={22} noWrap marginTop={2.5}>\n        Yêu cầu công việc\n      </Typography>\n      <Box>\n        <TextParser content={data.jobRequirements} />\n      </Box>\n      <Typography variant=\"h3\" fontSize={22} noWrap marginTop={2.5}>\n        Quyền lợi\n      </Typography>\n      <Box>\n        <TextParser content={data.benefits} />\n      </Box>\n      <Typography variant=\"h3\" fontSize={22} noWrap marginTop={2.5}>\n        Địa điểm làm việc\n      </Typography>\n      <Grid container alignItems={'center'} marginTop={2}>\n        <LocationOnIcon color=\"primary\" sx={{ marginRight: 1 }} />\n        <Box>{data.contactAddress}</Box>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default JobContent;\n","import CustomContainer from 'src/components/CustomContainer';\nimport JobContent from 'src/modules/jobs/components/JobContent';\nimport useJob from 'src/modules/jobs/hooks/useJob';\n\nfunction TabContent() {\n  const { itemDetail } = useJob();\n  return (\n    <CustomContainer sx={{ py: 3, mb: 2, minHeight: 1000 }}>\n      <JobContent data={itemDetail} />\n    </CustomContainer>\n  );\n}\n\nexport default TabContent;\n","import {\r\n  RoundOneCheck,\r\n  cvAnalysist,\r\n  extractCommonInfo,\r\n  extractSkill\r\n} from 'src/GPT/roles';\r\nimport { checkIsJSON, preProcessText } from './formatData';\r\nimport sendChatGPTRequest, { getEmbedding } from 'src/GPT/sendChatGPTRequest';\r\nimport { getFileByUrl } from 'src/common/firebaseService';\r\nimport pdfToText from 'react-pdftotext';\r\nimport { User } from 'src/modules/users/model';\r\nimport { AttachedDocument, OnlineProfile } from 'src/modules/jobProfile/model';\r\nimport { Application } from 'src/modules/application/model';\r\nimport { Job } from 'src/modules/jobs/model';\r\nimport { compareDegrees, compareExperience } from './compareEnum';\r\nimport dayjs from 'dayjs';\r\nimport { dot } from 'mathjs';\r\nimport { loadKeywords } from './keywords';\r\n\r\nexport const FAIL_SCORE = 0; // < 30\r\nexport const LOW_SCORE = 30; // 30 - 80\r\nexport const NORMAL_SCORE = 80; // 80 - 110\r\nexport const HIGH_SCORE = 110; // higher than 110\r\n\r\nexport const ratingStar = (score: number) => {\r\n  return score >= HIGH_SCORE\r\n    ? 3\r\n    : score >= NORMAL_SCORE\r\n    ? 2\r\n    : score >= LOW_SCORE\r\n    ? 1\r\n    : 0;\r\n};\r\nexport type ProfileTypeInfo = {\r\n  personal_information: User;\r\n  online_profile?: OnlineProfile;\r\n  attached_document?: AttachedDocument;\r\n  application: Partial<Omit<Application, 'applicationType'>> & {\r\n    id: number;\r\n    applicationType: string;\r\n    matchingScore: number;\r\n  };\r\n};\r\n\r\nexport type ProfileApplicationType = {\r\n  id: number;\r\n  employee_Profile: ProfileTypeInfo;\r\n  employer_Requirement: Partial<Job>;\r\n};\r\n\r\nconst fetchAndProcessCVData = async (dataToAnalyze, dataProcessor) => {\r\n  return Promise.all(\r\n    dataToAnalyze.map(async (data) => ({\r\n      ...data,\r\n      employee_Profile: await dataProcessor(data.employee_Profile)\r\n    }))\r\n  );\r\n};\r\n\r\nconst filterAndMapProfiles = (dataList) => {\r\n  return dataList\r\n    .filter((data) => data.employee_Profile)\r\n    .map(({ employee_Profile, employer_Requirement }) => ({\r\n      employee_Profile,\r\n      employer_Requirement\r\n    }));\r\n};\r\n\r\nconst preprocessText = (text) => {\r\n  if (!text) return null;\r\n\r\n  const preprocessedText = text\r\n    .replace(/[^\\w\\s,+()@.:\\/-]/g, '')\r\n    .replace(/\\s+/g, ' ');\r\n\r\n  return preprocessedText ? preprocessedText : null;\r\n};\r\n\r\nconst findMatchedProfile = (\r\n  profileId,\r\n  cvEnclosedProfileList,\r\n  attachProfileList\r\n) => {\r\n  return (\r\n    cvEnclosedProfileList.find(\r\n      (cvItem) => cvItem.employee_Profile.application.id === profileId\r\n    ) ||\r\n    attachProfileList.find(\r\n      (attachItem) => attachItem.employee_Profile.application.id === profileId\r\n    )\r\n  );\r\n};\r\n\r\nexport const preprocessJobData = (job) => ({\r\n  ...job,\r\n  jobDescription: preProcessText(job?.jobDescription),\r\n  jobRequirements: preProcessText(job?.jobRequirements),\r\n  benefits: preProcessText(job?.benefits)\r\n});\r\n\r\nexport const preprocessProfileData = (profile) => ({\r\n  ...profile,\r\n  personal_information: {\r\n    dob: profile?.employee?.user?.dob,\r\n    sex: profile?.employee?.user?.sex\r\n  }\r\n});\r\n\r\nexport const matchProfileById = (\r\n  analyzedProfile,\r\n  cvEnclosedProfileList,\r\n  attachProfileList\r\n) => {\r\n  return analyzedProfile.map((item) => {\r\n    const foundItem = findMatchedProfile(\r\n      item.id,\r\n      cvEnclosedProfileList,\r\n      attachProfileList\r\n    );\r\n    if (foundItem) return { ...item, ...foundItem };\r\n    return item;\r\n  });\r\n};\r\n\r\nexport const firstRoundForGeneralInfo = (job, profile) => {\r\n  // console.log('profile', profile);\r\n\r\n  const { personal_information, online_profile, attached_document } = profile;\r\n\r\n  const birthday = dayjs(personal_information?.dob, 'YYYY-MM-DD').isValid()\r\n    ? dayjs(personal_information?.dob, 'YYYY-MM-DD')\r\n    : dayjs(personal_information?.dob, 'DD-MM-YYYY');\r\n  const age = dayjs().year() - birthday.year();\r\n  if (\r\n    (job?.sex !== null &&\r\n      job?.sex !== 'Tất cả' &&\r\n      job?.sex !== personal_information?.sex) ||\r\n    job?.minAge > age ||\r\n    job?.maxAge < age\r\n  )\r\n    return -10;\r\n\r\n  if (online_profile && !isProfileQualified(online_profile, job)) return -10;\r\n\r\n  if (attached_document && !isProfileQualified(attached_document, job))\r\n    return -10;\r\n\r\n  return 30;\r\n};\r\n\r\nconst isProfileQualified = (profile, job) => {\r\n  const { profession, degree, experience } = profile;\r\n\r\n  const employeeProfessionList = profession\r\n    .split(',')\r\n    .map((item) => item.trim());\r\n  const jobProfessionList = job.profession\r\n    .split(',')\r\n    .map((item) => item.trim());\r\n  if (!employeeProfessionList.some((item) => jobProfessionList.includes(item)))\r\n    return false;\r\n\r\n  if (compareDegrees(degree, job?.degree) < 0) return false;\r\n\r\n  if (compareExperience(experience, job?.experience) < 0) return false;\r\n\r\n  return true;\r\n};\r\n\r\nconst handleRoundOne = async (\r\n  resetMatchingScoreList: ProfileApplicationType[],\r\n  setAnalyzedProfile: (data: ProfileApplicationType[]) => Promise<void>,\r\n  handleAnalyzeResult: (result: any[]) => Promise<void>,\r\n  handleGoToAnalyzeResult: (signal: boolean, resultData: any) => void\r\n) => {\r\n  console.log('Start round 1');\r\n  const attachedDocumentDataList = resetMatchingScoreList.filter(\r\n    (item) => item.employee_Profile.attached_document?.CV\r\n  );\r\n  const cvEnclosedDataList = resetMatchingScoreList.filter(\r\n    (item) =>\r\n      !item.employee_Profile?.online_profile &&\r\n      !item.employee_Profile.attached_document\r\n  );\r\n\r\n  const attachedDocumentList = await fetchAndProcessCVData(\r\n    attachedDocumentDataList,\r\n    readCVData\r\n  );\r\n  const cvEnclosedList = await fetchAndProcessCVData(\r\n    cvEnclosedDataList,\r\n    readEnclosedCVData\r\n  );\r\n\r\n  const attachProfileList = filterAndMapProfiles(attachedDocumentList);\r\n  const cvEnclosedProfileList = filterAndMapProfiles(cvEnclosedList);\r\n\r\n  const cvContentProfile = matchProfileById(\r\n    resetMatchingScoreList,\r\n    cvEnclosedProfileList,\r\n    attachProfileList\r\n  );\r\n\r\n  const extractPromise = async () => {\r\n    return Promise.all(\r\n      cvEnclosedProfileList.map(async (item) => {\r\n        const result = await sendChatGPTRequest(extractCommonInfo, [\r\n          item?.employee_Profile?.application?.CV\r\n        ]);\r\n\r\n        const validResult = result.filter((res) => checkIsJSON(res));\r\n\r\n        const extractedResult = validResult.map((res) => {\r\n          const jsonRes = JSON.parse(res);\r\n          return {\r\n            employee_Profile: jsonRes,\r\n            employer_Requirement: {\r\n              profession: item?.employer_Requirement?.profession,\r\n              degree: item?.employer_Requirement?.degree,\r\n              experience: item?.employer_Requirement?.experience\r\n            },\r\n            id: item?.employee_Profile?.application?.id\r\n          };\r\n        });\r\n        // result[0] + '\\n -id: ' + item?.employee_Profile?.application?.id;\r\n        return extractedResult;\r\n      })\r\n    );\r\n  };\r\n\r\n  const commonInfo = await extractPromise();\r\n\r\n  const messagesToSend = commonInfo.map((item) => {\r\n    return `\r\n    - application_id: ${item[0]?.id}\r\n    - Yêu cầu tuyển dụng: ngành nghề: [${item[0]?.employer_Requirement?.profession}]; trình độ: ${item[0]?.employer_Requirement?.degree}; kinh nghiệm: ${item[0]?.employer_Requirement?.experience};\r\n    - Thông tin hồ sơ xin việc: ngành nghề: ${item[0]?.employee_Profile?.profession}; trình độ ${item[0]?.employee_Profile?.degree}; kinh nghiệm ${item[0]?.employee_Profile?.experience}\r\n    `;\r\n  });\r\n\r\n  const response = await sendChatGPTRequest(\r\n    RoundOneCheck,\r\n    messagesToSend\r\n  ).catch(() => []);\r\n\r\n  const result = Array.isArray(response)\r\n    ? response?.filter((item) => checkIsJSON(item))\r\n    : [];\r\n  setAnalyzedProfile(cvContentProfile);\r\n  handleGoToAnalyzeResult(true, result);\r\n};\r\n\r\nconst handleRoundTwo = async (\r\n  passRoundProfiles,\r\n  handleAnalyzeResult: (result: any[]) => Promise<void>\r\n) => {\r\n  console.log('Start round 2');\r\n\r\n  const dataSendToGPT = passRoundProfiles.map((item) => {\r\n    let profile;\r\n    if (item?.employee_Profile?.online_profile) {\r\n      const onlineProfile = item?.employee_Profile?.online_profile;\r\n      profile = {\r\n        jobTitle: onlineProfile.jobTitle,\r\n        skills: onlineProfile.skills,\r\n        another_degree: (onlineProfile.another_degree || []).map(\r\n          (degree) => degree.Name\r\n        ),\r\n        education_informations: (\r\n          onlineProfile.education_informations || []\r\n        ).map((education) => education.degreeName),\r\n        work_experiences: (onlineProfile.work_experiences || []).map(\r\n          (experience) => ({\r\n            jobTitle: experience?.jobTitle,\r\n            jobDescription: experience?.jobDescription\r\n          })\r\n        )\r\n      };\r\n    } else if (item?.employee_Profile?.attached_document) {\r\n      const attachedDocument = item?.employee_Profile?.attached_document;\r\n      profile = {\r\n        skills: attachedDocument.skills,\r\n        CV: attachedDocument.CV\r\n      };\r\n    } else {\r\n      profile = item?.employee_Profile?.application.CV;\r\n    }\r\n    return {\r\n      employer_Requirement: {\r\n        requiredSkills: item.employer_Requirement.requiredSkills\r\n      },\r\n      employee_Profile: {\r\n        profile: profile,\r\n        application_id: item?.employee_Profile?.application.application_id\r\n      }\r\n    };\r\n  });\r\n\r\n  const skillList = await Promise.all(\r\n    dataSendToGPT?.map(async (item) => {\r\n      const extractRequiredSkillList = dataSendToGPT?.map(\r\n        (data) => data?.employee_Profile?.profile\r\n      );\r\n      const skillsList = await sendChatGPTRequest(\r\n        extractSkill,\r\n        extractRequiredSkillList,\r\n        null,\r\n        { '58': 5, '60': 5 }\r\n      );\r\n      return {\r\n        id: item.employee_Profile.application_id,\r\n        employee_Profile: loadKeywords(skillsList)?.split(',') || '',\r\n        employer_Requirement:\r\n          item.employer_Requirement.requiredSkills.split(',') || ''\r\n      };\r\n    })\r\n  );\r\n\r\n  const responses = (await getEmbedding(skillList)) || [];\r\n\r\n  const result = responses?.map((item) => {\r\n    const matchingSkills = item?.employer_Requirement?.filter((require) =>\r\n      item?.employee_Profile?.some((skills) => {\r\n        if (skills?.result?.length === require?.result?.length) {\r\n          return dot(skills.result, require.result) > 0.6;\r\n        } else {\r\n          console.error('Vectors must have the same number of dimensions');\r\n          return false;\r\n        }\r\n      })\r\n    );\r\n    const matchPercentage = matchingSkills\r\n      ? (100 / item?.employer_Requirement?.length) * matchingSkills.length\r\n      : 0;\r\n    return {\r\n      id: item.id,\r\n      result: matchPercentage\r\n    };\r\n  });\r\n\r\n  handleAnalyzeResult(result.map((res) => JSON.stringify(res)));\r\n};\r\n\r\nconst handleRoundThree = async (\r\n  passRoundProfiles,\r\n  handleAnalyzeResult: (result: any[]) => Promise<void>\r\n) => {\r\n  console.log('Start round 3');\r\n\r\n  try {\r\n    // Step 1: Retrieve keywords for profiles\r\n    const profilesWithKeywords = await Promise.all(\r\n      passRoundProfiles.map(async (item) => {\r\n        if (\r\n          item?.employee_Profile?.application?.applicationType !== 'Nộp nhanh'\r\n        ) {\r\n          return item;\r\n        } else {\r\n          const keywords = await loadKeywords(\r\n            await sendChatGPTRequest(cvAnalysist, [\r\n              item?.employee_Profile?.application?.CV\r\n            ])\r\n          );\r\n          return {\r\n            ...item,\r\n            employee_Profile: {\r\n              application: {\r\n                keywords\r\n              }\r\n            }\r\n          };\r\n        }\r\n      })\r\n    );\r\n\r\n    // console.log('Profiles with keywords:', profilesWithKeywords);\r\n\r\n    // Step 2: Calculate similarity scores between profiles and job requirements\r\n    const response = await getEmbedding(\r\n      profilesWithKeywords.map((item) => ({\r\n        id: item.id,\r\n        employee_Profile:\r\n          item?.employee_Profile?.application.keywords?.split(','),\r\n        employer_Requirement: item?.employer_Requirement?.keywords?.split(',')\r\n      }))\r\n    );\r\n\r\n    // Step 3: Analyze results and provide hints\r\n    const resultList = await Promise.all(\r\n      response?.map(async (item) => {\r\n        let score = item?.employee_Profile?.reduce((acc, profile) => {\r\n          const hasMatch = item?.employer_Requirement?.some((requirement) => {\r\n            const cosineSimilarity = dot(profile.result, requirement.result);\r\n            return cosineSimilarity > 0.6;\r\n          });\r\n          return hasMatch ? acc + 5 : acc;\r\n        }, 0);\r\n\r\n        const lackOfSkillsList =\r\n          item?.employer_Requirement\r\n            ?.filter(\r\n              (require) =>\r\n                !item?.employee_Profile?.some(\r\n                  (skills) => dot(skills.result, require.result) > 0.6\r\n                )\r\n            )\r\n            ?.map((require) => require.word) || [];\r\n\r\n        const hints =\r\n          lackOfSkillsList.length > 0\r\n            ? `Để tăng tỉ lệ đậu bạn có thể trang bị thêm kĩ năng: ${[\r\n                ...new Set(lackOfSkillsList)\r\n              ]\r\n                .slice(0, 4)\r\n                .join(', ')}`\r\n            : 'Hồ sơ của bạn đã đáp ứng yêu cầu của tin tuyển dụng này';\r\n\r\n        return {\r\n          id: item.id,\r\n          result: score,\r\n          hints: hints\r\n        };\r\n      })\r\n    );\r\n\r\n    // Step 4: Convert results to list and pass to the handler function\r\n    const list = resultList.map((result) => JSON.stringify(result));\r\n    await handleAnalyzeResult(list);\r\n  } catch (error) {\r\n    console.error('Error in round 3 analysis:', error);\r\n    // Handle or log the error appropriately\r\n  }\r\n};\r\n\r\nexport const fetchDataFromUrl = async (url, type) => {\r\n  try {\r\n    const filePath = await getFileByUrl(url);\r\n    const response = await fetch(filePath);\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch file');\r\n    }\r\n    const blob = await response.blob();\r\n    return pdfToText(blob);\r\n  } catch (error) {\r\n    console.error('Error fetching data:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const readCVData = async (employee_Profile) => {\r\n  if (employee_Profile?.attached_document) {\r\n    const text = await fetchDataFromUrl(\r\n      employee_Profile.attached_document.CV,\r\n      'attached_document'\r\n    );\r\n    const preprocessedText = preprocessText(text);\r\n\r\n    return preprocessedText\r\n      ? {\r\n          ...employee_Profile,\r\n          attached_document: {\r\n            ...employee_Profile.attached_document,\r\n            CV: preprocessedText\r\n          }\r\n        }\r\n      : null;\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const readEnclosedCVData = async (employee_Profile) => {\r\n  if (\r\n    employee_Profile?.application?.applicationType === 'Nộp nhanh' &&\r\n    employee_Profile?.application?.CV\r\n  ) {\r\n    const text = await fetchDataFromUrl(\r\n      employee_Profile.application.CV,\r\n      'enclosed_CV'\r\n    );\r\n    const preprocessedText = preprocessText(text);\r\n\r\n    if (preprocessedText) {\r\n      return {\r\n        ...employee_Profile,\r\n        application: { ...employee_Profile.application, CV: preprocessedText }\r\n      };\r\n    }\r\n\r\n    return employee_Profile;\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const review = async ({\r\n  round,\r\n  handleAnalyzeResult,\r\n  setIsAnalyzing,\r\n  setAnalyzedProfile,\r\n  passRoundProfiles,\r\n  resetMatchingScoreList,\r\n  handleGoToAnalyzeResult\r\n}: {\r\n  round: number;\r\n  handleAnalyzeResult: (result: any[]) => Promise<void>;\r\n  setIsAnalyzing: (data: boolean) => void;\r\n  setAnalyzedProfile?: (data: ProfileApplicationType[]) => Promise<void>;\r\n  passRoundProfiles?: ProfileApplicationType[];\r\n  resetMatchingScoreList?: ProfileApplicationType[];\r\n  handleGoToAnalyzeResult?: any;\r\n}) => {\r\n  setIsAnalyzing(true);\r\n\r\n  switch (round) {\r\n    case 1:\r\n      await handleRoundOne(\r\n        resetMatchingScoreList,\r\n        setAnalyzedProfile,\r\n        handleAnalyzeResult,\r\n        handleGoToAnalyzeResult\r\n      );\r\n      break;\r\n    case 2:\r\n      await handleRoundTwo(passRoundProfiles, handleAnalyzeResult);\r\n      break;\r\n    case 3:\r\n      await handleRoundThree(passRoundProfiles, handleAnalyzeResult);\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport const parseResponseJSONData = async (result: any[]) => {\r\n  return Promise.all(\r\n    result.map(async (data) => {\r\n      if (data?.indexOf('{') >= 0 && data?.lastIndexOf('}') >= 0)\r\n        return JSON.parse(\r\n          data.substring(data.indexOf('{'), data.lastIndexOf('}') + 1)\r\n        );\r\n    })\r\n  );\r\n};\r\n\r\nexport const getKeywords = (item) => {\r\n  return (\r\n    item?.keywords ||\r\n    item?.employee?.online_profile?.keywords ||\r\n    item?.employee?.attached_document?.keywords\r\n  );\r\n};\r\n\r\nexport const calculateMatchingScore = (\r\n  profile: any,\r\n  responses: any[],\r\n  roundOneFinished: boolean\r\n) => {\r\n  const foundItem = responses.find((res) => res?.id === profile?.id);\r\n  const profileMatchingScore =\r\n    profile?.employee_Profile?.application?.matchingScore;\r\n\r\n  if (foundItem?.result != null) {\r\n    return (profileMatchingScore || 0) + foundItem.result;\r\n  } else if (\r\n    !roundOneFinished &&\r\n    (profile?.employee_Profile?.online_profile ||\r\n      profile?.employee_Profile?.attached_document)\r\n  ) {\r\n    return firstRoundForGeneralInfo(\r\n      profile?.employer_Requirement,\r\n      profile?.employee_Profile\r\n    );\r\n  } else {\r\n    return profileMatchingScore;\r\n  }\r\n};\r\n","import { Degree, Experience } from 'src/constants/enum';\n\nexport function compareExperience(\n  employee: string,\n  requirement: string\n): number {\n  // Chuyển đổi chuỗi sang giá trị enum tương ứng\n  const employeeIndex = Object.values(Experience).indexOf(\n    employee as Experience\n  );\n  const requirementIndex = Object.values(Experience).indexOf(\n    requirement as Experience\n  );\n  // So sánh giá trị enum\n  if (employeeIndex > requirementIndex) {\n    return -1; // idx cang lon trinh do cang thap\n  } else return 1;\n}\n\nexport function compareDegrees(employee: string, requirement: string): number {\n  const employeeIndex = Object.values(Degree).indexOf(employee as Degree);\n  const requirementIndex = Object.values(Degree).indexOf(requirement as Degree);\n  // So sánh giá trị enum\n  if (employeeIndex > requirementIndex) {\n    return -1; // idx cang lon trinh do cang thap\n  } else return 1; // employee lớn hơn requirement\n}\n","export function rewriteUrl(url) {\n  const Alphabet = {\n    à: 'a',\n    á: 'a',\n    ả: 'a',\n    ã: 'a',\n    ạ: 'a',\n    ă: 'a',\n    ắ: 'a',\n    ằ: 'a',\n    ẳ: 'a',\n    ẵ: 'a',\n    ặ: 'a',\n    â: 'a',\n    ấ: 'a',\n    ầ: 'a',\n    ẩ: 'a',\n    ẫ: 'a',\n    ậ: 'a',\n    đ: 'd',\n    è: 'e',\n    é: 'e',\n    ẻ: 'e',\n    ẽ: 'e',\n    ẹ: 'e',\n    ê: 'e',\n    ế: 'e',\n    ề: 'e',\n    ể: 'e',\n    ễ: 'e',\n    ệ: 'e',\n    ì: 'i',\n    í: 'i',\n    ỉ: 'i',\n    ĩ: 'i',\n    ị: 'i',\n    ò: 'o',\n    ó: 'o',\n    ỏ: 'o',\n    õ: 'o',\n    ọ: 'o',\n    ô: 'o',\n    ố: 'o',\n    ồ: 'o',\n    ổ: 'o',\n    ỗ: 'o',\n    ộ: 'o',\n    ơ: 'o',\n    ớ: 'o',\n    ờ: 'o',\n    ở: 'o',\n    ỡ: 'o',\n    ợ: 'o',\n    ù: 'u',\n    ú: 'u',\n    ủ: 'u',\n    ũ: 'u',\n    ụ: 'u',\n    ư: 'u',\n    ứ: 'u',\n    ừ: 'u',\n    ử: 'u',\n    ữ: 'u',\n    ự: 'u',\n    ỳ: 'y',\n    ý: 'y',\n    ỷ: 'y',\n    ỹ: 'y',\n    ỵ: 'y',\n    À: 'A',\n    Á: 'A',\n    Ả: 'A',\n    Ã: 'A',\n    Ạ: 'A',\n    Ă: 'A',\n    Ắ: 'A',\n    Ằ: 'A',\n    Ẳ: 'A',\n    Ẵ: 'A',\n    Ặ: 'A',\n    Â: 'A',\n    Ấ: 'A',\n    Ầ: 'A',\n    Ẩ: 'A',\n    Ẫ: 'A',\n    Ậ: 'A',\n    Đ: 'D',\n    È: 'E',\n    É: 'E',\n    Ẻ: 'E',\n    Ẽ: 'E',\n    Ẹ: 'E',\n    Ê: 'E',\n    Ế: 'E',\n    Ề: 'E',\n    Ể: 'E',\n    Ễ: 'E',\n    Ệ: 'E',\n    Ì: 'I',\n    Í: 'I',\n    Ỉ: 'I',\n    Ĩ: 'I',\n    Ị: 'I',\n    Ò: 'O',\n    Ó: 'O',\n    Ỏ: 'O',\n    Õ: 'O',\n    Ọ: 'O',\n    Ô: 'O',\n    Ố: 'O',\n    Ồ: 'O',\n    Ổ: 'O',\n    Ỗ: 'O',\n    Ộ: 'O',\n    Ơ: 'O',\n    Ớ: 'O',\n    Ờ: 'O',\n    Ở: 'O',\n    Ỡ: 'O',\n    Ợ: 'O',\n    Ù: 'U',\n    Ú: 'U',\n    Ủ: 'U',\n    Ũ: 'U',\n    Ụ: 'U',\n    Ư: 'U',\n    Ứ: 'U',\n    Ừ: 'U',\n    Ử: 'U',\n    Ữ: 'U',\n    Ự: 'U',\n    Ỳ: 'Y',\n    Ý: 'Y',\n    Ỷ: 'Y',\n    Ỹ: 'Y',\n    Ỵ: 'Y'\n  };\n  const specialCharacter = [\n    '!',\n    '@',\n    '#',\n    '$',\n    '%',\n    '^',\n    '&',\n    '*',\n    '_',\n    '-',\n    '+',\n    '=',\n    '{',\n    '}',\n    '[',\n    ']',\n    '|',\n    '\\\\',\n    ':',\n    ';',\n    '\"',\n    \"'\",\n    '<',\n    '>',\n    ',',\n    '.',\n    '/',\n    '?',\n    ' '\n  ];\n\n  let chuoiKhongDau = '';\n  for (var i = 0; i < url?.length; i++) {\n    if (Alphabet[url[i]]) {\n      chuoiKhongDau += Alphabet[url[i]];\n    } else if (!specialCharacter.includes(url[i])) {\n      // Không thay đổi các khoảng trắng\n      chuoiKhongDau += url[i];\n    } else if (!chuoiKhongDau.endsWith('-')) {\n      chuoiKhongDau += '-';\n    }\n  }\n  return chuoiKhongDau;\n}\n"],"names":["FollowButton","props","isFollow","isFollowing","setIsFollow","useState","useEffect","_jsx","Box","onClick","id","prev","sx","display","alignItem","children","FavoriteIcon","color","FavoriteBorderIcon","linkStyle","textDecoration","handleMouseEnter","e","currentTarget","style","forwardRef","ref","to","ReactLink","onMouseEnter","onMouseLeave","handleMouseLeave","defaultColor","ApplicationService","BaseService","CandidateProfilesService","UpdateStatusService","CheckApplied","useQueryAttachedDocument","isEmployee","useApp","setProfile","useDocumentHook","isLoggedIn","Boolean","getAccessToken","data","isLoading","isSuccess","refetch","useQuery","AttachedDocumentService","get","retry","failureCount","error","response","status","refetchOnWindowFocus","enabled","attachedDocument","_jsxs","alignItems","width","mr","LinearProgress","variant","minWidth","Typography","concat","Math","round","value","VisuallyHiddenInput","styled","ButtonWrapper","Button","_ref","theme","backgroundColor","colors","primary","lighter","ChipWrapper","Chip","_ref2","borderRadius","label","onChange","setIsChecked","setUrl","file","setFile","fileUrl","setFileUrl","percent","setPercent","console","log","handleUpload","date","dayjs","Date","format","storageRef","storage","name","uploadTask","uploadBytesResumable","on","snapshot","bytesTransferred","totalBytes","err","getDownloadURL","then","url","ApplicationType","cv_enclosed","component","startIcon","CloudUploadIcon","type","async","removeFileByUrl","event","target","files","accept","marginTop","LinearPercent","onDelete","deleteIcon","DeleteIcon","useMutateApplyJob","toast","queryClient","useQueryClient","mutate","onSaveData","useMutation","create","onSuccess","res","invalidateQueries","success","massage","message","onError","renderAnalyzeResult","analyzeResult","hints","rating","ratingStar","_Fragment","textAlign","fontWeight","fontSize","Rating","max","readOnly","flexDirection","mt","AnayzeProfileButton","selectedProfile","job","profileType","setShowResult","showResult","setHintsMessage","user","start","setStart","isAnalyzing","setIsAnalyzing","analyzedProfile","setAnalyzedProfile","passRoundProfiles","setPassOneProfiles","roundOneFinished","setRoundOneFinished","roundTwoFinished","setRoundTwoFinished","roundThreeFinished","setRoundThreeFinished","setAnalyzeResult","goToAnalyzeResult","setGoToAnalyzeResult","signal","resultData","setHints","finishedAll","alertDialog","hideCancelButton","title","handleSetAnalyzedProfile","handleIsAnalyzing","handleGoToAnalyzeResult","handleAnalyzeResult","result","JSON","parse","matchingScore","LOW_SCORE","_analyzedProfile$empl","_analyzedProfile$empl2","employee_Profile","online_profile","attached_document","firstRoundForGeneralInfo","employer_Requirement","_profileData","_profileData$personal","_profileData2","_profileData2$persona","_data$employee_Profil","_data$employee_Profil2","profileData","personal_information","application","CV","applicationType","dob","sex","preprocessJobData","_data$employee_Profil3","_data$employee_Profil4","_data$employee_Profil5","_data$employee_Profil6","keywords","analyzeResultData","stringify","review","resetMatchingScoreList","length","gap","LoadingButton","loading","disabled","GradeIcon","Title","margin","SubTitle","alpha","black","buttonStyle","px","ModalApply","isMobile","useResponsive","open","onClose","position","company","postId","profile","useProfileHook","onlineProfile","isLoadingOnline","useQueryOnlineProfile","isLoadingDocument","online","setOnline","useOnlineProfile","document","setDocument","isChecked","missInfo","setMissInfo","setSelectedProfile","hintsMessage","control","handleSubmit","reset","formState","errors","useForm","defaultValues","handleClose","uploadProfile","SuspenseLoader","Dialog","maxWidth","fullWidth","fullScreen","DialogTitle","DialogContent","Grid","container","spacing","item","xs","md","lg","AddIcon","bgcolor","FormControl","UploadButton","mb","fontStyle","element","TextField","required","pattern","DialogActions","justifyContent","sm","flexWrap","p","columnGap","submitProfile","v4","params","getById","keepPreviousData","isApplied","Avatar","height","objectFit","LabelText","_ref3","ValueText","_ref4","marginLeft","_ref5","_data$employer","_data$employer2","_data$employer3","_data$employer4","_data$employer5","isEmployer","isAdmin","openFormApply","setOpenFormApply","navigate","useNavigate","useQueryCheckApplied","CustomContainer","pb","minHeight","LazyLoadImage","src","employer","logo","defaultImage","companyAvatar_md","placeholderSrc","Link","rewriteUrl","companyName","btoa","userId","toString","jobTitle","PaidIcon","minSalary","maxSalary","wrap","overflow","DateRangeIcon","applicationDeadline","AccessibilityIcon","minAge","maxAge","LocationOnIcon","workAddress","handleOpenFormApply","state","from","window","location","pathname","search","SendIcon","FollowJobButton","onCloseFormApply","CompanyData","companyLocation","careerField","description","CompanyInfoTab","_CompanyData","companyPage","BusinessIcon","lineHeight","alignContent","map","index","InfoGrid","useMutateFollowJobById","onFollowJobById","FollowJobService","jobPosting","followJobsList","useFollowJobList","jobList","useJobList","useQueryFollowJobs","jobIds","join","includes","handleToggleFollow","useAppSelector","selectFollowJobList","dispatch","useAppDispatch","setFollowJobList","setFollowJobListAction","resetFollowJobList","useJob","itemDetail","selectJob","setItemDetail","setItemDetailAction","resetItemDetail","resetItemDetailAction","_data$data","_data$data2","_data$data2$meta","_res$data","_res$data$meta","meta","itemCount","_res$data2","_res$data2$items","idList","items","jobFollow","totalPages","useMutateCompany","mutationFunction","SetCompany","UserForm","_GENDER$find","close","onSaveUser","useMutateUserData","toInputDateString","GENDER","find","isMarried","multiline","DatePicker","maxDate","SelectInput","options","ISMARRIED_OPTION","ButtonGroup","formattedDob","toOutputDateString","newData","setUser","handleCancel","CompanyForm","onSaveCompany","Autocomplete","size","freeSolo","CAREER_FIELDS","autoComplete","autoSelect","autoHighlight","multiple","defaultValue","maxRows","minRows","InputLabel","fontFamily","typography","InputData","more","setMore","borderTop","borderColor","textOverflow","WebkitLineClamp","WebkitBoxOrient","mx","InfoField","editIcon","openForm","setOpen","myForm","Container","paddingX","EditButton","handleEdit","Divider","CommonInfo","padding","AvatarWrapper","_data$requiredSkills","_data$requiredSkills$","noWrap","marginBottom","my","ListItem","ListItemAvatar","ListItemText","createAt","secondary","EventAvailableIcon","trialPeriod","HowToRegIcon","positionLevel","PeopleIcon","numberOfVacancies","ArticleIcon","employmentType","WcIcon","GppGoodIcon","degree","ApartmentIcon","experience","CakeIcon","requiredSkills","split","TextParser","content","jobDescription","jobRequirements","benefits","marginRight","contactAddress","py","JobContent","score","fetchAndProcessCVData","dataToAnalyze","dataProcessor","Promise","all","filterAndMapProfiles","dataList","filter","preprocessText","text","preprocessedText","replace","preProcessText","birthday","isValid","age","year","isProfileQualified","profession","employeeProfessionList","trim","jobProfessionList","some","employee","requirement","Object","values","Degree","indexOf","Experience","compareExperience","fetchDataFromUrl","filePath","getFileByUrl","fetch","ok","Error","blob","pdfToText","readCVData","readEnclosedCVData","_employee_Profile$app","_employee_Profile$app2","attachedDocumentDataList","_item$employee_Profil","cvEnclosedDataList","_item$employee_Profil2","attachedDocumentList","cvEnclosedList","attachProfileList","cvEnclosedProfileList","cvContentProfile","matchProfileById","foundItem","findMatchedProfile","profileId","cvItem","attachItem","messagesToSend","_item$employee_Profil3","_item$employee_Profil4","sendChatGPTRequest","extractCommonInfo","checkIsJSON","_item$employer_Requir","_item$employer_Requir2","_item$employer_Requir3","_item$employee_Profil5","_item$employee_Profil6","extractPromise","_item$","_item$2","_item$2$employer_Requ","_item$3","_item$3$employer_Requ","_item$4","_item$4$employer_Requ","_item$5","_item$5$employee_Prof","_item$6","_item$6$employee_Prof","_item$7","_item$7$employee_Prof","RoundOneCheck","catch","Array","isArray","handleRoundOne","dataSendToGPT","_item$employee_Profil7","_item$employee_Profil9","_item$employee_Profil12","_item$employee_Profil8","skills","another_degree","Name","education_informations","education","degreeName","work_experiences","_item$employee_Profil10","_item$employee_Profil11","application_id","skillList","_loadKeywords","extractRequiredSkillList","skillsList","extractSkill","loadKeywords","responses","getEmbedding","_item$employer_Requir4","_item$employer_Requir5","matchingSkills","require","_item$employee_Profil13","_skills$result","_require$result","dot","matchPercentage","handleRoundTwo","profilesWithKeywords","_item$employee_Profil14","_item$employee_Profil15","_item$employee_Profil16","_item$employee_Profil17","cvAnalysist","_item$employee_Profil18","_item$employee_Profil19","_item$employer_Requir6","_item$employer_Requir7","list","_item$employee_Profil20","_item$employer_Requir9","_item$employer_Requir10","reduce","acc","_item$employer_Requir8","lackOfSkillsList","_item$employee_Profil21","word","Set","slice","handleRoundThree","parseResponseJSONData","lastIndexOf","substring","getKeywords","_item$employee","_item$employee$online","_item$employee2","_item$employee2$attac","calculateMatchingScore","_profile$employee_Pro","_profile$employee_Pro2","_profile$employee_Pro3","_profile$employee_Pro4","profileMatchingScore","Alphabet","à","á","ả","ã","ạ","ă","ắ","ằ","ẳ","ẵ","ặ","â","ấ","ầ","ẩ","ẫ","ậ","đ","è","é","ẻ","ẽ","ẹ","ê","ế","ề","ể","ễ","ệ","ì","í","ỉ","ĩ","ị","ò","ó","ỏ","õ","ọ","ô","ố","ồ","ổ","ỗ","ộ","ơ","ớ","ờ","ở","ỡ","ợ","ù","ú","ủ","ũ","ụ","ư","ứ","ừ","ử","ữ","ự","ỳ","ý","ỷ","ỹ","ỵ","À","Á","Ả","Ã","Ạ","Ă","Ắ","Ằ","Ẳ","Ẵ","Ặ","Â","Ấ","Ầ","Ẩ","Ẫ","Ậ","Đ","È","É","Ẻ","Ẽ","Ẹ","Ê","Ế","Ề","Ể","Ễ","Ệ","Ì","Í","Ỉ","Ĩ","Ị","Ò","Ó","Ỏ","Õ","Ọ","Ô","Ố","Ồ","Ổ","Ỗ","Ộ","Ơ","Ớ","Ờ","Ở","Ỡ","Ợ","Ù","Ú","Ủ","Ũ","Ụ","Ư","Ứ","Ừ","Ử","Ữ","Ự","Ỳ","Ý","Ỷ","Ỹ","Ỵ","specialCharacter","chuoiKhongDau","i","endsWith"],"sourceRoot":""}