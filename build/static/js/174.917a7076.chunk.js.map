{"version":3,"file":"static/js/174.917a7076.chunk.js","mappings":"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","sources":["components/TabWrapper/index.tsx","modules/application/applicationService.ts","modules/application/hooks/useQueryCandidateApplicationById.ts","modules/application/hooks/useQueryCandidateApplications.ts","modules/application/hooks/useMutateApplicatonStatus.ts","utils/openProfile.tsx","pages/review-candidate-profiles/Table.tsx","modules/application/hooks/useQueryTotalResultOfApplicationByEmployer.ts","pages/review-candidate-profiles/index.tsx","utils/reviewProfile.ts","utils/compareEnum.ts","../node_modules/@mui/icons-material/Check.js"],"sourcesContent":["import { Tabs, styled } from '@mui/material';\n\nconst TabsWrapper = styled(Tabs)(\n  () => `\n    .MuiTabs-scrollableX {\n    overflow-x: auto !important;\n      }\n  `\n);\nexport default TabsWrapper;\n","import BaseService from 'src/common/base-service';\n\nexport const ApplicationService = new BaseService('employee/applications');\nexport const CandidateProfilesService = new BaseService(\n  'employer/applications'\n);\nexport const UpdateStatusService = new BaseService('employer/applications');\nexport const ApplicationTotalResults = new BaseService(\n  'employer/applications/totalResults'\n);\n","import { AxiosError } from 'axios';\nimport { useQuery } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { EmployeeApplication } from '../model';\nimport { CandidateProfilesService } from '../applicationService';\nimport { useEffect, useState } from 'react';\nimport { useApp } from 'src/modules/app/hooks';\n\nexport default function useQueryCandidateApplicationById(id) {\n  const { isEmployer } = useApp();\n  if (!id) return {};\n  const { data, isLoading } = useQuery<\n    ResponseData<EmployeeApplication>,\n    AxiosError<ResponseData<EmployeeApplication>>\n  >(\n    ['application-getById', id],\n    async () => CandidateProfilesService.getById(id),\n    {\n      retry: 1,\n      refetchOnWindowFocus: false,\n      keepPreviousData: true,\n      enabled: isEmployer\n    }\n  );\n\n  return {\n    data: data?.data,\n    isLoading\n  };\n}\n\nexport function useQueryCandidateApplicationByIdList(idList: number[]) {\n  const [dataList, setDataList] = useState<ResponseData<EmployeeApplication>[]>(\n    []\n  );\n  const { data, isLoading, refetch } = useQuery<\n    ResponseData<EmployeeApplication>[],\n    AxiosError<ResponseData<EmployeeApplication>[]>\n  >(\n    ['application-getByIdList', JSON.stringify(idList)],\n    async () => {\n      if (!idList.length) return [];\n      Promise.allSettled(\n        idList.map((id) => CandidateProfilesService.getById(id))\n      )\n        .then((results) => {\n          // Lọc ra các kết quả thành công và chỉ lưu dữ liệu của các promise đã được giải quyết vào dataList\n          const fulfilledResults = results.filter(\n            (result): result is PromiseFulfilledResult<any> =>\n              result.status === 'fulfilled'\n          );\n          const dataList = fulfilledResults.map((result) => result.value);\n\n          // Cập nhật dataList\n          setDataList(dataList);\n        })\n        .catch((e) => console.log(e));\n    },\n    {\n      retry: 1,\n      refetchOnWindowFocus: false,\n      keepPreviousData: true\n    }\n  );\n\n  return {\n    data: dataList?.map((item) => item?.data),\n    isLoading,\n    refetch\n  };\n}\n","import { AxiosError } from 'axios';\nimport { useQuery } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { Application } from '../model';\nimport { CandidateProfilesService } from '../applicationService';\nimport { useApp } from 'src/modules/app/hooks';\n\nconst useQueryCandidateApplications = (params?) => {\n  const { isEmployer } = useApp();\n  const { data, isLoading, refetch, isFetching } = useQuery<\n    ResponseData<Application[]>,\n    AxiosError<ResponseData<Application[]>>\n  >(\n    [\n      'application-getList',\n      params?.page,\n      params?.status,\n      params?.matchingScore\n    ],\n    () => CandidateProfilesService.get({ params }),\n    {\n      keepPreviousData: true,\n      retry: 1,\n      refetchOnWindowFocus: false,\n      enabled: isEmployer\n    }\n  );\n\n  return {\n    data:\n      data?.data?.map((item) => ({ ...item, id: item.application_id })) || [],\n    isLoading,\n    refetch,\n    isFetching\n  };\n};\n\nexport default useQueryCandidateApplications;\n","import { AxiosError } from 'axios';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { useApp } from 'src/modules/app/hooks';\nimport { Application } from '../model';\nimport { UpdateStatusService } from '../applicationService';\n\nconst useMutateApplicationStatus = () => {\n  const queryClient = useQueryClient();\n  const { toast } = useApp();\n  const { isLoading, mutateAsync } = useMutation<\n    ResponseData<Application>,\n    AxiosError<ResponseData<Application>>,\n    [id: string, data: Partial<Application>]\n  >(([id, data]) => UpdateStatusService.update(id, data), {\n    onSuccess: (res) => {\n      if (res.status === 200) {\n        queryClient.invalidateQueries(['application-getList']);\n        toast.success({ massage: res.message });\n      } else {\n        toast.error({ massage: res.message });\n      }\n    },\n    onError: (error) => {\n      toast.error({ massage: error.response.data.message });\n    }\n  });\n\n  return {\n    onSaveApplicationStatus: mutateAsync,\n    isLoading\n  };\n};\n\nexport default useMutateApplicationStatus;\n","import React, { createElement } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport {\n  DialogContent,\n  Divider,\n  IconButton,\n  Typography,\n  styled\n} from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport CVPage from 'src/pages/view-candidate-profile/ViewCV';\nimport ThemeProvider from '../theme/ThemeProvider';\n\nfunction openProfile({ profile }) {\n  const domNode = document.createElement('div');\n  const root = createRoot(domNode);\n  document.body.appendChild(domNode);\n\n  const handleClose = () => {\n    root.unmount();\n  };\n\n  root.render(\n    <ThemeProvider>\n      <Dialog open={true} fullWidth maxWidth=\"md\">\n        <DialogTitle\n          sx={{\n            textAlign: 'center',\n            fontWeight: 700,\n            fontSize: '1.3rem'\n          }}\n        >\n          Hồ sơ người dùng\n          <IconButton\n            aria-label=\"close\"\n            onClick={handleClose}\n            sx={{\n              position: 'absolute',\n              right: 14,\n              top: 14,\n              color: (theme) => theme.palette.grey[500]\n            }}\n          >\n            <CloseIcon />\n          </IconButton>\n        </DialogTitle>\n        <Divider\n          sx={{\n            bgcolor: '#B6FFFA',\n            height: 2\n          }}\n        />\n        <DialogContent>\n          <CVPage user={profile} bgcolor=\"none\" showTitle={false} />\n        </DialogContent>\n      </Dialog>\n    </ThemeProvider>\n  );\n}\n\nexport default openProfile;\n","import Box from '@mui/material/Box';\r\nimport { GridColDef } from '@mui/x-data-grid';\r\nimport TableData from 'src/components/TableData';\r\nimport {\r\n  Button,\r\n  CircularProgress,\r\n  Container,\r\n  Grid,\r\n  Typography\r\n} from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\nimport { APPROVAL_STATUS } from 'src/constants';\r\nimport useMutateApplicationStatus from 'src/modules/application/hooks/useMutateApplicatonStatus';\r\nimport { useMemo, useState, forwardRef, useEffect } from 'react';\r\nimport SelectInput from 'src/components/SelectInput';\r\nimport useQueryCandidateApplicationById, {\r\n  useQueryCandidateApplicationByIdList\r\n} from 'src/modules/application/hooks/useQueryCandidateApplicationById';\r\nimport {\r\n  ProfileApplicationType,\r\n  preprocessJobData,\r\n  preprocessProfileData,\r\n  review,\r\n  LOW_SCORE,\r\n  NORMAL_SCORE,\r\n  HIGH_SCORE,\r\n  firstRoundForGeneralInfo,\r\n  parseResponseJSONData\r\n} from 'src/utils/reviewProfile';\r\nimport SuspenseLoader from 'src/components/SuspenseLoader';\r\nimport { useQueryJobByIdList } from 'src/modules/jobs/hooks/useQueryJobById';\r\nimport Pagination from 'src/components/Pagination';\r\nimport openProfile from 'src/utils/openProfile';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport alertDialog from 'src/utils/alertDialog';\r\nimport { ApprovalStatus } from 'src/constants/enum';\r\n\r\nconst renderJobTitle = (data) => {\r\n  if (data.value) {\r\n    return (\r\n      <Typography\r\n        sx={{\r\n          overflow: 'hidden',\r\n          textOverflow: 'ellipsis',\r\n          whiteSpace: 'wrap',\r\n          lineHeight: '1.5',\r\n          display: '-webkit-box',\r\n          WebkitLineClamp: 2,\r\n          WebkitBoxOrient: 'vertical'\r\n        }}\r\n      >\r\n        {data.value}\r\n      </Typography>\r\n    );\r\n  }\r\n};\r\n\r\nconst renderProfileName = (data) => {\r\n  const url = data?.row?.CV ? data?.row?.CV : '#';\r\n  const link = useMemo(() => {\r\n    if (!url) return '#';\r\n    return url;\r\n  }, [url]);\r\n\r\n  const { data: profile } = useQueryCandidateApplicationById(data?.row?.id);\r\n\r\n  return (\r\n    <Typography\r\n      sx={{\r\n        color: '#319fce',\r\n        ':hover': {\r\n          textDecoration: 'none',\r\n          cursor: 'pointer'\r\n        },\r\n        textDecoration: 'none'\r\n      }}\r\n      onClick={() => {\r\n        openProfile({ profile: profile });\r\n      }}\r\n    >\r\n      {data.value}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nconst renderStatus = (data) => {\r\n  const { onSaveApplicationStatus } = useMutateApplicationStatus();\r\n  const [value, setValue] = useState(null); // Initialize value as null\r\n\r\n  useEffect(() => {\r\n    if (!data.value || !APPROVAL_STATUS) return;\r\n    const initValue = APPROVAL_STATUS.find(\r\n      (item) => item.label === data.value\r\n    )?.value;\r\n\r\n    setValue(initValue); // Set the initial value\r\n  }, [data.value]); // Run this effect whenever data.value changes\r\n\r\n  const handleChangeValue = (newValue) => {\r\n    onSaveApplicationStatus([data.id, { status: newValue.target.value }]).then(\r\n      () => {\r\n        setValue(newValue.target.value);\r\n      }\r\n    );\r\n  };\r\n\r\n  // Return the SelectInput component\r\n  return (\r\n    <SelectInput\r\n      value={value}\r\n      options={APPROVAL_STATUS}\r\n      onChange={handleChangeValue}\r\n      sx={{\r\n        color: APPROVAL_STATUS.find((item) => item.value === value)?.optionColor\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport const renderMatchingScore = (data) => {\r\n  // if (isAnalyzing) return <CircularProgress />;\r\n  let result = '';\r\n  if (data.value >= HIGH_SCORE) result = 'Cao';\r\n  else if (data.value >= NORMAL_SCORE && data.value < HIGH_SCORE)\r\n    result = 'Trung bình';\r\n  else if (data.value >= LOW_SCORE && data.value < NORMAL_SCORE)\r\n    result = 'Thấp';\r\n  else if (data.value < 0) result = 'Không phù hợp';\r\n\r\n  return data.value === undefined || data.value === null ? (\r\n    <Typography sx={{ color: 'text.disabled', fontStyle: 'italic' }}>\r\n      Chưa xác định\r\n    </Typography>\r\n  ) : (\r\n    <Box\r\n      sx={{\r\n        width: '90%',\r\n        borderRadius: 2,\r\n        p: 1,\r\n        bgcolor:\r\n          data.value >= HIGH_SCORE\r\n            ? '#ffc107'\r\n            : data.value >= NORMAL_SCORE\r\n            ? '#A1C398'\r\n            : data.value >= LOW_SCORE\r\n            ? '#b5b5b5'\r\n            : '#efefef',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n      }}\r\n    >\r\n      {result}\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst columns: GridColDef[] = [\r\n  {\r\n    field: 'name',\r\n    headerName: 'Tên hồ sơ',\r\n    minWidth: 220,\r\n    renderCell: renderProfileName,\r\n    sortable: true\r\n  },\r\n  {\r\n    field: 'jobTitle',\r\n    headerName: 'Vị trí ứng tuyển',\r\n    minWidth: 400,\r\n    renderCell: renderJobTitle,\r\n    sortable: true\r\n  },\r\n  {\r\n    field: 'applicationType',\r\n    headerName: 'Loại hồ sơ',\r\n    minWidth: 150,\r\n    // sortable: true,\r\n    headerAlign: 'center',\r\n    align: 'center'\r\n  },\r\n  {\r\n    field: 'status',\r\n    headerName: 'Trạng thái',\r\n    minWidth: 180,\r\n    renderCell: renderStatus,\r\n    sortable: true,\r\n    headerAlign: 'center',\r\n    align: 'center'\r\n  },\r\n  {\r\n    field: 'matchingScore',\r\n    headerName: 'Độ phù hợp',\r\n    minWidth: 150,\r\n    align: 'center',\r\n    headerAlign: 'center',\r\n    renderCell: renderMatchingScore,\r\n    sortable: true\r\n  }\r\n];\r\n\r\nexport default function Table(props) {\r\n  const { pageSize, data, currentPage, totalPages, handlePageChange } = props;\r\n  // data : danh sách Application\r\n  const [analyzedProfile, setAnalyzedProfile] = useState<\r\n    ProfileApplicationType[]\r\n  >([]);\r\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\r\n  const [showList, setShowList] = useState([]);\r\n  const [roundOneFinished, setRoundOneFinished] = useState(false);\r\n  const [roundTwoFinished, setRoundTwoFinished] = useState(false);\r\n  const [roundThreeFinished, setRoundThreeFinished] = useState(false);\r\n  const [passRoundProfiles, setPassRoundProfiles] = useState<\r\n    ProfileApplicationType[]\r\n  >([]);\r\n  const [start, setStart] = useState(false);\r\n  const [goToAnalyzeResult, setGoToAnalyzeResult] = useState({\r\n    signal: false,\r\n    resultData: null\r\n  });\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const [isMappingData, setIsMappingData] = useState(true);\r\n\r\n  const applicationIdList = data?.map((item) => item?.application_id);\r\n\r\n  const jobsIdList: Set<number> = new Set(\r\n    data?.map((item) => {\r\n      return item?.jobPosting?.postId;\r\n    })\r\n  );\r\n\r\n  // Convert Set back to an array if needed\r\n  const uniqueJobsIdList: number[] = [...jobsIdList];\r\n\r\n  const { jobs, isLoading: isLoadingJobs } =\r\n    useQueryJobByIdList(uniqueJobsIdList);\r\n\r\n  const {\r\n    data: applicationDetailList,\r\n    isLoading: isLoadingApplication,\r\n    refetch\r\n  } = useQueryCandidateApplicationByIdList(applicationIdList);\r\n\r\n  const { onSaveApplicationStatus } = useMutateApplicationStatus();\r\n\r\n  const finishedAll = () => {\r\n    setStart(false);\r\n    setRoundOneFinished(false);\r\n    setRoundTwoFinished(false);\r\n    setRoundThreeFinished(false);\r\n    setIsAnalyzing(false);\r\n    setPassRoundProfiles([]);\r\n    setGoToAnalyzeResult({ signal: false, resultData: null });\r\n    setAnalyzedProfile(matchJobAndProfile());\r\n  };\r\n\r\n  const handleSetAnalyzedProfile = async (data: ProfileApplicationType[]) => {\r\n    setAnalyzedProfile(data);\r\n  };\r\n\r\n  const handleIsAnalyzing = (data: boolean) => {\r\n    setIsAnalyzing(data);\r\n  };\r\n\r\n  const handleGoToAnalyzeResult = (signal: boolean, resultData) => {\r\n    setGoToAnalyzeResult({ signal: signal, resultData: resultData });\r\n  };\r\n\r\n  const handleAnalyzeResult = async (result: any[]) => {\r\n    const responses = await parseResponseJSONData(result);\r\n    const updatedAnalyzedProfile = updateAnalyzedProfile(responses);\r\n\r\n    updateRoundStates(updatedAnalyzedProfile);\r\n  };\r\n\r\n  const updateAnalyzedProfile = (responses: any[]) => {\r\n    return analyzedProfile.map((profile) => {\r\n      const matchingScore = calculateMatchingScore(profile, responses);\r\n      console.log('matchingScore', matchingScore);\r\n\r\n      return {\r\n        ...profile,\r\n        employee_Profile: {\r\n          ...profile?.employee_Profile,\r\n          application: {\r\n            ...profile?.employee_Profile?.application,\r\n            matchingScore\r\n          }\r\n        }\r\n      };\r\n    });\r\n  };\r\n\r\n  const calculateMatchingScore = (profile: any, responses: any[]) => {\r\n    const foundItem = responses.find((res) => res?.id === profile?.id);\r\n    if (foundItem?.result !== undefined) {\r\n      return profile?.employee_Profile?.application?.matchingScore !== undefined\r\n        ? profile?.employee_Profile?.application?.matchingScore +\r\n            foundItem.result\r\n        : foundItem.result;\r\n    } else if (\r\n      !roundOneFinished &&\r\n      (profile?.employee_Profile?.online_profile ||\r\n        profile?.employee_Profile?.attached_document)\r\n    ) {\r\n      return firstRoundForGeneralInfo(\r\n        profile?.employer_Requirement,\r\n        profile?.employee_Profile\r\n      );\r\n    } else {\r\n      return profile?.employee_Profile?.application?.matchingScore;\r\n    }\r\n  };\r\n\r\n  const updateRoundStates = (updatedAnalyzedProfile: any[]) => {\r\n    if (!roundOneFinished) {\r\n      const passRoundData = updatedAnalyzedProfile.filter(\r\n        (data) => data?.employee_Profile.application?.matchingScore >= LOW_SCORE\r\n      );\r\n      setPassRoundProfiles(passRoundData);\r\n    }\r\n\r\n    setAnalyzedProfile(updatedAnalyzedProfile);\r\n    const resultList = updatedAnalyzedProfile.map((profile) => ({\r\n      ...profile?.employee_Profile?.application,\r\n      id: profile.id\r\n    }));\r\n    setShowList((prev) => {\r\n      return prev.map((item) => {\r\n        const foundItem = resultList.find((res) => res?.id === item?.id);\r\n        return foundItem || item;\r\n      });\r\n    });\r\n\r\n    if (start) {\r\n      if (!roundOneFinished) setRoundOneFinished(true);\r\n      else if (!roundTwoFinished) setRoundTwoFinished(true);\r\n      else if (!roundThreeFinished) setRoundThreeFinished(true);\r\n    }\r\n  };\r\n\r\n  const matchJobAndProfile = (): ProfileApplicationType[] =>\r\n    data\r\n      ?.map((item) => {\r\n        const job = jobs?.find(\r\n          (job) => job?.postId === item?.jobPosting?.postId\r\n        );\r\n        const profile = applicationDetailList?.find(\r\n          (app) => app?.application?.application_id === item?.application_id\r\n        );\r\n\r\n        if (!job || !profile) return null;\r\n\r\n        const preprocessedJobData = preprocessJobData(job);\r\n        const preprocessedProfileData = preprocessProfileData(profile);\r\n\r\n        return {\r\n          id: item?.application_id,\r\n          employer_Requirement: preprocessedJobData,\r\n          employee_Profile: {\r\n            ...preprocessedProfileData,\r\n            application: {\r\n              ...preprocessedProfileData.application,\r\n              jobTitle: job?.jobTitle,\r\n              keywords: preprocessedProfileData?.application?.keywords\r\n                ? preprocessedProfileData?.application?.keywords\r\n                : preprocessedProfileData?.online_profile\r\n                ? profile?.online_profile.keywords\r\n                : preprocessedProfileData?.attached_document?.keywords\r\n            }\r\n          }\r\n        };\r\n      })\r\n      .filter(Boolean);\r\n\r\n  const handleReview = () => {\r\n    if (!roundOneFinished) {\r\n      // Round 1: Reset matching scores and start round 1\r\n      const resetScoreList = analyzedProfile\r\n        .filter((item) => {\r\n          return selectedRows.includes(item.id);\r\n        })\r\n        .map((profile) => ({\r\n          ...profile,\r\n          employee_Profile: {\r\n            ...profile.employee_Profile,\r\n            application: {\r\n              ...profile.employee_Profile.application,\r\n              matchingScore: null\r\n            }\r\n          }\r\n        }));\r\n\r\n      setAnalyzedProfile(resetScoreList);\r\n      review({\r\n        round: 1,\r\n        handleAnalyzeResult,\r\n        setIsAnalyzing: handleIsAnalyzing,\r\n        resetMatchingScoreList: resetScoreList,\r\n        setAnalyzedProfile: handleSetAnalyzedProfile,\r\n        handleGoToAnalyzeResult\r\n      });\r\n    } else if (!roundTwoFinished && passRoundProfiles.length > 0) {\r\n      // Round 2: Proceed to round 2 if round 1 is finished\r\n      review({\r\n        round: 2,\r\n        handleAnalyzeResult,\r\n        setIsAnalyzing: handleIsAnalyzing,\r\n        passRoundProfiles\r\n      });\r\n    } else if (!roundThreeFinished) {\r\n      // Round 3: Proceed to round 3 if round 2 is finished\r\n      review({\r\n        round: 3,\r\n        handleAnalyzeResult,\r\n        setIsAnalyzing: handleIsAnalyzing,\r\n        passRoundProfiles\r\n      });\r\n    } else {\r\n      // All rounds finished, save matching scores and finish all\r\n      Promise.all(\r\n        showList\r\n          .filter((item) => {\r\n            return selectedRows.includes(item.id);\r\n          })\r\n          .map((item) =>\r\n            onSaveApplicationStatus([\r\n              item.id,\r\n              { matchingScore: item.matchingScore }\r\n            ])\r\n          )\r\n      ).then(() => {\r\n        refetch();\r\n      });\r\n      finishedAll();\r\n      console.log('Finished All');\r\n    }\r\n  };\r\n\r\n  const handleQuickApprove = () => {\r\n    alertDialog({\r\n      selectedId: '_',\r\n      handleConfirm,\r\n      message: `Chuyển các hồ sơ đã chọn sang trạng thái ${ApprovalStatus[quickApproveValue]}?`\r\n    });\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    Promise.all(\r\n      selectedRows.map((id) =>\r\n        onSaveApplicationStatus([id, { status: quickApproveValue }])\r\n      )\r\n    ).then(() => {\r\n      refetch();\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (goToAnalyzeResult.signal) {\r\n      handleAnalyzeResult(goToAnalyzeResult.resultData);\r\n    }\r\n  }, [goToAnalyzeResult.signal]);\r\n\r\n  // First time render the page\r\n  useEffect(() => {\r\n    setIsMappingData(true);\r\n    console.log(111);\r\n\r\n    if (!jobs.length || !applicationDetailList.length || start) return;\r\n\r\n    const initialJobProfileData = matchJobAndProfile();\r\n\r\n    const resultList = initialJobProfileData?.map((item) => {\r\n      item.employee_Profile.application.id = item.id;\r\n      return item.employee_Profile.application;\r\n    });\r\n\r\n    if (JSON.stringify(resultList) !== JSON.stringify(showList)) {\r\n      console.log('showList', resultList);\r\n\r\n      setShowList(() => resultList);\r\n    }\r\n\r\n    // Check if the profile values are really different\r\n    if (\r\n      JSON.stringify(initialJobProfileData) !== JSON.stringify(analyzedProfile)\r\n    ) {\r\n      setAnalyzedProfile(initialJobProfileData);\r\n    }\r\n    setIsMappingData(false);\r\n  }, [\r\n    JSON.stringify(data),\r\n    JSON.stringify(jobs),\r\n    JSON.stringify(applicationDetailList)\r\n  ]);\r\n\r\n  // Start Round 1, 2, 3\r\n  useEffect(() => {\r\n    if (!start) return;\r\n    handleReview();\r\n  }, [start, roundOneFinished, roundTwoFinished, roundThreeFinished]);\r\n\r\n  const [quickApproveValue, setQuickApproveValue] = useState(null);\r\n  const handleChangeValue = (e) => {\r\n    setQuickApproveValue(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          display: 'block',\r\n          float: { md: 'right' },\r\n          minWidth: { md: 500 },\r\n          maxWidth: 500\r\n        }}\r\n      >\r\n        <Grid\r\n          container\r\n          sx={{\r\n            alignItems: 'center'\r\n          }}\r\n          spacing={1}\r\n        >\r\n          <Grid item md={3} xs={12}>\r\n            <Typography\r\n              fontWeight={700}\r\n              textAlign={'center'}\r\n              sx={{ mt: { xs: 2, md: 0 } }}\r\n            >\r\n              Đã chọn: {selectedRows.length}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item md={5} xs={12} display={'flex'}>\r\n            <SelectInput\r\n              options={APPROVAL_STATUS}\r\n              onChange={handleChangeValue}\r\n              value={selectedRows.length > 0 ? quickApproveValue : ''}\r\n              sx={{\r\n                color: APPROVAL_STATUS.find(\r\n                  (item) => item.value === quickApproveValue\r\n                )?.optionColor\r\n              }}\r\n              disabled={!selectedRows.length}\r\n              label=\"Duyệt nhanh\"\r\n            />\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              color=\"info\"\r\n              sx={{\r\n                py: 1,\r\n                px: 0\r\n              }}\r\n              onClick={handleQuickApprove}\r\n              disabled={!selectedRows.length || !quickApproveValue}\r\n            >\r\n              <CheckIcon sx={{ fontSize: 15 }} />\r\n            </Button>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            md={4}\r\n            xs={12}\r\n            sx={{\r\n              display: 'flex',\r\n              alignItems: 'center'\r\n            }}\r\n          >\r\n            <Button\r\n              onClick={() => setStart(selectedRows.length > 0)}\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              disabled={start || !selectedRows.length}\r\n              fullWidth\r\n              sx={{ py: 1, px: 0 }}\r\n            >\r\n              <Grid item xs={!isAnalyzing ? 12 : 9}>\r\n                {!selectedRows.length\r\n                  ? 'Chưa chọn hồ sơ'\r\n                  : !start\r\n                  ? 'Phân tích nhanh'\r\n                  : 'Đang phân tích'}\r\n              </Grid>\r\n              <Grid item xs={isAnalyzing ? 3 : 0}>\r\n                {isAnalyzing && (\r\n                  <CircularProgress size={18} color=\"secondary\" />\r\n                )}\r\n              </Grid>\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n      <TableData\r\n        rows={showList}\r\n        columns={columns}\r\n        initialState={{\r\n          pagination: {\r\n            paginationModel: {\r\n              pageSize: pageSize\r\n            }\r\n          }\r\n        }}\r\n        hideFooter\r\n        sx={{ height: '74vh', width: '100%' }}\r\n        checkboxSelection\r\n        // disableRowSelectionOnClick\r\n        rowSelection={true}\r\n        onRowSelectionModelChange={(ids) => {\r\n          setSelectedRows(ids);\r\n        }}\r\n        loading={isLoadingApplication || isLoadingJobs || isMappingData}\r\n      />\r\n      <Pagination\r\n        currentPage={currentPage}\r\n        totalPages={totalPages}\r\n        handlePageChange={handlePageChange}\r\n        disabled={start}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { AxiosError } from 'axios';\nimport { useQuery } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { ApplicationTotalResults } from '../applicationService';\nimport { useApp } from 'src/modules/app/hooks';\n\ninterface responseType {\n  totalResults: number;\n}\n\nconst useQueryTotalResultOfApplicationByEmployer = (params?) => {\n  const { isEmployer } = useApp();\n  const { data, isLoading } = useQuery<\n    ResponseData<responseType>,\n    AxiosError<ResponseData<responseType>>\n  >(\n    ['application-getList', params?.page, params?.status],\n    () => ApplicationTotalResults.get({ params }),\n    {\n      retry: 1,\n      refetchOnWindowFocus: false,\n      keepPreviousData: true,\n      enabled: isEmployer\n    }\n  );\n\n  return {\n    totalResults: data?.data?.totalResults,\n    isLoading\n  };\n};\n\nexport default useQueryTotalResultOfApplicationByEmployer;\n","import {\n  Card,\n  CardContent,\n  CardHeader,\n  Container,\n  Divider,\n  Grid,\n  Tab,\n  Tabs,\n  styled\n} from '@mui/material';\nimport useQueryCandidateApplications from 'src/modules/application/hooks/useQueryCandidateApplications';\nimport Table from './Table';\nimport SuspenseLoader from 'src/components/SuspenseLoader';\nimport { useEffect, useState } from 'react';\nimport useQueryTotalResultOfApplicationByEmployer from 'src/modules/application/hooks/useQueryTotalResultOfApplicationByEmployer';\nimport TabsWrapper from 'src/components/TabWrapper';\nimport Pagination from 'src/components/Pagination';\n\nconst tabs = [\n  { label: 'Tất cả', value: '' },\n  { label: 'Đã duyệt', value: 'Đã duyệt' },\n  { label: 'Chờ duyệt', value: 'Chờ duyệt' },\n  { label: 'Từ chối', value: 'Từ chối' },\n  { label: 'Hết hạn', value: 'Hết hạn' }\n];\n\nconst CandidateProfiles = () => {\n  const pageSize = 9;\n  const [currentQuery, setCurrentQuery] = useState({\n    currentPage: 1,\n    currentTab: ''\n  });\n  const { data, isLoading: isLoadingData } = useQueryCandidateApplications({\n    page: currentQuery.currentPage,\n    num: pageSize,\n    status: currentQuery.currentTab\n  });\n  const { totalResults, isLoading: isLoadingTotalResults } =\n    useQueryTotalResultOfApplicationByEmployer({\n      status: currentQuery.currentTab\n    });\n\n  const handleTabsChange = (e, value) => {\n    setCurrentQuery(() => ({\n      currentPage: 1,\n      currentTab: value\n    }));\n  };\n\n  const handlePageChange = (page) => {\n    setCurrentQuery((prev) => ({\n      ...prev,\n      currentPage: page\n    }));\n  };\n\n  const totalPages = Math.ceil(totalResults / pageSize) || 1;\n  console.log('rerender 1');\n\n  if (isLoadingData || isLoadingTotalResults) return <SuspenseLoader />;\n  return (\n    <Container maxWidth=\"xl\">\n      <Grid\n        container\n        direction=\"row\"\n        justifyContent=\"center\"\n        alignItems=\"stretch\"\n        spacing={3}\n        marginTop={0}\n      >\n        <Grid item xs={12}>\n          <Card>\n            <CardHeader title=\"Danh Sách ứng viên\" />\n            <Divider />\n            <CardContent>\n              <TabsWrapper\n                onChange={handleTabsChange}\n                value={currentQuery.currentTab}\n                variant=\"scrollable\"\n                scrollButtons={false}\n                sx={{\n                  display: { md: 'inline-block' },\n                  borderBottom: 1,\n                  borderColor: 'divider'\n                }}\n              >\n                {tabs.map((tab) => {\n                  return (\n                    <Tab key={tab.value} label={tab.label} value={tab.value} />\n                  );\n                })}\n              </TabsWrapper>\n              <Table\n                data={data}\n                pageSize={pageSize}\n                currentPage={currentQuery.currentPage}\n                totalPages={totalPages}\n                handlePageChange={handlePageChange}\n              />\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default CandidateProfiles;\n","import { RoundOneCheck, extractSkill, translate } from 'src/gpt/roles';\r\nimport { preProcessText } from './inputOutputFormat';\r\nimport sendChatGPTRequest, { getEmbedding } from 'src/gpt/sendChatGPTRequest';\r\nimport { getFileByUrl } from 'src/common/firebaseService';\r\nimport pdfToText from 'react-pdftotext';\r\nimport { User } from 'src/modules/users/model';\r\nimport { AttachedDocument, OnlineProfile } from 'src/modules/jobProfile/model';\r\nimport { Application } from 'src/modules/application/model';\r\nimport { Job } from 'src/modules/jobs/model';\r\nimport { compareDegrees, compareExperience } from './compareEnum';\r\nimport dayjs from 'dayjs';\r\nimport { dot } from 'mathjs';\r\nimport { loadKeywords } from './keywords';\r\n\r\nexport const FAIL_SCORE = 0; // < 30\r\nexport const LOW_SCORE = 30; // 30 - 80\r\nexport const NORMAL_SCORE = 80; // 80 - 110\r\nexport const HIGH_SCORE = 110; // higher than 110\r\n\r\nexport type ProfileTypeInfo = {\r\n  personal_information: User;\r\n  online_profile?: OnlineProfile;\r\n  attached_document?: AttachedDocument;\r\n  application: Partial<Omit<Application, 'applicationType'>> & {\r\n    id: number;\r\n    applicationType: string;\r\n    matchingScore: number;\r\n  };\r\n};\r\n\r\nexport type ProfileApplicationType = {\r\n  id: number;\r\n  employee_Profile: ProfileTypeInfo;\r\n  employer_Requirement: Partial<Job>;\r\n};\r\n\r\nconst fetchAndProcessCVData = async (dataToAnalyze, dataProcessor) => {\r\n  return Promise.all(\r\n    dataToAnalyze.map(async (data) => ({\r\n      ...data,\r\n      employee_Profile: await dataProcessor(data.employee_Profile)\r\n    }))\r\n  );\r\n};\r\n\r\nconst filterAndMapProfiles = (dataList) => {\r\n  return dataList\r\n    .filter((data) => data.employee_Profile)\r\n    .map(({ employee_Profile, employer_Requirement }) => ({\r\n      employee_Profile,\r\n      employer_Requirement\r\n    }));\r\n};\r\n\r\nconst preprocessText = (text) => {\r\n  if (!text) return null;\r\n\r\n  const preprocessedText = text\r\n    .replace(/[^\\w\\s,+()@.:\\/-]/g, '')\r\n    .replace(/\\s+/g, ' ');\r\n\r\n  return preprocessedText ? preprocessedText : null;\r\n};\r\n\r\nconst findMatchedProfile = (\r\n  profileId,\r\n  cvEnclosedProfileList,\r\n  attachProfileList\r\n) => {\r\n  return (\r\n    cvEnclosedProfileList.find(\r\n      (cvItem) => cvItem.employee_Profile.application.id === profileId\r\n    ) ||\r\n    attachProfileList.find(\r\n      (attachItem) => attachItem.employee_Profile.application.id === profileId\r\n    )\r\n  );\r\n};\r\n\r\nexport const preprocessJobData = (job) => ({\r\n  id: job?.postId,\r\n  jobTitle: job?.jobTitle,\r\n  profession: job?.profession,\r\n  jobDescription: preProcessText(job?.jobDescription),\r\n  jobRequirements: preProcessText(job?.jobRequirements),\r\n  benefits: preProcessText(job?.benefits),\r\n  workAddress: job?.workAddress,\r\n  minAge: job?.minAge,\r\n  maxAge: job?.maxAge,\r\n  sex: job?.sex,\r\n  requiredSkills: job?.requiredSkills,\r\n  employmentType: job?.employmentType,\r\n  degree: job?.degree,\r\n  experience: job?.experience,\r\n  positionLevel: job?.positionLevel,\r\n  keywords: job?.keywords\r\n});\r\n\r\nexport const preprocessProfileData = (profile) => ({\r\n  ...profile,\r\n  personal_information: {\r\n    dob: profile?.personal_information?.dob,\r\n    sex: profile?.personal_information?.sex\r\n  }\r\n});\r\n\r\nexport const matchProfileById = (\r\n  analyzedProfile,\r\n  cvEnclosedProfileList,\r\n  attachProfileList\r\n) => {\r\n  return analyzedProfile.map((item) => {\r\n    const foundItem = findMatchedProfile(\r\n      item.id,\r\n      cvEnclosedProfileList,\r\n      attachProfileList\r\n    );\r\n    if (foundItem) return { ...item, ...foundItem };\r\n    return item;\r\n  });\r\n};\r\n\r\nexport const firstRoundForGeneralInfo = (job, profile) => {\r\n  const { personal_information, online_profile, attached_document } = profile;\r\n\r\n  const birthday = dayjs(personal_information?.dob, 'YYYY-MM-DD').isValid()\r\n    ? dayjs(personal_information?.dob, 'YYYY-MM-DD')\r\n    : dayjs(personal_information?.dob, 'DD-MM-YYYY');\r\n  const age = dayjs().year() - birthday.year();\r\n\r\n  if (\r\n    (job?.sex !== null && job?.sex !== personal_information?.sex) ||\r\n    job?.minAge > age ||\r\n    job?.maxAge < age\r\n  )\r\n    return -10;\r\n\r\n  if (online_profile && !isProfileQualified(online_profile, job)) return -10;\r\n\r\n  if (attached_document && !isProfileQualified(attached_document, job))\r\n    return -10;\r\n\r\n  return 30;\r\n};\r\n\r\nconst isProfileQualified = (profile, job) => {\r\n  const { profession, degree, experience } = profile;\r\n\r\n  const employeeProfessionList = profession.split(', ');\r\n  const jobProfessionList = job.profession.split(', ');\r\n  if (!employeeProfessionList.some((item) => jobProfessionList.includes(item)))\r\n    return false;\r\n\r\n  if (compareDegrees(degree, job?.degree) < 0) return false;\r\n\r\n  if (compareExperience(experience, job?.experience) < 0) return false;\r\n\r\n  return true;\r\n};\r\n\r\nconst handleRoundOne = async (\r\n  resetMatchingScoreList: ProfileApplicationType[],\r\n  setAnalyzedProfile: (data: ProfileApplicationType[]) => Promise<void>,\r\n  handleAnalyzeResult: (result: any[]) => Promise<void>,\r\n  handleGoToAnalyzeResult: (signal: boolean, resultData: any) => void\r\n) => {\r\n  console.log('Start round 1');\r\n  const attachedDocumentDataList = resetMatchingScoreList.filter(\r\n    (item) => item.employee_Profile.attached_document?.CV\r\n  );\r\n  const cvEnclosedDataList = resetMatchingScoreList.filter(\r\n    (item) =>\r\n      !item.employee_Profile?.online_profile &&\r\n      !item.employee_Profile.attached_document\r\n  );\r\n\r\n  const attachedDocumentList = await fetchAndProcessCVData(\r\n    attachedDocumentDataList,\r\n    readCVData\r\n  );\r\n  const cvEnclosedList = await fetchAndProcessCVData(\r\n    cvEnclosedDataList,\r\n    readEnclosedCVData\r\n  );\r\n\r\n  const attachProfileList = filterAndMapProfiles(attachedDocumentList);\r\n  const cvEnclosedProfileList = filterAndMapProfiles(cvEnclosedList);\r\n\r\n  const cvContentProfile = matchProfileById(\r\n    resetMatchingScoreList,\r\n    cvEnclosedProfileList,\r\n    attachProfileList\r\n  );\r\n  console.log('cvContentProfile', cvContentProfile);\r\n\r\n  const result = await sendChatGPTRequest(\r\n    RoundOneCheck,\r\n    cvEnclosedProfileList\r\n  ).catch(() => []);\r\n  setAnalyzedProfile(cvContentProfile);\r\n  if (result !== null && result !== undefined)\r\n    handleGoToAnalyzeResult(true, result);\r\n};\r\n\r\nconst handleRoundTwo = async (\r\n  passRoundProfiles,\r\n  handleAnalyzeResult: (result: any[]) => Promise<void>\r\n) => {\r\n  console.log('Start round 2');\r\n  const dataSendToGPT = passRoundProfiles.map((item) => {\r\n    let profile;\r\n    if (item?.employee_Profile?.online_profile) {\r\n      profile = {\r\n        jobTitle: item?.employee_Profile?.online_profile?.jobTitle,\r\n        skills: item?.employee_Profile?.online_profile.skills,\r\n        another_degree:\r\n          item?.employee_Profile?.online_profile.another_degree?.map(\r\n            (degree) => degree.Name\r\n          ),\r\n        education_informations:\r\n          item?.employee_Profile?.online_profile.education_informations?.map(\r\n            (education) => education.degreeName\r\n          ),\r\n        work_experiences:\r\n          item?.employee_Profile?.online_profile.work_experiences?.map(\r\n            (experience) => {\r\n              return {\r\n                jobTitle: experience?.jobTitle,\r\n                jobDescription: experience?.jobDescription\r\n              };\r\n            }\r\n          )\r\n      };\r\n    } else if (item?.employee_Profile?.attached_document) {\r\n      profile = {\r\n        skills: item?.employee_Profile?.attached_document.skills,\r\n        CV: item?.employee_Profile?.attached_document.CV\r\n      };\r\n    } else {\r\n      profile = item?.employee_Profile?.application.CV;\r\n    }\r\n    return {\r\n      employer_Requirement: {\r\n        requiredSkills: item.employer_Requirement.requiredSkills\r\n      },\r\n      employee_Profile: {\r\n        profile: profile,\r\n        application_id: item?.employee_Profile?.application.application_id\r\n      }\r\n    };\r\n  });\r\n\r\n  console.log(dataSendToGPT);\r\n  const skillList = await Promise.all(\r\n    dataSendToGPT.map(async (item) => {\r\n      const skillsList = await sendChatGPTRequest(\r\n        extractSkill,\r\n        [item.employee_Profile.profile],\r\n        null,\r\n        {\r\n          '58': 5,\r\n          '60': 5\r\n        }\r\n      );\r\n      // const requiredList = await sendChatGPTRequest(\r\n      //   translate,\r\n      //   [item.employer_Requirement.requiredSkills],\r\n      //   null,\r\n      //   {\r\n      //     '58': 5,\r\n      //     '60': 5\r\n      //   }\r\n      // );\r\n      return {\r\n        id: item.employee_Profile.application_id,\r\n        employee_Profile: loadKeywords(skillsList)?.split(',') || '',\r\n        employer_Requirement:\r\n          item.employer_Requirement.requiredSkills.split(',') || ''\r\n      };\r\n    })\r\n  );\r\n  const responses = await getEmbedding(skillList);\r\n\r\n  const result = responses.map((item) => {\r\n    const acc = item.employer_Requirement.filter((require) =>\r\n      item.employee_Profile.some(\r\n        (skills) => dot(skills.result, require.result) > 0.6\r\n      )\r\n    );\r\n    return {\r\n      id: item.id,\r\n      result: (100 / item.employer_Requirement.length) * acc.length\r\n    };\r\n  });\r\n\r\n  handleAnalyzeResult(result.map((res) => JSON.stringify(res)));\r\n};\r\n\r\nconst handleRoundThree = async (\r\n  passRoundProfiles,\r\n  handleAnalyzeResult: (result: any[]) => Promise<void>\r\n) => {\r\n  console.log('Start round 3');\r\n\r\n  // const traslatedKeywords = await Promise.all(\r\n  //   passRoundProfiles.map(async (item) => {\r\n  //     const skillsList = await sendChatGPTRequest(\r\n  //       translate,\r\n  //       [\r\n  //         item.employee_Profile.application.keywords,\r\n  //         item.employer_Requirement.keywords\r\n  //       ],\r\n  //       null,\r\n  //       {\r\n  //         '58': 5,\r\n  //         '60': 5\r\n  //       }\r\n  //     );\r\n  //     // const requiredList = await sendChatGPTRequest(\r\n  //     //   translate,\r\n  //     //   [item.employer_Requirement.keywords],\r\n  //     //   null,\r\n  //     //   {\r\n  //     //     '58': 5,\r\n  //     //     '60': 5\r\n  //     //   }\r\n  //     // );\r\n\r\n  //     return {\r\n  //       id: item.id,\r\n  //       employee_Profile: loadKeywords([skillsList[0]])?.split(',') || '',\r\n  //       employer_Requirement: loadKeywords([skillsList[1]])?.split(',') || ''\r\n  //     };\r\n  //   })\r\n  // );\r\n\r\n  const response = await getEmbedding(\r\n    passRoundProfiles.map((item) => ({\r\n      id: item.id,\r\n      employee_Profile: item.employer_Requirement.keywords.split(','),\r\n      employer_Requirement:\r\n        item.employee_Profile.application.keywords.split(',')\r\n    }))\r\n  );\r\n\r\n  const resultList = await Promise.all(\r\n    response.map(async (item) => {\r\n      let score = item.employee_Profile.reduce((acc, profile) => {\r\n        const hasMatch = item.employer_Requirement.some((requirement) => {\r\n          const cosineSimilarity = dot(profile.result, requirement.result);\r\n          return cosineSimilarity > 0.6;\r\n        });\r\n        return hasMatch ? acc + 5 : acc;\r\n      }, 0);\r\n\r\n      const lackOfSkillsList = await Promise.all(\r\n        item.employer_Requirement\r\n          .filter(\r\n            (require) =>\r\n              !item.employee_Profile.some(\r\n                (skills) => dot(skills.result, require.result) > 0.6\r\n              )\r\n          )\r\n          .map(async (require) => require.word)\r\n      );\r\n\r\n      // const sentence = await sendChatGPTRequest(\r\n      //   extractSkill,\r\n      //   [lackOfSkillsList],\r\n      //   null,\r\n      //   {\r\n      //     '58': 5,\r\n      //     '60': 5\r\n      //   }\r\n      // );\r\n      console.log(lackOfSkillsList);\r\n\r\n      // let skills;\r\n      // if (lackOfSkillsList.length > 0) {\r\n      //   skills = loadKeywords(lackOfSkillsList).split(',');\r\n      // }\r\n      const hints =\r\n        lackOfSkillsList.length > 0\r\n          ? `Để tăng tỉ lệ đậu bạn có thể trang bị thêm kĩ năng: ${[\r\n              ...new Set(lackOfSkillsList)\r\n            ]\r\n              .slice(0, 4)\r\n              .join(', ')}`\r\n          : 'Hồ sơ của bạn đã đáp ứng yêu cầu của tin tuyển dụng này';\r\n\r\n      // console.log('score', score);\r\n\r\n      return {\r\n        id: item.id,\r\n        result: score,\r\n        hints: hints\r\n      };\r\n    })\r\n  );\r\n\r\n  const list = resultList.map((result) => JSON.stringify(result));\r\n\r\n  handleAnalyzeResult(list);\r\n};\r\n\r\nexport const fetchDataFromUrl = async (url, type) => {\r\n  try {\r\n    const filePath = await getFileByUrl(url);\r\n    const response = await fetch(filePath);\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch file');\r\n    }\r\n    const blob = await response.blob();\r\n    return pdfToText(blob);\r\n  } catch (error) {\r\n    console.error('Error fetching data:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const readCVData = async (employee_Profile) => {\r\n  if (employee_Profile?.attached_document) {\r\n    const text = await fetchDataFromUrl(\r\n      employee_Profile.attached_document.CV,\r\n      'attached_document'\r\n    );\r\n    const preprocessedText = preprocessText(text);\r\n\r\n    return preprocessedText\r\n      ? {\r\n          ...employee_Profile,\r\n          attached_document: {\r\n            ...employee_Profile.attached_document,\r\n            CV: preprocessedText\r\n          }\r\n        }\r\n      : null;\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const readEnclosedCVData = async (employee_Profile) => {\r\n  if (\r\n    employee_Profile?.application?.applicationType === 'Nộp nhanh' &&\r\n    employee_Profile?.application?.CV\r\n  ) {\r\n    const text = await fetchDataFromUrl(\r\n      employee_Profile.application.CV,\r\n      'enclosed_CV'\r\n    );\r\n    const preprocessedText = preprocessText(text);\r\n\r\n    if (preprocessedText) {\r\n      return {\r\n        ...employee_Profile,\r\n        application: { ...employee_Profile.application, CV: preprocessedText }\r\n      };\r\n    }\r\n\r\n    return employee_Profile;\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const review = async ({\r\n  round,\r\n  handleAnalyzeResult,\r\n  setIsAnalyzing,\r\n  setAnalyzedProfile,\r\n  passRoundProfiles,\r\n  resetMatchingScoreList,\r\n  handleGoToAnalyzeResult\r\n}: {\r\n  round: number;\r\n  handleAnalyzeResult: (result: any[]) => Promise<void>;\r\n  setIsAnalyzing: (data: boolean) => void;\r\n  setAnalyzedProfile?: (data: ProfileApplicationType[]) => Promise<void>;\r\n  passRoundProfiles?: ProfileApplicationType[];\r\n  resetMatchingScoreList?: ProfileApplicationType[];\r\n  handleGoToAnalyzeResult?: any;\r\n}) => {\r\n  setIsAnalyzing(true);\r\n\r\n  switch (round) {\r\n    case 1:\r\n      await handleRoundOne(\r\n        resetMatchingScoreList,\r\n        setAnalyzedProfile,\r\n        handleAnalyzeResult,\r\n        handleGoToAnalyzeResult\r\n      );\r\n      break;\r\n    case 2:\r\n      await handleRoundTwo(passRoundProfiles, handleAnalyzeResult);\r\n      break;\r\n    case 3:\r\n      await handleRoundThree(passRoundProfiles, handleAnalyzeResult);\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport const parseResponseJSONData = async (result: any[]) => {\r\n  return Promise.all(\r\n    result.map(\r\n      async (data) =>\r\n        data &&\r\n        JSON.parse(data.substring(data.indexOf('{'), data.lastIndexOf('}') + 1))\r\n    )\r\n  );\r\n};\r\n","import { Degree, Experience } from 'src/constants/enum';\nimport { findObjectKey } from './inputOutputFormat';\n\nexport function compareExperience(\n  employee: string,\n  requirement: string\n): number {\n  // Chuyển đổi chuỗi sang giá trị enum tương ứng\n  const employeeIndex = Object.values(Experience).indexOf(\n    employee as Experience\n  );\n  const requirementIndex = Object.values(Experience).indexOf(\n    employee as Experience\n  );\n  // So sánh giá trị enum\n  if (employeeIndex > requirementIndex) {\n    return -1; // idx cang lon trinh do cang thap\n  } else return 1;\n}\n\nexport function compareDegrees(employee: string, requirement: string): number {\n  const employeeIndex = Object.values(Degree).indexOf(employee as Degree);\n  const requirementIndex = Object.values(Degree).indexOf(requirement as Degree);\n  // So sánh giá trị enum\n  if (employeeIndex > requirementIndex) {\n    return -1; // idx cang lon trinh do cang thap\n  } else return 1; // employee lớn hơn requirement\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\nexports.default = _default;"],"names":["styled","Tabs","ApplicationService","BaseService","CandidateProfilesService","UpdateStatusService","ApplicationTotalResults","useQueryCandidateApplicationById","id","isEmployer","useApp","data","isLoading","useQuery","async","getById","retry","refetchOnWindowFocus","keepPreviousData","enabled","useQueryCandidateApplicationByIdList","idList","dataList","setDataList","useState","refetch","JSON","stringify","length","Promise","allSettled","map","then","results","filter","result","status","value","catch","e","console","log","item","params","_data$data","isFetching","page","matchingScore","get","application_id","useMutateApplicationStatus","queryClient","useQueryClient","toast","mutateAsync","useMutation","_ref","update","onSuccess","res","invalidateQueries","success","massage","message","error","onError","response","onSaveApplicationStatus","profile","domNode","document","createElement","root","createRoot","body","appendChild","render","_jsx","ThemeProvider","children","_jsxs","Dialog","open","fullWidth","maxWidth","DialogTitle","sx","textAlign","fontWeight","fontSize","IconButton","onClick","handleClose","unmount","position","right","top","color","theme","palette","grey","CloseIcon","Divider","bgcolor","height","DialogContent","CVPage","user","showTitle","columns","field","headerName","minWidth","renderCell","_data$row","_data$row2","_data$row3","url","row","CV","useMemo","Typography","textDecoration","cursor","openProfile","sortable","overflow","textOverflow","whiteSpace","lineHeight","display","WebkitLineClamp","WebkitBoxOrient","headerAlign","align","_APPROVAL_STATUS$find2","setValue","useEffect","_APPROVAL_STATUS$find","APPROVAL_STATUS","initValue","find","label","SelectInput","options","onChange","newValue","target","optionColor","HIGH_SCORE","NORMAL_SCORE","LOW_SCORE","undefined","fontStyle","Box","width","borderRadius","p","justifyContent","alignItems","Table","props","_APPROVAL_STATUS$find3","pageSize","currentPage","totalPages","handlePageChange","analyzedProfile","setAnalyzedProfile","isAnalyzing","setIsAnalyzing","showList","setShowList","roundOneFinished","setRoundOneFinished","roundTwoFinished","setRoundTwoFinished","roundThreeFinished","setRoundThreeFinished","passRoundProfiles","setPassRoundProfiles","start","setStart","goToAnalyzeResult","setGoToAnalyzeResult","signal","resultData","selectedRows","setSelectedRows","isMappingData","setIsMappingData","applicationIdList","uniqueJobsIdList","Set","_item$jobPosting","jobPosting","postId","jobs","isLoadingJobs","useQueryJobByIdList","applicationDetailList","isLoadingApplication","handleSetAnalyzedProfile","handleIsAnalyzing","handleGoToAnalyzeResult","handleAnalyzeResult","responses","parseResponseJSONData","updatedAnalyzedProfile","updateAnalyzedProfile","updateRoundStates","_profile$employee_Pro","calculateMatchingScore","employee_Profile","application","_profile$employee_Pro6","_profile$employee_Pro7","foundItem","_profile$employee_Pro2","_profile$employee_Pro3","_profile$employee_Pro4","_profile$employee_Pro5","_profile$employee_Pro8","_profile$employee_Pro9","online_profile","attached_document","firstRoundForGeneralInfo","employer_Requirement","passRoundData","_data$employee_Profil","resultList","_profile$employee_Pro10","prev","matchJobAndProfile","_preprocessedProfileD","_preprocessedProfileD2","_preprocessedProfileD3","job","_item$jobPosting2","app","_app$application","preprocessedJobData","preprocessJobData","preprocessedProfileData","preprocessProfileData","jobTitle","keywords","Boolean","handleReview","review","round","all","includes","resetScoreList","resetMatchingScoreList","handleConfirm","quickApproveValue","initialJobProfileData","setQuickApproveValue","_Fragment","float","md","Grid","container","spacing","xs","mt","disabled","Button","variant","size","py","px","handleQuickApprove","alertDialog","selectedId","concat","ApprovalStatus","CheckIcon","CircularProgress","TableData","rows","initialState","pagination","paginationModel","hideFooter","checkboxSelection","rowSelection","onRowSelectionModelChange","ids","loading","Pagination","totalResults","tabs","CandidateProfiles","currentQuery","setCurrentQuery","currentTab","isLoadingData","useQueryCandidateApplications","num","isLoadingTotalResults","useQueryTotalResultOfApplicationByEmployer","Math","ceil","SuspenseLoader","Container","direction","marginTop","Card","CardHeader","title","CardContent","TabsWrapper","handleTabsChange","scrollButtons","borderBottom","borderColor","tab","Tab","fetchAndProcessCVData","dataToAnalyze","dataProcessor","filterAndMapProfiles","preprocessText","text","preprocessedText","replace","profession","jobDescription","preProcessText","jobRequirements","benefits","workAddress","minAge","maxAge","sex","requiredSkills","employmentType","degree","experience","positionLevel","_profile$personal_inf","_profile$personal_inf2","personal_information","dob","birthday","dayjs","isValid","age","year","isProfileQualified","employeeProfessionList","split","jobProfessionList","some","employee","requirement","Object","values","Degree","indexOf","Experience","compareExperience","fetchDataFromUrl","type","filePath","getFileByUrl","fetch","ok","Error","blob","pdfToText","readCVData","readEnclosedCVData","_employee_Profile$app","_employee_Profile$app2","applicationType","_ref2","attachedDocumentDataList","_item$employee_Profil","cvEnclosedDataList","_item$employee_Profil2","attachedDocumentList","cvEnclosedList","attachProfileList","cvEnclosedProfileList","cvContentProfile","matchProfileById","findMatchedProfile","profileId","cvItem","attachItem","sendChatGPTRequest","RoundOneCheck","handleRoundOne","dataSendToGPT","_item$employee_Profil3","_item$employee_Profil13","_item$employee_Profil17","_item$employee_Profil4","_item$employee_Profil5","_item$employee_Profil6","_item$employee_Profil7","_item$employee_Profil8","_item$employee_Profil9","_item$employee_Profil10","_item$employee_Profil11","_item$employee_Profil12","skills","another_degree","Name","education_informations","education","degreeName","work_experiences","_item$employee_Profil14","_item$employee_Profil15","_item$employee_Profil16","skillList","_loadKeywords","skillsList","extractSkill","loadKeywords","getEmbedding","acc","require","dot","handleRoundTwo","score","reduce","lackOfSkillsList","word","hints","slice","join","handleRoundThree","parse","substring","lastIndexOf","_interopRequireDefault","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}