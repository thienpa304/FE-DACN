{"version":3,"file":"static/js/586.da8993e5.chunk.js","mappings":"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","sources":["components/LinkText/index.tsx","modules/jobs/hooks/useQueryJobByOwner.ts","modules/jobs/hooks/useDeleteJobById.ts","pages/company-job-list/TablePost.tsx","pages/company-job-list/index.tsx","../node_modules/@mui/icons-material/DeleteOutline.js","../node_modules/@mui/icons-material/Edit.js","../node_modules/@mui/icons-material/RemoveRedEye.js"],"sourcesContent":["import { styled } from '@mui/material';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst LinkWrapper = styled(Link)(({ theme }) => ({\n  textDecoration: 'none',\n  color: theme.colors.info.dark,\n  '&:active': {\n    color: theme.colors.primary.light\n  },\n  '&:visited': {\n    color: theme.colors.info.dark\n  }\n}));\nconst LinkText = (props) => {\n  return <LinkWrapper {...props} />;\n};\n\nexport default LinkText;\n","import { AxiosError } from 'axios';\nimport { useQuery } from 'react-query';\nimport { PaginationType, ResponseData } from 'src/common/http-request';\nimport { JobService } from '../jobService';\nimport { Job } from '../model';\nimport { useApp } from 'src/modules/app/hooks';\n\ntype PropsType = {\n  totalResults: number;\n  result: Job[];\n};\nconst useQueryJobByOwner = (params?) => {\n  const { isEmployer } = useApp();\n  const { data, isLoading } = useQuery<\n    ResponseData<PaginationType<Job[]>>,\n    AxiosError<ResponseData<Job[]>>\n  >(['jobOwner-getList', params], () => JobService.get({ params }), {\n    retry: 1,\n    refetchOnWindowFocus: false,\n    keepPreviousData: true,\n    enabled: isEmployer\n  });\n\n  return {\n    jobs:\n      data?.data?.items?.map((item) => ({ ...item, id: item.postId })) || [],\n    totalResults: data?.data?.meta?.totalItems,\n    totalPages: data?.data?.meta?.totalPages,\n    isLoading\n  };\n};\n\nexport default useQueryJobByOwner;\n","import { AxiosError } from 'axios';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { useApp } from 'src/modules/app/hooks';\nimport { JobService } from '../jobService';\nimport { Job } from '../model';\n\nconst useDeleteJobById = () => {\n  const queryClient = useQueryClient();\n  const { toast } = useApp();\n  const { mutate: onDeleteById, isLoading } = useMutation<\n    ResponseData<Job>,\n    AxiosError<ResponseData<Job>>,\n    [id: string]\n  >(([id]) => JobService.remove(id), {\n    onSuccess: (res) => {\n      if (res.status === 200) {\n        queryClient.invalidateQueries(['jobOwner-getList']);\n        toast.success({ massage: res.message });\n      } else {\n        toast.error({ massage: res.message });\n      }\n    },\n    onError: (error) => {\n      toast.error({ massage: error.response.data.message });\n    }\n  });\n\n  return {\n    onDeleteById,\n    isLoading\n  };\n};\n\nexport default useDeleteJobById;\n","import { GridColDef } from '@mui/x-data-grid';\r\nimport LinkText from 'src/components/LinkText';\r\nimport TableData from 'src/components/TableData';\r\nimport RemoveRedEyeIcon from '@mui/icons-material/RemoveRedEye';\r\nimport { Chip, Grid, useTheme } from '@mui/material';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { APPROVAL_STATUS } from 'src/constants';\r\nimport { TypographyEllipsis } from 'src/components/Typography';\r\nimport dayjs from 'dayjs';\r\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\r\nimport useDeleteJobById from 'src/modules/jobs/hooks/useDeleteJobById';\r\nimport alertDialog from 'src/utils/alertDialog';\r\nimport { rewriteUrl } from 'src/utils/rewriteUrl';\r\nimport ReadMoreIcon from '@mui/icons-material/ReadMore';\r\nimport detailsModal from 'src/utils/detailsModal';\r\nimport { useState } from 'react';\r\nimport { ViewJobDetail } from '../company-review-profiles/Table';\r\nimport { handleSort } from 'src/utils/sortData';\r\nimport { useResponsive } from 'src/utils/responsive';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport const renderJobTitle = (data) => {\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const { isMobile } = useResponsive();\r\n\r\n  const handleOpenDetailModal = () => {\r\n    const detailsData = {\r\n      'Tên tin đăng': data?.row?.jobTitle,\r\n      'Ngày đăng tin': dayjs(data?.row?.createdAt).format('DD/MM/YYYY'),\r\n      'Hạn nộp hồ sơ': dayjs(data?.row?.expiredAt).format('DD/MM/YYYY'),\r\n      'Lượt nộp': data?.row?.submissionCount,\r\n      'Lượt xem': data?.row?.view,\r\n      'Trạng thái': data?.row?.status\r\n    };\r\n    detailsModal(detailsData);\r\n  };\r\n  return (\r\n    <>\r\n      <Grid container alignItems={'center'}>\r\n        <Grid item xs={0} sm={1} display={!isMobile ? 'inline' : 'none'}>\r\n          <Tooltip title=\"Xem trực tiếp\">\r\n            <IconButton\r\n              size=\"small\"\r\n              onClick={() => setSelectedId(data?.row?.postId)}\r\n            >\r\n              <RemoveRedEyeIcon\r\n                sx={{ width: '100%', height: 18, color: 'gray' }}\r\n              />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Grid>\r\n        <Grid item xs={10.5} sm={11}>\r\n          <LinkText to=\"\" onClick={() => setSelectedId(data?.row?.postId)}>\r\n            <TypographyEllipsis>{data.value}</TypographyEllipsis>\r\n          </LinkText>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={1.5}\r\n          sm={0}\r\n          sx={{ display: { sm: 'none', xs: 'inline' } }}\r\n        >\r\n          <Tooltip title=\"Chi tiết\">\r\n            <IconButton size=\"small\" onClick={handleOpenDetailModal}>\r\n              <ReadMoreIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Grid>\r\n      </Grid>\r\n      <ViewJobDetail postId={selectedId} setSelectedId={setSelectedId} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport const renderStatus = (data) => {\r\n  const color = APPROVAL_STATUS.find((item) => item.label === data.value).color;\r\n  return (\r\n    <Chip label={data.value} size=\"small\" color={color} variant=\"outlined\" />\r\n  );\r\n};\r\n\r\nconst rederDate = (data) => {\r\n  const date = dayjs(data?.value).format('DD/MM/YYYY');\r\n  return <>{date}</>;\r\n};\r\n\r\nconst renderAtion = (data) => {\r\n  const { onDeleteById } = useDeleteJobById();\r\n  const navigate = useNavigate();\r\n\r\n  const handleConfirmDelete = (id) => {\r\n    onDeleteById([id]);\r\n  };\r\n\r\n  const handleDelete = (data) => {\r\n    if (data?.row?.applications?.length > 0) {\r\n      alertDialog({\r\n        message: 'Tin tuyển đã có ứng viên, bạn không thể xóa tin đăng này!',\r\n        hideCancelButton: true\r\n      });\r\n      return;\r\n    }\r\n    alertDialog({\r\n      selectedId: data.id,\r\n      handleConfirm: handleConfirmDelete,\r\n      message: `Bạn có chắc chắn muốn xóa tin đăng ${data?.row?.jobTitle}?`\r\n    });\r\n  };\r\n\r\n  const handleEdit = (data) => {\r\n    if (data?.row?.applications?.length > 0) {\r\n      alertDialog({\r\n        message:\r\n          'Tin tuyển dụng đã có ứng viên, bạn không thể chỉnh sửa tin tuyển dụng này!',\r\n        hideCancelButton: true\r\n      });\r\n      return;\r\n    }\r\n    navigate(\r\n      `/employer/recruitment/list/${rewriteUrl(data?.row?.jobTitle)}?id=${btoa(\r\n        data?.id\r\n      )}`\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconButton onClick={() => handleEdit(data)}>\r\n        <EditIcon />\r\n      </IconButton>\r\n      <IconButton onClick={() => handleDelete(data)}>\r\n        <DeleteOutlineIcon />\r\n      </IconButton>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default function TablePost({ data, pageSize, setSortModel }) {\r\n  const { isMobile } = useResponsive();\r\n  const columns: GridColDef[] = [\r\n    {\r\n      field: 'jobTitle',\r\n      headerName: 'Tên tin đăng',\r\n      minWidth: isMobile ? 220 : 400,\r\n      maxWidth: isMobile ? 270 : 450,\r\n      headerAlign: 'center',\r\n      renderCell: renderJobTitle,\r\n      sortable: true\r\n    },\r\n    {\r\n      field: 'createAt',\r\n      headerName: 'Ngày đăng tin',\r\n      minWidth: 150,\r\n      headerAlign: 'center',\r\n      align: 'center',\r\n      renderCell: rederDate,\r\n      sortable: true\r\n    },\r\n    {\r\n      field: 'applicationDeadline',\r\n      headerName: 'Hạn nộp hồ sơ',\r\n      minWidth: 150,\r\n      headerAlign: 'center',\r\n      align: 'center',\r\n      renderCell: rederDate,\r\n      sortable: true\r\n    },\r\n    {\r\n      field: 'submissionCount',\r\n      headerName: 'Lượt nộp',\r\n      minWidth: 100,\r\n      headerAlign: 'center',\r\n      align: 'center',\r\n      sortable: true\r\n    },\r\n    {\r\n      field: 'view',\r\n      headerName: 'Lượt xem',\r\n      minWidth: 100,\r\n      headerAlign: 'center',\r\n      align: 'center',\r\n      sortable: true\r\n    },\r\n    {\r\n      field: 'status',\r\n      headerName: 'Trạng thái',\r\n      minWidth: 120,\r\n      headerAlign: 'center',\r\n      align: 'center',\r\n      renderCell: renderStatus\r\n    },\r\n    {\r\n      field: 'action',\r\n      headerName: 'Thao tác',\r\n      width: isMobile ? 80 : 120,\r\n      headerAlign: 'center',\r\n      align: 'center',\r\n      renderCell: renderAtion\r\n    }\r\n  ];\r\n  return (\r\n    <TableData\r\n      rows={data}\r\n      columns={columns}\r\n      initialState={{\r\n        pagination: {\r\n          paginationModel: {\r\n            pageSize: pageSize\r\n          }\r\n        },\r\n        columns: {\r\n          columnVisibilityModel: {\r\n            createAt: !isMobile,\r\n            applicationDeadline: !isMobile,\r\n            submissionCount: !isMobile,\r\n            view: !isMobile,\r\n            status: !isMobile\r\n          }\r\n        }\r\n      }}\r\n      onSortModelChange={(newSortModel) => {\r\n        handleSort(newSortModel, setSortModel);\r\n      }}\r\n      hideFooter\r\n      sx={{ height: '74vh', width: '100%' }}\r\n    />\r\n  );\r\n}\r\n","import {\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Container,\n  Divider,\n  Grid,\n  Tab,\n  Tabs\n} from '@mui/material';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport useQueryJobByOwner from 'src/modules/jobs/hooks/useQueryJobByOwner';\nimport TablePost from 'src/pages/company-job-list/TablePost';\nimport TabsWrapper from 'src/components/TabWrapper';\nimport Pagination from 'src/components/Pagination';\nimport SuspenseLoader from 'src/components/SuspenseLoader';\n\nexport const tabs = [\n  { label: 'Tất cả', value: '' },\n  { label: 'Đã duyệt', value: 'Đã duyệt' },\n  { label: 'Chờ duyệt', value: 'Chờ duyệt' },\n  { label: 'Từ chối', value: 'Từ chối' },\n  { label: 'Hết hạn', value: 'Hết hạn' }\n];\n\nconst JobList = () => {\n  const pageSize = 9;\n  const [currentTab, setCurrentTab] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [sortModel, setSortModel] = useState({ orderBy: '', sort: '' });\n  const { jobs, totalResults, isLoading, totalPages } = useQueryJobByOwner({\n    status: currentTab,\n    page: currentPage,\n    num: pageSize,\n    orderBy: sortModel.orderBy,\n    sort: sortModel.sort\n  });\n\n  const handleTabsChange = (e, value) => {\n    setCurrentTab(value);\n    setCurrentPage(1);\n  };\n\n  if (isLoading) return <SuspenseLoader />;\n  return (\n    <Container maxWidth=\"xl\">\n      <Grid\n        container\n        direction=\"row\"\n        justifyContent=\"center\"\n        alignItems=\"stretch\"\n        spacing={3}\n        marginTop={0}\n      >\n        <Grid item xs={12}>\n          <Card>\n            <CardHeader\n              title=\"Danh Sách Tin Tuyển Dụng\"\n              action={\n                <Link to={'/employer/recruitment/create'}>\n                  <Button variant=\"contained\" size=\"small\" sx={{ my: 0 }}>\n                    Tạo tin tuyển dụng\n                  </Button>\n                </Link>\n              }\n            />\n            <Divider />\n            <CardContent>\n              <TabsWrapper\n                onChange={handleTabsChange}\n                value={currentTab}\n                variant=\"scrollable\"\n                scrollButtons={false}\n                sx={{\n                  display: { md: 'inline-block' },\n                  borderBottom: 1,\n                  borderColor: 'divider'\n                }}\n              >\n                {tabs.map((tab) => {\n                  return (\n                    <Tab key={tab.value} label={tab.label} value={tab.value} />\n                  );\n                })}\n              </TabsWrapper>\n              <TablePost\n                data={jobs || []}\n                pageSize={pageSize}\n                setSortModel={setSortModel}\n              />\n              <Pagination\n                currentPage={currentPage}\n                totalPages={totalPages}\n                handlePageChange={setCurrentPage}\n              />\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default JobList;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9zm7.5-5-1-1h-5l-1 1H5v2h14V4z\"\n}), 'DeleteOutline');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'RemoveRedEye');\nexports.default = _default;"],"names":["LinkWrapper","styled","Link","_ref","theme","textDecoration","color","colors","info","dark","primary","light","props","_jsx","params","_data$data","_data$data$items","_data$data2","_data$data2$meta","_data$data3","_data$data3$meta","isEmployer","useApp","data","isLoading","useQuery","JobService","get","retry","refetchOnWindowFocus","keepPreviousData","enabled","jobs","items","map","item","id","postId","totalResults","meta","totalItems","totalPages","useDeleteJobById","queryClient","useQueryClient","toast","mutate","onDeleteById","useMutation","remove","onSuccess","res","status","invalidateQueries","success","massage","message","error","onError","response","renderJobTitle","selectedId","setSelectedId","useState","isMobile","useResponsive","_jsxs","_Fragment","children","Grid","container","alignItems","xs","sm","display","Tooltip","title","IconButton","size","onClick","_data$row7","row","RemoveRedEyeIcon","sx","width","height","LinkText","to","_data$row8","TypographyEllipsis","value","handleOpenDetailModal","_data$row","_data$row2","_data$row3","_data$row4","_data$row5","_data$row6","detailsData","jobTitle","dayjs","createdAt","format","expiredAt","submissionCount","view","detailsModal","ReadMoreIcon","fontSize","ViewJobDetail","renderStatus","APPROVAL_STATUS","find","label","Chip","variant","rederDate","date","renderAtion","navigate","useNavigate","handleConfirmDelete","_data$row11","_data$row11$applicati","_data$row12","applications","length","alertDialog","hideCancelButton","concat","rewriteUrl","btoa","handleEdit","EditIcon","_data$row9","_data$row9$applicatio","_data$row10","handleConfirm","handleDelete","DeleteOutlineIcon","TablePost","pageSize","setSortModel","columns","field","headerName","minWidth","maxWidth","headerAlign","renderCell","sortable","align","TableData","rows","initialState","pagination","paginationModel","columnVisibilityModel","createAt","applicationDeadline","onSortModelChange","newSortModel","handleSort","hideFooter","tabs","JobList","currentTab","setCurrentTab","currentPage","setCurrentPage","sortModel","orderBy","sort","useQueryJobByOwner","page","num","SuspenseLoader","Container","direction","justifyContent","spacing","marginTop","Card","CardHeader","action","Button","my","Divider","CardContent","TabsWrapper","onChange","handleTabsChange","e","scrollButtons","md","borderBottom","borderColor","tab","Tab","Pagination","handlePageChange","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}