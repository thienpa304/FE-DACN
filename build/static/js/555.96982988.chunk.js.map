{"version":3,"file":"static/js/555.96982988.chunk.js","mappings":"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","sources":["components/LinkText/index.tsx","components/SelectInput/index.tsx","modules/jobs/hooks/useQueryTotalJobsEachProfession.ts","modules/jobs/hooks/useMutateJobStatus.ts","modules/jobs/hooks/useQueryTotalResultOfJobsByAdmin.ts","modules/jobs/hooks/useQueryJobByAdmin.ts","pages/recruitment-approval/Table.tsx","pages/recruitment-approval/index.tsx","utils/rewriteUrl.ts","../node_modules/@mui/icons-material/Check.js"],"sourcesContent":["import { styled } from '@mui/material';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst LinkWrapper = styled(Link)(({ theme }) => ({\r\n  textDecoration: 'none',\r\n  color: theme.colors.info.dark,\r\n  '&:active': {\r\n    color: theme.colors.primary.light\r\n  },\r\n  '&:visited': {\r\n    color: theme.colors.info.dark\r\n  }\r\n}));\r\nconst LinkText = (props) => {\r\n  return <LinkWrapper {...props} />;\r\n};\r\n\r\nexport default LinkText;\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select, { SelectChangeEvent, SelectProps } from '@mui/material/Select';\r\n\r\nexport type Option = {\r\n  value: number | string;\r\n  label: string | React.ReactElement;\r\n};\r\nexport type PropsSelectInput = SelectProps & {\r\n  options?: Option[];\r\n  labelmargintop?: string;\r\n};\r\nexport default function SelectInput(props: PropsSelectInput) {\r\n  const { options = [], label, labelmargintop = 0 } = props;\r\n  return (\r\n    <FormControl fullWidth>\r\n      <InputLabel size=\"small\" sx={{ mt: labelmargintop }}>\r\n        {label}\r\n      </InputLabel>\r\n      <Select size=\"small\" {...props}>\r\n        {options.map((item, idx) => (\r\n          <MenuItem key={idx} value={item.value}>\r\n            {item.label}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n","import { AxiosError } from 'axios';\r\nimport { useQuery } from 'react-query';\r\nimport { ResponseData } from 'src/common/http-request';\r\nimport { TotalResultEachProfession } from '../jobService';\r\n\r\ninterface responseType {\r\n  profession_value: string;\r\n  count: number;\r\n}\r\n\r\nconst useQueryTotalJobsEachProfession = (params?) => {\r\n  const { data, isLoading } = useQuery<\r\n    ResponseData<responseType[]>,\r\n    AxiosError<ResponseData<responseType[]>>\r\n  >(\r\n    ['get-TotalResultsEachProfession'],\r\n    () => TotalResultEachProfession.get({ params }),\r\n    {\r\n      retry: 1,\r\n      refetchOnWindowFocus: false\r\n    }\r\n  );\r\n\r\n  return {\r\n    dataList: data?.data,\r\n    isLoading\r\n  };\r\n};\r\n\r\nexport default useQueryTotalJobsEachProfession;\r\n","import { AxiosError } from 'axios';\r\nimport { useMutation, useQueryClient } from 'react-query';\r\nimport { ResponseData } from 'src/common/http-request';\r\nimport { useApp } from 'src/modules/app/hooks';\r\nimport { JobUpdateStatusService } from '../jobService';\r\nimport { Job } from '../model';\r\n\r\nconst useMutateJobStatus = () => {\r\n  const queryClient = useQueryClient();\r\n  const { toast } = useApp();\r\n  const { isLoading, mutateAsync } = useMutation<\r\n    ResponseData<Job>,\r\n    AxiosError<ResponseData<Job>>,\r\n    [id: string, data: Partial<Job>]\r\n  >(([id, data]) => JobUpdateStatusService.update(id, data), {\r\n    onSuccess: (res) => {\r\n      if (res.status === 200) {\r\n        queryClient.invalidateQueries(['get-AllJobsByAdmin']);\r\n        toast.success({ massage: res.message });\r\n      } else {\r\n        toast.error({ massage: res.message });\r\n      }\r\n    },\r\n    onError: (error) => {\r\n      toast.error({ massage: error.response.data.message });\r\n    }\r\n  });\r\n\r\n  return {\r\n    mutate: mutateAsync,\r\n    isLoading\r\n  };\r\n};\r\n\r\nexport default useMutateJobStatus;\r\n","import { AxiosError } from 'axios';\r\nimport { useQuery } from 'react-query';\r\nimport { ResponseData } from 'src/common/http-request';\r\nimport { TotalResultsByAdmin } from '../jobService';\r\nimport { useApp } from 'src/modules/app/hooks';\r\n\r\ninterface responseType {\r\n  totalResults: number;\r\n}\r\n\r\nconst useQueryTotalResultOfJobsByAdmin = (params?) => {\r\n  const { isAdmin } = useApp();\r\n  const { data, isLoading, refetch } = useQuery<\r\n    ResponseData<responseType>,\r\n    AxiosError<ResponseData<responseType>>\r\n  >(\r\n    ['get-TotalResults', params?.profession, params?.status],\r\n    () => {\r\n      for (const key in params) {\r\n        if (params[key] === 'Tất cả') {\r\n          params[key] = '';\r\n        }\r\n      }\r\n      return TotalResultsByAdmin.get({ params });\r\n    },\r\n    {\r\n      retry: 1,\r\n      refetchOnWindowFocus: false,\r\n      enabled: isAdmin\r\n    }\r\n  );\r\n\r\n  return {\r\n    totalResults: data?.data?.totalResults,\r\n    isLoading,\r\n    refetch\r\n  };\r\n};\r\n\r\nexport default useQueryTotalResultOfJobsByAdmin;\r\n","import { AxiosError } from 'axios';\r\nimport { useQuery } from 'react-query';\r\nimport { ResponseData } from 'src/common/http-request';\r\nimport { Job } from '../model';\r\nimport { JobUpdateStatusService } from '../jobService';\r\nimport { useApp } from 'src/modules/app/hooks';\r\n\r\nconst useQueryJobByAdmin = (params?) => {\r\n  const { isAdmin } = useApp();\r\n  const { data, isLoading, refetch } = useQuery<\r\n    ResponseData<Job[]>,\r\n    AxiosError<ResponseData<Job[]>>\r\n  >(\r\n    ['get-AllJobsByAdmin', params?.page, params?.profession, params?.status],\r\n    () => {\r\n      for (const key in params) {\r\n        if (params[key] === 'Tất cả') {\r\n          params[key] = '';\r\n        }\r\n      }\r\n      return JobUpdateStatusService.get({ params });\r\n    },\r\n    {\r\n      keepPreviousData: true,\r\n      retry: 1,\r\n      refetchOnWindowFocus: false,\r\n      enabled: isAdmin\r\n    }\r\n  );\r\n\r\n  return {\r\n    jobs: data?.data?.map((item) => ({ ...item, id: item.postId })) || [],\r\n    isLoading,\r\n    refetch\r\n  };\r\n};\r\n\r\nexport default useQueryJobByAdmin;\r\n","import Box from '@mui/material/Box';\r\nimport { GridColDef } from '@mui/x-data-grid';\r\nimport LinkText from 'src/components/LinkText';\r\nimport TableData from 'src/components/TableData';\r\nimport RemoveRedEyeIcon from '@mui/icons-material/RemoveRedEye';\r\nimport { Button, CircularProgress, Grid, Typography } from '@mui/material';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { useNavigate } from 'react-router';\r\nimport { APPROVAL_STATUS } from 'src/constants';\r\nimport SelectInput, { Option } from 'src/components/SelectInput';\r\nimport { useEffect, useState } from 'react';\r\nimport useMutateJobStatus from 'src/modules/jobs/hooks/useMutateJobStatus';\r\nimport { ApprovalStatus } from 'src/constants/enum';\r\nimport useQueryTotalResultOfJobsByAdmin from 'src/modules/jobs/hooks/useQueryTotalResultOfJobsByAdmin';\r\nimport Pagination from 'src/components/Pagination';\r\nimport useQueryJobByAdmin from 'src/modules/jobs/hooks/useQueryJobByAdmin';\r\nimport dayjs from 'dayjs';\r\nimport { Job } from 'src/modules/jobs/model';\r\nimport sendChatGPTRequest from 'src/modules/ai/sendChatGPTRequest';\r\nimport { checkContent } from 'src/modules/ai/roles';\r\nimport { rewriteUrl } from 'src/utils/rewriteUrl';\r\nimport alertDialog from 'src/utils/alertDialog';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n\r\nconst renderJobTitle = (data) => {\r\n  const jobTitle = rewriteUrl(data?.row?.jobTitle);\r\n  const navigate = useNavigate();\r\n  const handleLinkToDetail = () => {\r\n    navigate(`/job/${jobTitle}`, {\r\n      state: {\r\n        postId: data?.id\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <Box\r\n      sx={{\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n        whiteSpace: 'wrap',\r\n        lineHeight: '1.5',\r\n        display: '-webkit-box',\r\n        WebkitLineClamp: 2,\r\n        WebkitBoxOrient: 'vertical'\r\n      }}\r\n    >\r\n      <LinkText\r\n        to={`/job/${jobTitle}?id=${btoa(data.id)}`}\r\n        state={{ postId: data.id }}\r\n      >\r\n        {data.value}\r\n      </LinkText>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst renderCompany = (data) => {\r\n  return (\r\n    <Grid container alignItems={'center'}>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        sx={{\r\n          overflow: 'hidden',\r\n          textOverflow: 'ellipsis',\r\n          whiteSpace: 'wrap',\r\n          lineHeight: '1.5',\r\n          display: '-webkit-box',\r\n          WebkitLineClamp: 2,\r\n          WebkitBoxOrient: 'vertical'\r\n        }}\r\n      >\r\n        <LinkText\r\n          to={`/company/${rewriteUrl(data.value?.companyName)}?id=${btoa(\r\n            data?.value?.userId\r\n          )}`}\r\n          state={{ id: data?.value?.userId }}\r\n        >\r\n          {data.value?.companyName}\r\n        </LinkText>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst renderStatus = (data) => {\r\n  const initValue = APPROVAL_STATUS.find(\r\n    (item) => item.label === data.value\r\n  ).value;\r\n  const { mutate } = useMutateJobStatus();\r\n\r\n  const handleConfirm = (id, status) => {\r\n    mutate([id, { status: status, check: false }]);\r\n  };\r\n\r\n  const handleChangeValue = (e) => {\r\n    const value = e.target.value as ApprovalStatus;\r\n    if (data?.row.check == true && value === Object.keys(ApprovalStatus)[0]) {\r\n      alertDialog({\r\n        selectedId: data.id,\r\n        handleConfirm: () => handleConfirm(data.id, e.target.value),\r\n        message:\r\n          'Tin tuyển dụng đang ở trạng thái vi phạm, bạn có chắc muốn duyệt tin tuyển dụng này không?'\r\n      });\r\n    } else {\r\n      mutate([data.id, { status: value }]);\r\n    }\r\n  };\r\n\r\n  const displayColor = () => {\r\n    const initColor = APPROVAL_STATUS.find(\r\n      (item) => item.label === data.value\r\n    )?.optionColor;\r\n    return initColor;\r\n  };\r\n\r\n  return (\r\n    <SelectInput\r\n      value={initValue}\r\n      options={APPROVAL_STATUS}\r\n      onChange={handleChangeValue}\r\n      size=\"small\"\r\n      sx={{\r\n        color: displayColor(),\r\n        '.css-dyke5w-MuiSelect-select-MuiInputBase-input-MuiOutlinedInput-input.MuiSelect-select':\r\n          {\r\n            fontSize: 13\r\n            // mx: -1\r\n          }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst renderCheckInvalid = [\r\n  {\r\n    label: 'Chưa xác định',\r\n    value: null,\r\n    color: '#fff'\r\n  },\r\n  {\r\n    label: 'Hợp quy định',\r\n    value: false,\r\n    color: '#BFD8AF'\r\n  },\r\n  {\r\n    label: 'Vi phạm',\r\n    value: true,\r\n    color: '#F94C10'\r\n  }\r\n];\r\n\r\nconst renderCheck = (data) => {\r\n  // console.log(data);\r\n\r\n  const { mutate } = useMutateJobStatus();\r\n  const initCheckValue = renderCheckInvalid.find(\r\n    (item) => item.value == data.value\r\n  );\r\n  const [checkValue, setCheckValue] = useState(initCheckValue);\r\n\r\n  const options = renderCheckInvalid.map((item) => {\r\n    return {\r\n      label: item.label,\r\n      value: item.value ? 'true' : item.value == false ? 'false' : 'null'\r\n    };\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const value = e.target.value.toString();\r\n    const checkValue = renderCheckInvalid.find((item) => {\r\n      if (item.value !== null) return item.value.toString() === value;\r\n      else if (item.value === null && value !== 'null') return false;\r\n      else return true;\r\n    });\r\n    // console.log(checkValue, value);\r\n\r\n    setCheckValue(checkValue);\r\n    mutate([data.id, { check: checkValue?.value }]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setCheckValue(initCheckValue);\r\n  }, [data.value]);\r\n\r\n  return (\r\n    <Typography\r\n      bgcolor={initCheckValue?.color}\r\n      sx={{\r\n        width: '90%',\r\n        borderRadius: 1,\r\n        py: 1,\r\n        textAlign: 'center',\r\n        fontSize: 13\r\n      }}\r\n    >\r\n      {initCheckValue?.label}\r\n    </Typography>\r\n    // <SelectInput\r\n    //   value={\r\n    //     checkValue?.value === true\r\n    //       ? 'true'\r\n    //       : checkValue?.value === false\r\n    //       ? 'false'\r\n    //       : 'null'\r\n    //   }\r\n    //   options={options}\r\n    //   size=\"small\"\r\n    //   onChange={handleChange}\r\n    //   sx={{\r\n    //     bgcolor: checkValue?.color,\r\n    //     '.css-dyke5w-MuiSelect-select-MuiInputBase-input-MuiOutlinedInput-input.MuiSelect-select':\r\n    //       {\r\n    //         fontSize: 13,\r\n    //         mx: -1\r\n    //       }\r\n    //   }}\r\n    // />\r\n  );\r\n};\r\n\r\nconst columns: GridColDef[] = [\r\n  {\r\n    field: 'jobTitle',\r\n    headerName: 'Tên tin tuyển dụng',\r\n    minWidth: 200,\r\n    renderCell: renderJobTitle\r\n  },\r\n  {\r\n    field: 'name',\r\n    headerName: 'Người đăng',\r\n    minWidth: 120,\r\n    resizable: true,\r\n    renderCell: (data) => (\r\n      <Box\r\n        sx={{\r\n          overflow: 'hidden',\r\n          textOverflow: 'ellipsis',\r\n          whiteSpace: 'wrap',\r\n          lineHeight: '1.5',\r\n          display: '-webkit-box',\r\n          WebkitLineClamp: 2,\r\n          WebkitBoxOrient: 'vertical'\r\n        }}\r\n      >\r\n        {data.value}\r\n      </Box>\r\n    )\r\n  },\r\n  {\r\n    field: 'employer',\r\n    headerName: 'Tên công ty',\r\n    minWidth: 200,\r\n    renderCell: renderCompany\r\n  },\r\n  {\r\n    field: 'createAt',\r\n    headerName: 'Ngày đăng',\r\n    minWidth: 110,\r\n    sortable: true,\r\n    renderCell: (data) => (\r\n      <Box\r\n        sx={{\r\n          whiteSpace: 'wrap',\r\n          lineHeight: '1.5em'\r\n        }}\r\n      >\r\n        {dayjs(data.value).add(7, 'hours').format('DD-MM-YYYY HH:mm:ss')}\r\n      </Box>\r\n    )\r\n  },\r\n  {\r\n    field: 'submissionCount',\r\n    headerName: 'Lượt nộp',\r\n    minWidth: 90,\r\n    align: 'center',\r\n    headerAlign: 'center',\r\n    sortable: true\r\n  },\r\n  {\r\n    field: 'view',\r\n    headerName: 'Lượt xem',\r\n    minWidth: 90,\r\n    align: 'center',\r\n    headerAlign: 'center',\r\n    sortable: true,\r\n    resizable: true\r\n  },\r\n  {\r\n    field: 'status',\r\n    headerName: 'Trạng thái',\r\n    minWidth: 130,\r\n    headerAlign: 'center',\r\n    renderCell: renderStatus,\r\n    sortable: true\r\n  },\r\n  {\r\n    field: 'check',\r\n    headerName: 'Kiểm duyệt',\r\n    minWidth: 130,\r\n    headerAlign: 'center',\r\n    align: 'center',\r\n    renderCell: renderCheck,\r\n    sortable: true\r\n  }\r\n];\r\n\r\nexport default function Table({ statusFilter, selectedProfession }) {\r\n  const { totalResults } = useQueryTotalResultOfJobsByAdmin({\r\n    status: ApprovalStatus[statusFilter],\r\n    profession: selectedProfession\r\n  });\r\n  const { mutate } = useMutateJobStatus();\r\n  const [start, setStart] = useState(false);\r\n  const [showList, setShowList] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const pageSize = 9;\r\n  const totalPages = Math.ceil(totalResults / pageSize) || 1;\r\n\r\n  const { jobs, isLoading, refetch } = useQueryJobByAdmin({\r\n    page: currentPage,\r\n    num: pageSize,\r\n    status: ApprovalStatus[statusFilter],\r\n    profession: selectedProfession\r\n  });\r\n\r\n  const handlePageChange = (pageNumber: number) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  const preProcessData = (job: Job) => {\r\n    return {\r\n      postId: job?.postId,\r\n      jobTitle: job?.jobTitle,\r\n      jobDescription: job?.jobDescription,\r\n      jobRequirements: job?.jobRequirements,\r\n      benefits: job?.benefits,\r\n      requiredSkills: job?.requiredSkills\r\n    };\r\n  };\r\n\r\n  const handleCheck = async (dataToSend: Partial<Job>[]) => {\r\n    const result = await sendChatGPTRequest(checkContent, dataToSend);\r\n\r\n    const jsonResult = result.map((item) => JSON.parse(item));\r\n    const resultList = jobs.map((job) => {\r\n      const found = jsonResult.find((item) => item.id === job.postId);\r\n      if (found) {\r\n        mutate([found.id, { check: found.result }]);\r\n        return {\r\n          ...job,\r\n          check: found.result\r\n        };\r\n      }\r\n      return job;\r\n    });\r\n    setShowList(resultList);\r\n    setStart(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!start) return;\r\n    const dataToSend = jobs\r\n      .filter((job) => selectedRows.includes(job.postId))\r\n      .map((job) => preProcessData(job));\r\n\r\n    // const dataToSend = jobs.map((job) => preProcessData(job));\r\n    handleCheck(dataToSend);\r\n  }, [start]);\r\n\r\n  useEffect(() => {\r\n    if (jobs) {\r\n      setShowList(() => jobs);\r\n    }\r\n  }, [JSON.stringify(jobs)]);\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(1);\r\n  }, [statusFilter]);\r\n\r\n  const [quickApproveValue, setQuickApproveValue] = useState(null);\r\n\r\n  const handleChangeValue = (e) => {\r\n    setQuickApproveValue(e.target.value);\r\n  };\r\n\r\n  const handleQuickApprove = () => {\r\n    alertDialog({\r\n      selectedId: '_',\r\n      handleConfirm,\r\n      message: `Chuyển tin tuyển dụng đã chọn sang trạng thái ${ApprovalStatus[quickApproveValue]}?`\r\n    });\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    Promise.all(\r\n      selectedRows.map((id) => mutate([id, { status: quickApproveValue }]))\r\n    );\r\n  };\r\n\r\n  // if (isLoading || (jobs.length > 0 && !jobs[0]?.id)) return <SuspenseLoader />;\r\n  return (\r\n    <Box>\r\n      <Grid\r\n        container\r\n        sx={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'right',\r\n          gap: 2\r\n        }}\r\n      >\r\n        <Grid item xs={1}>\r\n          <Typography fontWeight={700}>\r\n            Đã chọn: {selectedRows.length}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={2.2} display=\"flex\">\r\n          <SelectInput\r\n            options={APPROVAL_STATUS}\r\n            onChange={handleChangeValue}\r\n            value={selectedRows.length > 0 ? quickApproveValue : ''}\r\n            sx={{\r\n              color: APPROVAL_STATUS.find(\r\n                (item) => item.value === quickApproveValue\r\n              )?.optionColor\r\n            }}\r\n            disabled={!selectedRows.length}\r\n            label=\"Duyệt nhanh\"\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n            sx={{ py: 1, px: 0 }}\r\n            color=\"info\"\r\n            onClick={handleQuickApprove}\r\n            disabled={!selectedRows.length || !quickApproveValue}\r\n          >\r\n            <CheckIcon sx={{ fontSize: 15 }} />\r\n          </Button>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          container\r\n          xs={1.7}\r\n          sx={{\r\n            display: 'flex',\r\n            alignItems: 'center'\r\n          }}\r\n        >\r\n          <Grid item xs>\r\n            <Button\r\n              onClick={() => setStart(selectedRows.length > 0)}\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              disabled={start || !selectedRows.length}\r\n              fullWidth\r\n              sx={{ py: 1, px: 0, bgcolor: '#FC4100' }}\r\n            >\r\n              {!selectedRows.length\r\n                ? 'Chưa chọn tin đăng'\r\n                : !start\r\n                ? 'Kiểm duyệt'\r\n                : 'Đang kiểm duyệt...'}\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            {start && <CircularProgress size={18} color=\"secondary\" />}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      {/* <Box sx={{ justifyContent: 'right', display: 'flex' }}>\r\n        {start && <CircularProgress />}\r\n        <Button\r\n          onClick={() => {\r\n            setStart(true);\r\n          }}\r\n          variant=\"contained\"\r\n          size=\"small\"\r\n          color=\"error\"\r\n          disabled={start || !selectedRows.length}\r\n          sx={{ mr: 1 }}\r\n        >\r\n          {!selectedRows.length\r\n            ? 'Chưa chọn tin đăng'\r\n            : !start\r\n            ? 'Kiểm duyệt'\r\n            : 'Đang kiểm duyệt...'}\r\n        </Button>\r\n      </Box> */}\r\n      <TableData\r\n        sx={{ minHeight: '72vh', width: '100%' }}\r\n        rows={showList}\r\n        columns={columns}\r\n        hideFooter\r\n        checkboxSelection\r\n        rowSelection\r\n        onRowSelectionModelChange={(ids) => {\r\n          setSelectedRows(ids);\r\n        }}\r\n        loading={isLoading}\r\n      />\r\n      <Pagination\r\n        totalPages={totalPages}\r\n        currentPage={currentPage}\r\n        handlePageChange={handlePageChange}\r\n        disabled={start}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n","import {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Container,\r\n  Divider,\r\n  Grid\r\n} from '@mui/material';\r\nimport useQueryJobByAdmin from 'src/modules/jobs/hooks/useQueryJobByAdmin';\r\nimport Table from './Table';\r\nimport SelectInput from 'src/components/SelectInput';\r\nimport { APPROVAL_STATUS } from 'src/constants';\r\nimport { useState } from 'react';\r\nimport ProfessionList from 'src/modules/admin/components/ProfessionList';\r\nimport useQueryTotalJobsEachProfession from 'src/modules/jobs/hooks/useQueryTotalJobsEachProfession';\r\n\r\nconst ApprovalStatusOption = [\r\n  {\r\n    value: '',\r\n    label: 'Tất cả',\r\n    color: 'info',\r\n    optionColor: '#000'\r\n  },\r\n  ...APPROVAL_STATUS\r\n];\r\n\r\nconst RecruitmentApproval = () => {\r\n  const [status, setStatus] = useState('');\r\n  const [selectedProfession, setSelectedProfession] = useState(null);\r\n  const [isProfessionView, setIsProfessionView] = useState(false);\r\n\r\n  const { dataList } = useQueryTotalJobsEachProfession();\r\n\r\n  const handleChangeStatusFilter = (e) => {\r\n    setStatus(e.target.value);\r\n  };\r\n\r\n  const handleSelectProfession = (name: string) => {\r\n    setSelectedProfession(name);\r\n    setIsProfessionView(false);\r\n  };\r\n\r\n  const handleToggleViewMode = () => {\r\n    setIsProfessionView((prev) => !prev);\r\n    setSelectedProfession(null);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\">\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"stretch\"\r\n        spacing={3}\r\n        marginTop={0}\r\n      >\r\n        <Grid item xs={12}>\r\n          <Card>\r\n            <Box\r\n              sx={{\r\n                display: 'flex',\r\n                justifyContent: 'space-between'\r\n              }}\r\n            >\r\n              <CardHeader title=\"Danh sách tin tuyển dụng\" />\r\n              <Box\r\n                sx={{\r\n                  display: 'flex'\r\n                }}\r\n              >\r\n                {!isProfessionView && (\r\n                  <Box sx={{ margin: 'auto 25px auto auto', width: '120px' }}>\r\n                    <SelectInput\r\n                      label=\"Trạng thái\"\r\n                      value={status}\r\n                      options={ApprovalStatusOption}\r\n                      onChange={(e) => handleChangeStatusFilter(e)}\r\n                      sx={{\r\n                        color: ApprovalStatusOption.find(\r\n                          (item) => item.value === status\r\n                        ).optionColor\r\n                      }}\r\n                    />\r\n                  </Box>\r\n                )}\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color={!isProfessionView ? 'primary' : 'info'}\r\n                  onClick={handleToggleViewMode}\r\n                  sx={{ margin: 'auto 25px auto auto', height: 35, width: 150 }}\r\n                >\r\n                  {!isProfessionView ? 'Xem theo ngành' : 'Tất cả'}\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n\r\n            <Divider />\r\n            <CardContent>\r\n              {isProfessionView && !selectedProfession && (\r\n                <ProfessionList\r\n                  handleSelectProfession={handleSelectProfession}\r\n                  handleViewProfessionMode={setIsProfessionView}\r\n                  total={dataList}\r\n                />\r\n              )}\r\n              {!isProfessionView && (\r\n                <Table\r\n                  statusFilter={status}\r\n                  selectedProfession={selectedProfession}\r\n                />\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RecruitmentApproval;\r\n","export function rewriteUrl(url) {\r\n  const Alphabet = {\r\n    à: 'a',\r\n    á: 'a',\r\n    ả: 'a',\r\n    ã: 'a',\r\n    ạ: 'a',\r\n    ă: 'a',\r\n    ắ: 'a',\r\n    ằ: 'a',\r\n    ẳ: 'a',\r\n    ẵ: 'a',\r\n    ặ: 'a',\r\n    â: 'a',\r\n    ấ: 'a',\r\n    ầ: 'a',\r\n    ẩ: 'a',\r\n    ẫ: 'a',\r\n    ậ: 'a',\r\n    đ: 'd',\r\n    è: 'e',\r\n    é: 'e',\r\n    ẻ: 'e',\r\n    ẽ: 'e',\r\n    ẹ: 'e',\r\n    ê: 'e',\r\n    ế: 'e',\r\n    ề: 'e',\r\n    ể: 'e',\r\n    ễ: 'e',\r\n    ệ: 'e',\r\n    ì: 'i',\r\n    í: 'i',\r\n    ỉ: 'i',\r\n    ĩ: 'i',\r\n    ị: 'i',\r\n    ò: 'o',\r\n    ó: 'o',\r\n    ỏ: 'o',\r\n    õ: 'o',\r\n    ọ: 'o',\r\n    ô: 'o',\r\n    ố: 'o',\r\n    ồ: 'o',\r\n    ổ: 'o',\r\n    ỗ: 'o',\r\n    ộ: 'o',\r\n    ơ: 'o',\r\n    ớ: 'o',\r\n    ờ: 'o',\r\n    ở: 'o',\r\n    ỡ: 'o',\r\n    ợ: 'o',\r\n    ù: 'u',\r\n    ú: 'u',\r\n    ủ: 'u',\r\n    ũ: 'u',\r\n    ụ: 'u',\r\n    ư: 'u',\r\n    ứ: 'u',\r\n    ừ: 'u',\r\n    ử: 'u',\r\n    ữ: 'u',\r\n    ự: 'u',\r\n    ỳ: 'y',\r\n    ý: 'y',\r\n    ỷ: 'y',\r\n    ỹ: 'y',\r\n    ỵ: 'y',\r\n    À: 'A',\r\n    Á: 'A',\r\n    Ả: 'A',\r\n    Ã: 'A',\r\n    Ạ: 'A',\r\n    Ă: 'A',\r\n    Ắ: 'A',\r\n    Ằ: 'A',\r\n    Ẳ: 'A',\r\n    Ẵ: 'A',\r\n    Ặ: 'A',\r\n    Â: 'A',\r\n    Ấ: 'A',\r\n    Ầ: 'A',\r\n    Ẩ: 'A',\r\n    Ẫ: 'A',\r\n    Ậ: 'A',\r\n    Đ: 'D',\r\n    È: 'E',\r\n    É: 'E',\r\n    Ẻ: 'E',\r\n    Ẽ: 'E',\r\n    Ẹ: 'E',\r\n    Ê: 'E',\r\n    Ế: 'E',\r\n    Ề: 'E',\r\n    Ể: 'E',\r\n    Ễ: 'E',\r\n    Ệ: 'E',\r\n    Ì: 'I',\r\n    Í: 'I',\r\n    Ỉ: 'I',\r\n    Ĩ: 'I',\r\n    Ị: 'I',\r\n    Ò: 'O',\r\n    Ó: 'O',\r\n    Ỏ: 'O',\r\n    Õ: 'O',\r\n    Ọ: 'O',\r\n    Ô: 'O',\r\n    Ố: 'O',\r\n    Ồ: 'O',\r\n    Ổ: 'O',\r\n    Ỗ: 'O',\r\n    Ộ: 'O',\r\n    Ơ: 'O',\r\n    Ớ: 'O',\r\n    Ờ: 'O',\r\n    Ở: 'O',\r\n    Ỡ: 'O',\r\n    Ợ: 'O',\r\n    Ù: 'U',\r\n    Ú: 'U',\r\n    Ủ: 'U',\r\n    Ũ: 'U',\r\n    Ụ: 'U',\r\n    Ư: 'U',\r\n    Ứ: 'U',\r\n    Ừ: 'U',\r\n    Ử: 'U',\r\n    Ữ: 'U',\r\n    Ự: 'U',\r\n    Ỳ: 'Y',\r\n    Ý: 'Y',\r\n    Ỷ: 'Y',\r\n    Ỹ: 'Y',\r\n    Ỵ: 'Y'\r\n  };\r\n  const specialCharacter = [\r\n    '!',\r\n    '@',\r\n    '#',\r\n    '$',\r\n    '%',\r\n    '^',\r\n    '&',\r\n    '*',\r\n    '_',\r\n    '-',\r\n    '+',\r\n    '=',\r\n    '{',\r\n    '}',\r\n    '[',\r\n    ']',\r\n    '|',\r\n    '\\\\',\r\n    ':',\r\n    ';',\r\n    '\"',\r\n    \"'\",\r\n    '<',\r\n    '>',\r\n    ',',\r\n    '.',\r\n    '/',\r\n    '?',\r\n    ' '\r\n  ];\r\n\r\n  let chuoiKhongDau = '';\r\n  for (var i = 0; i < url?.length; i++) {\r\n    if (Alphabet[url[i]]) {\r\n      chuoiKhongDau += Alphabet[url[i]];\r\n    } else if (!specialCharacter.includes(url[i])) {\r\n      // Không thay đổi các khoảng trắng\r\n      chuoiKhongDau += url[i];\r\n    } else if (!chuoiKhongDau.endsWith('-')) {\r\n      chuoiKhongDau += '-';\r\n    }\r\n  }\r\n  return chuoiKhongDau;\r\n}\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\nexports.default = _default;"],"names":["LinkWrapper","styled","Link","_ref","theme","textDecoration","color","colors","info","dark","primary","light","props","_jsx","SelectInput","options","label","labelmargintop","_jsxs","FormControl","fullWidth","children","InputLabel","size","sx","mt","Select","map","item","idx","MenuItem","value","params","data","isLoading","useQuery","TotalResultEachProfession","get","retry","refetchOnWindowFocus","dataList","useMutateJobStatus","queryClient","useQueryClient","toast","useApp","mutateAsync","useMutation","id","JobUpdateStatusService","update","onSuccess","res","status","invalidateQueries","success","massage","message","error","onError","response","mutate","_data$data","isAdmin","refetch","profession","key","TotalResultsByAdmin","enabled","totalResults","page","keepPreviousData","jobs","postId","renderCheckInvalid","columns","field","headerName","minWidth","renderCell","_data$row","jobTitle","rewriteUrl","row","useNavigate","Box","overflow","textOverflow","whiteSpace","lineHeight","display","WebkitLineClamp","WebkitBoxOrient","LinkText","to","concat","btoa","state","resizable","_data$value","_data$value2","_data$value3","_data$value4","Grid","container","alignItems","xs","companyName","userId","sortable","dayjs","add","format","align","headerAlign","initValue","APPROVAL_STATUS","find","onChange","e","target","check","Object","keys","ApprovalStatus","alertDialog","selectedId","handleConfirm","displayColor","_APPROVAL_STATUS$find","optionColor","fontSize","initCheckValue","checkValue","setCheckValue","useState","useEffect","Typography","bgcolor","width","borderRadius","py","textAlign","Table","_APPROVAL_STATUS$find2","statusFilter","selectedProfession","useQueryTotalResultOfJobsByAdmin","start","setStart","showList","setShowList","currentPage","setCurrentPage","selectedRows","setSelectedRows","totalPages","Math","ceil","useQueryJobByAdmin","num","async","jsonResult","sendChatGPTRequest","checkContent","dataToSend","JSON","parse","resultList","job","found","result","handleCheck","filter","includes","jobDescription","jobRequirements","benefits","requiredSkills","preProcessData","stringify","quickApproveValue","setQuickApproveValue","Promise","all","justifyContent","gap","fontWeight","length","disabled","Button","variant","px","onClick","handleQuickApprove","CheckIcon","CircularProgress","TableData","minHeight","rows","hideFooter","checkboxSelection","rowSelection","onRowSelectionModelChange","ids","loading","Pagination","handlePageChange","pageNumber","ApprovalStatusOption","RecruitmentApproval","setStatus","setSelectedProfession","isProfessionView","setIsProfessionView","useQueryTotalJobsEachProfession","Container","maxWidth","direction","spacing","marginTop","Card","CardHeader","title","margin","handleChangeStatusFilter","handleToggleViewMode","prev","height","Divider","CardContent","ProfessionList","handleSelectProfession","name","handleViewProfessionMode","total","url","Alphabet","à","á","ả","ã","ạ","ă","ắ","ằ","ẳ","ẵ","ặ","â","ấ","ầ","ẩ","ẫ","ậ","đ","è","é","ẻ","ẽ","ẹ","ê","ế","ề","ể","ễ","ệ","ì","í","ỉ","ĩ","ị","ò","ó","ỏ","õ","ọ","ô","ố","ồ","ổ","ỗ","ộ","ơ","ớ","ờ","ở","ỡ","ợ","ù","ú","ủ","ũ","ụ","ư","ứ","ừ","ử","ữ","ự","ỳ","ý","ỷ","ỹ","ỵ","À","Á","Ả","Ã","Ạ","Ă","Ắ","Ằ","Ẳ","Ẵ","Ặ","Â","Ấ","Ầ","Ẩ","Ẫ","Ậ","Đ","È","É","Ẻ","Ẽ","Ẹ","Ê","Ế","Ề","Ể","Ễ","Ệ","Ì","Í","Ỉ","Ĩ","Ị","Ò","Ó","Ỏ","Õ","Ọ","Ô","Ố","Ồ","Ổ","Ỗ","Ộ","Ơ","Ớ","Ờ","Ở","Ỡ","Ợ","Ù","Ú","Ủ","Ũ","Ụ","Ư","Ứ","Ừ","Ử","Ữ","Ự","Ỳ","Ý","Ỷ","Ỹ","Ỵ","specialCharacter","chuoiKhongDau","i","endsWith","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}