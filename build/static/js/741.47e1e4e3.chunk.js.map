{"version":3,"file":"static/js/741.47e1e4e3.chunk.js","mappings":"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","sources":["components/ButtonGroup/index.tsx","components/DatePicker/index.tsx","components/EditButton/index.tsx","components/NumberFormatCustom/index.tsx","components/TextField/index.tsx","components/UploadError/index.tsx","constants/uploadFileRule.ts","modules/jobProfile/GeneralForm.tsx","modules/jobProfile/Personal.tsx","modules/jobProfile/SubmitBox.tsx","modules/jobProfile/TableOfContent.tsx","modules/users/hooks/useMutateAvatar.ts","modules/users/hooks/useMutateUserHook.ts","utils/keywords.ts"],"sourcesContent":["import { Box, Button } from '@mui/material';\n\nexport default function ButtonGroup(props) {\n  const { handleSubmit, handleCancel } = props;\n  return (\n    <Box display=\"flex\" justifyContent=\"center\" sx={{ gap: 3 }}>\n      <Button\n        onClick={handleCancel}\n        variant=\"outlined\"\n        color=\"secondary\"\n        sx={{ width: 120 }}\n      >\n        Hủy\n      </Button>\n      <Button\n        color=\"success\"\n        onClick={handleSubmit}\n        variant=\"contained\"\n        sx={{ width: 120 }}\n      >\n        Xác nhận\n      </Button>\n    </Box>\n  );\n}\n","import { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { DatePicker as DatePickerMui } from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport dayjs from 'dayjs';\n\nexport default function DatePicker(props) {\n  return (\n    <LocalizationProvider dateAdapter={AdapterDayjs}>\n      <DatePickerMui\n        format=\"DD/MM/YYYY\"\n        {...props}\n        value={props.value ? dayjs(props.value) : null}\n        slotProps={{ textField: { size: 'small', fullWidth: true } }}\n      />\n    </LocalizationProvider>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Button, Typography, ButtonProps } from '@mui/material';\nimport AutoFixHighOutlinedIcon from '@mui/icons-material/AutoFixHighOutlined';\n\nexport default function EditButton(props: ButtonProps) {\n  return (\n    <Button\n      {...props}\n      variant=\"outlined\"\n      color=\"secondary\"\n      startIcon={<AutoFixHighOutlinedIcon fontSize=\"large\" />}\n      sx={{ borderRadius: 5 }}\n    >\n      <Typography textTransform=\"none\">Chỉnh sửa</Typography>\n    </Button>\n  );\n}\n","import * as React from 'react';\nimport { NumericFormat, NumericFormatProps } from 'react-number-format';\n\ninterface CustomProps {\n  onChange: (event: { target: { name: string; value: string } }) => void;\n  name: string;\n}\n\nconst NumericFormatCustom = React.forwardRef<NumericFormatProps, CustomProps>(\n  function NumericFormatCustom(props, ref) {\n    const { onChange, ...other } = props;\n\n    return (\n      <NumericFormat\n        {...other}\n        getInputRef={ref}\n        onValueChange={(values) => {\n          onChange({\n            target: {\n              name: props.name,\n              value: values.value\n            }\n          });\n        }}\n        thousandSeparator\n        valueIsNumericString\n      />\n    );\n  }\n);\n\nexport default NumericFormatCustom;\n","import { TextFieldProps, TextField as TextInput } from '@mui/material';\n\nconst TextField = (props: TextFieldProps) => {\n  return <TextInput size=\"small\" fullWidth {...props} />;\n};\n\nexport default TextField;\n","import { Typography } from '@mui/material';\nimport {\n  avatarFormat,\n  CVFormat,\n  coverImgFormat\n} from 'src/constants/uploadFileRule';\n\nconst generateErrorText = (\n  object: string,\n  acceptTypes: string[],\n  acceptSize: number,\n  fileType: string\n) => {\n  const typeRegex = new RegExp(`${fileType}/`, 'g');\n  return (\n    <Typography color=\"error\" my={1} fontWeight={700} fontSize={13}>\n      {object} phải có định dạng&nbsp;\n      {acceptTypes.join(', ').replace(typeRegex, '.')} và dung lượng{' '}\n      {` <=${acceptSize / 1024 / 1024}MB`}\n    </Typography>\n  );\n};\n\nconst generateOverTokenErrorText = () => {\n  return (\n    <Typography color=\"error\" my={1} fontWeight={700} fontSize={13}>\n      Rất tiếc, hệ thống chỉ có thể phân tích hồ sơ chứa tối đa 4000 từ. Vui\n      lòng tải hồ sơ khác !\n    </Typography>\n  );\n};\n\nconst generateFailedOCRErrorText = () => {\n  return (\n    <Typography color=\"error\" my={1} fontWeight={700} fontSize={13}>\n      Không nhận diện được nội dung trong file hồ sơ của bạn. Vui lòng tải hồ sơ\n      khác !\n    </Typography>\n  );\n};\n\nexport const avatarErrorText = generateErrorText(\n  'Ảnh đại diện',\n  avatarFormat.acceptTypes,\n  avatarFormat.acceptSize,\n  'image'\n);\nexport const coverErrorText = generateErrorText(\n  'Ảnh bìa',\n  coverImgFormat.acceptTypes,\n  coverImgFormat.acceptSize,\n  'image'\n);\nexport const applicationErrorText = generateErrorText(\n  'CV',\n  CVFormat.acceptTypes,\n  CVFormat.acceptSize,\n  'application'\n);\nexport const overTokenErrorText = generateOverTokenErrorText();\nexport const failedOCRErrorText = generateFailedOCRErrorText();\n","export const defaultImage = {\n  companyAvatar:\n    'https://th.bing.com/th/id/OIP.EK1rvrib-MWNflZRM2XiDQHaH_?pid=ImgDet&w=183&h=197&c=7&dpr=1.3',\n  companyCover:\n    'https://png.pngtree.com/background/20210706/original/pngtree-business-background-white-collar-jobs-picture-image_216619.jpg'\n};\n\nexport const avatarFormat = {\n  acceptTypes: ['image/jpeg', 'image/png', 'image/gif'],\n  acceptSize: 1 * 1024 * 1024\n};\nexport const CVFormat = {\n  acceptTypes: ['application/pdf'],\n  acceptSize: 2 * 1024 * 1024\n};\nexport const coverImgFormat = {\n  acceptTypes: ['image/jpeg', 'image/png', 'image/gif'],\n  acceptSize: 4 * 1024 * 1024\n};\n","import React, { useState, useEffect } from 'react';\nimport { Box, Grid, Typography, Container, Divider } from '@mui/material';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormControl from 'src/components/FormControl';\nimport SelectInput from 'src/components/SelectInput';\nimport TextField from 'src/components/TextField';\nimport Autocomplete from 'src/components/Autocomplete';\nimport { useForm } from 'react-hook-form';\nimport {\n  convertObjectListToString,\n  convertObjectListToStringForSkill,\n  convertToObjectsForSkill,\n  findObjectKey\n} from 'src/utils/inputOutputFormat';\nimport NumericFormatCustom from 'src/components/NumberFormatCustom';\nimport EditButton from 'src/components/EditButton';\nimport ButtonGroup from 'src/components/ButtonGroup';\nimport {\n  Degree,\n  EmploymentType,\n  Experience,\n  PositionLevel\n} from 'src/constants/enum';\nimport GeneralViewUI from './GeneralViewUI';\nimport TagInput from 'src/components/TagInput';\nimport skills from 'src/constants/skills';\nimport { SKILLS } from 'src/constants';\ninterface Option {\n  value: any;\n  label: any;\n}\n\ninterface FormProps {\n  jobTitle: string;\n  profession: string | Option[];\n  currentPosition: string;\n  desiredPosition: string;\n  desiredSalary: number;\n  degree: string;\n  experience: string;\n  workAddress: string | Option[];\n  employmentType: string;\n  careerGoal: string;\n  skills: string;\n}\n\ninterface GeneralFormProps {\n  data: FormProps;\n  options: {\n    profession: Option[];\n    workAddress: Option[];\n    positionLevel: Option[];\n    degree: Option[];\n    experience: Option[];\n    workingForm: Option[];\n  };\n  onSubmit: (data: FormProps) => void;\n}\n\nconst GeneralForm: React.FC<GeneralFormProps> = ({\n  data,\n  options,\n  onSubmit\n}) => {\n  const defaultValues: FormProps = {\n    jobTitle: '',\n    profession: '',\n    currentPosition: '',\n    desiredPosition: '',\n    desiredSalary: null,\n    degree: '',\n    experience: '',\n    workAddress: '',\n    employmentType: '',\n    careerGoal: '',\n    skills: ''\n  };\n\n  const {\n    control,\n    reset,\n    handleSubmit,\n    formState: { errors }\n  } = useForm<FormProps>({\n    defaultValues: defaultValues\n  });\n\n  const ref = React.useRef(null);\n  const [isReadOnly, setIsReadOnly] = useState(false);\n  const [employeeSkills, setSetEmployeeSkills] = useState(null);\n\n  const handleSaveProfile = (data: FormProps) => {\n    const newData = processDataPayload(data);\n    onSubmit(newData);\n    setIsReadOnly(true);\n  };\n\n  const handleCancel = () => {\n    reset(data);\n    setIsReadOnly(true);\n  };\n\n  const onEdit = () => setIsReadOnly(false);\n\n  const processDataPayload = (data: FormProps) => {\n    return {\n      ...data,\n      profession: convertObjectListToString(data?.profession as Option[]),\n      workAddress: convertObjectListToString(data?.workAddress as Option[]),\n      skills: Array.isArray(data.skills)\n        ? data.skills.map((item) => item.value || item).join(', ')\n        : data.skills\n    };\n  };\n\n  useEffect(() => {\n    reset(data);\n    data?.skills &&\n      setSetEmployeeSkills(convertToObjectsForSkill(data?.skills));\n  }, [data]);\n\n  return (\n    <Container id=\"general\">\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Box display=\"flex\">\n          <Typography fontWeight={700} fontSize={21} lineHeight={3}>\n            Thông tin chung\n          </Typography>\n        </Box>\n        {isReadOnly && <EditButton onClick={onEdit} />}\n      </Box>\n      <Divider />\n      {isReadOnly ? (\n        <GeneralViewUI\n          user={{\n            ...data,\n            degree: Degree[data.degree] ? Degree[data.degree] : data.degree\n          }}\n        />\n      ) : (\n        <Grid sx={{ mt: 1 }} py={2}>\n          <Grid container mb={4} spacing={3}>\n            <Grid item xs={12}>\n              <FormControl\n                element={<TextField />}\n                control={control}\n                errors={errors}\n                fullWidth\n                id=\"jobTitle\"\n                label=\"Vị trí mong muốn\"\n                name=\"jobTitle\"\n                required\n                disabled={isReadOnly}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl\n                element={<Autocomplete />}\n                control={control}\n                errors={errors}\n                fullWidth\n                id=\"profession\"\n                label=\"Nghề nghiệp\"\n                name=\"profession\"\n                options={options.profession}\n                required\n                disabled={isReadOnly}\n                defaultValue={data?.profession}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl\n                element={<SelectInput />}\n                options={options.positionLevel}\n                control={control}\n                errors={errors}\n                fullWidth\n                id=\"currentPosition\"\n                label=\"Cấp bậc hiện tại\"\n                name=\"currentPosition\"\n                required\n                disabled={isReadOnly}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl\n                element={<SelectInput />}\n                options={options.positionLevel}\n                control={control}\n                errors={errors}\n                fullWidth\n                id=\"desiredPosition\"\n                label=\"Cấp bậc mong muốn\"\n                name=\"desiredPosition\"\n                required\n                disabled={isReadOnly}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl\n                element={<TextField />}\n                control={control}\n                errors={errors}\n                fullWidth\n                id=\"desiredSalary\"\n                label=\"Mức lương mong muốn\"\n                name=\"desiredSalary\"\n                pattern=\"integer\"\n                required\n                disabled={isReadOnly}\n                InputProps={{\n                  inputComponent: NumericFormatCustom as any,\n                  endAdornment: (\n                    <InputAdornment position=\"end\">triệu VNĐ</InputAdornment>\n                  )\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl\n                element={<SelectInput />}\n                options={options.degree}\n                control={control}\n                errors={errors}\n                fullWidth\n                id=\"degree\"\n                label=\"Trình độ học vấn\"\n                name=\"degree\"\n                required\n                disabled={isReadOnly}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl\n                element={<SelectInput />}\n                options={options.experience}\n                control={control}\n                errors={errors}\n                fullWidth\n                id=\"experience\"\n                label=\"Số năm kinh nghiệm\"\n                name=\"experience\"\n                required\n                disabled={isReadOnly}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl\n                element={<SelectInput />}\n                options={options.workingForm}\n                control={control}\n                errors={errors}\n                fullWidth\n                id=\"employmentType\"\n                label=\"Hình thức làm việc\"\n                name=\"employmentType\"\n                required\n                disabled={isReadOnly}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl\n                element={<Autocomplete />}\n                options={options.workAddress}\n                control={control}\n                errors={errors}\n                defaultValue={data?.workAddress}\n                fullWidth\n                id=\"workAddress\"\n                label=\"Địa chỉ làm việc\"\n                name=\"workAddress\"\n                required\n                disabled={isReadOnly}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl\n                element={<TextField />}\n                control={control}\n                errors={errors}\n                fullWidth\n                id=\"careerGoal\"\n                label=\"Mục tiêu nghề nghiệp\"\n                name=\"careerGoal\"\n                required\n                disabled={isReadOnly}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl\n                element={\n                  <Autocomplete\n                    freeSolo={true}\n                    limitTags={7}\n                    options={SKILLS.map((item) => item.value)}\n                  />\n                }\n                defaultValue={data?.skills?.split(', ')}\n                control={control}\n                errors={errors}\n                id=\"skills\"\n                label=\"Kĩ năng bắt buộc\"\n                name=\"skills\"\n                required\n              />\n              <Typography\n                fontSize={12}\n                color=\"secondary\"\n                fontStyle={'italic'}\n                sx={{ display: 'flex', justifyContent: 'center' }}\n              >\n                Hãy liệt kê tối đa 10 từ khóa. Ví dụ: Python, ReactJS, HTML,\n                Go... Sẽ giúp hệ thống tìm kiếm được doanh nghiệp phù hợp với hồ\n                sơ bạn nhất\n              </Typography>\n            </Grid>\n          </Grid>\n          {!isReadOnly && (\n            <ButtonGroup\n              handleSubmit={handleSubmit(handleSaveProfile)}\n              handleCancel={handleCancel}\n            />\n          )}\n        </Grid>\n      )}\n    </Container>\n  );\n};\n\nexport default GeneralForm;\n","import { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Container,\r\n  styled,\r\n  Divider,\r\n  Avatar,\r\n  useTheme\r\n} from '@mui/material';\r\nimport AddPhotoAlternateOutlinedIcon from '@mui/icons-material/AddPhotoAlternateOutlined';\r\nimport DoNotDisturbOnOutlinedIcon from '@mui/icons-material/DoNotDisturbOnOutlined';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport FormControl from 'src/components/FormControl';\r\nimport SelectInput from 'src/components/SelectInput';\r\nimport DatePicker from 'src/components/DatePicker';\r\nimport TextField from 'src/components/TextField';\r\nimport EditButton from 'src/components/EditButton';\r\nimport { useForm } from 'react-hook-form';\r\nimport dayjs from 'dayjs';\r\nimport { User } from '../users/model';\r\nimport { useApp } from 'src/modules/app/hooks';\r\nimport useMutateUserData from '../users/hooks/useMutateUserHook';\r\nimport { GENDER, ISMARRIED, ISMARRIED_OPTION } from 'src/constants/option';\r\nimport {\r\n  GetFileByUserId,\r\n  UploadFileByUserId,\r\n  RemoveFileByUserId,\r\n  DocumentType,\r\n  getFileByUrl,\r\n  uploadFile,\r\n  removeFileByUrl\r\n} from 'src/common/firebaseService';\r\nimport { avatarFormat } from 'src/constants/uploadFileRule';\r\nimport {\r\n  toOutputDateString,\r\n  toInputDateString\r\n} from 'src/utils/inputOutputFormat';\r\nimport ButtonGroup from 'src/components/ButtonGroup';\r\nimport { avatarErrorText } from 'src/components/UploadError';\r\nimport useMutateAvatar from 'src/modules/users/hooks/useMutateAvatar';\r\nimport PersonalViewUI from './PersonalViewUI';\r\nimport { checkIsMobile, checkIsTablet } from 'src/utils/responsive';\r\n\r\nconst Input = styled('input')({\r\n  display: 'none'\r\n});\r\n\r\nexport default function Personal() {\r\n  const [avatarState, setAvatarState] = useState({\r\n    avatar: null,\r\n    avatarError: false,\r\n    storageAvatar: null,\r\n    uploadFile: null\r\n  });\r\n  const { user, setUserApp } = useApp();\r\n  const { onSaveData: onSavaAvatar } = useMutateAvatar();\r\n  const { onSaveData } = useMutateUserData();\r\n  const { acceptTypes, acceptSize } = avatarFormat;\r\n  const [isReadOnly, setIsReadOnly] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    reset(defaultUserValues);\r\n    handleGetAvatar();\r\n  }, [user]);\r\n\r\n  const handleEdit = () => setIsReadOnly(false);\r\n\r\n  const handleSaveProfile = async (data) => {\r\n    setLoading(true);\r\n\r\n    let avatarUrl = user.avatar;\r\n    if (avatarState.uploadFile)\r\n      avatarUrl = await uploadFile(avatarState.uploadFile).catch(() => '');\r\n    if (!avatarState.avatar) {\r\n      await removeFileByUrl(user.avatar);\r\n      avatarUrl = '';\r\n    }\r\n\r\n    const newData = {\r\n      ...data,\r\n      dob: toOutputDateString(data.dob),\r\n      isMarried: data.isMarried === 'Đã kết hôn' ? '1' : '0',\r\n      avatar: avatarUrl\r\n    };\r\n    setUserApp({\r\n      ...newData,\r\n      isMarried: newData.isMarried === '1',\r\n      sex: GENDER.find((item) => item.value === newData.sex)?.label,\r\n      avatar: avatarUrl\r\n    });\r\n    onSaveData(newData);\r\n\r\n    onSavaAvatar(newData);\r\n    setLoading(false);\r\n    setIsReadOnly(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    reset(defaultUserValues);\r\n    setAvatarState({ ...avatarState, avatar: avatarState.storageAvatar });\r\n    setIsReadOnly(true);\r\n  };\r\n\r\n  const handleGetAvatar = async () => {\r\n    const avatarUrl = await getFileByUrl(user?.avatar).catch(() => '');\r\n    setAvatarState({\r\n      ...avatarState,\r\n      avatar: avatarUrl,\r\n      storageAvatar: avatarUrl\r\n    });\r\n  };\r\n\r\n  const handleUploadAvatar = (e) => {\r\n    const image = e.target.files[0];\r\n    if (!image) return;\r\n    if (!acceptTypes.includes(image.type) || image.size > acceptSize) {\r\n      setAvatarState({ ...avatarState, avatarError: true });\r\n      return;\r\n    }\r\n    const imageUrl = URL.createObjectURL(image);\r\n    setAvatarState({\r\n      ...avatarState,\r\n      avatar: imageUrl,\r\n      uploadFile: image,\r\n      avatarError: false\r\n    });\r\n  };\r\n\r\n  const handleDeleteAvatar = () => {\r\n    setAvatarState({ ...avatarState, avatar: null, avatarError: false });\r\n  };\r\n\r\n  const defaultUserValues = {\r\n    ...user,\r\n    dob: toInputDateString(user.dob as string, 'DD-MM-YYYY'),\r\n    sex: GENDER.find((item) => item.label === user.sex)?.value,\r\n    isMarried: user.isMarried ? 'Đã kết hôn' : 'Độc thân'\r\n  };\r\n\r\n  const {\r\n    control,\r\n    reset,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm<User>({\r\n    defaultValues: defaultUserValues\r\n  });\r\n\r\n  const theme = useTheme();\r\n  const isMobile = checkIsMobile(theme);\r\n  const isTablet = checkIsTablet(theme);\r\n  console.log(isTablet);\r\n\r\n  return (\r\n    <Container id=\"personal\">\r\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Box display=\"flex\">\r\n          <Typography fontWeight={700} fontSize={21} lineHeight={3}>\r\n            Thông tin cá nhân\r\n          </Typography>\r\n        </Box>\r\n        {isReadOnly && <EditButton onClick={handleEdit} />}\r\n      </Box>\r\n      <Divider />\r\n      <Grid container sx={{ mt: 1 }} py={2}>\r\n        <Grid item xs={isTablet ? 12 : 3} pr={2}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            rowGap={2}\r\n          >\r\n            <Avatar\r\n              alt={user.name}\r\n              src={avatarState.avatar}\r\n              sx={{\r\n                borderRadius: 2,\r\n                width: '75%',\r\n                maxWidth: '180px',\r\n                height: 180,\r\n                objectFit: 'cover'\r\n              }}\r\n            />\r\n            {!avatarState.avatar && !isReadOnly && (\r\n              <label htmlFor=\"userAvatar\">\r\n                <Button\r\n                  component=\"label\"\r\n                  size=\"small\"\r\n                  startIcon={<AddPhotoAlternateOutlinedIcon />}\r\n                  variant=\"text\"\r\n                  color=\"secondary\"\r\n                >\r\n                  <FormControl\r\n                    element={<Input type=\"file\" accept=\"image/*\" />}\r\n                    control={control}\r\n                    name=\"userAvatar\"\r\n                    id=\"userAvatar\"\r\n                    label=\"Ảnh đại diện\"\r\n                    onChange={handleUploadAvatar}\r\n                    // sx={{ fontSize: 15 }}\r\n                  />\r\n                  <Typography sx={{ fontSize: 15, fontWeight: 700 }}>\r\n                    Tải lên\r\n                  </Typography>\r\n                </Button>\r\n              </label>\r\n            )}\r\n\r\n            {avatarState.avatar && !isReadOnly && (\r\n              <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\r\n                <Button\r\n                  component=\"label\"\r\n                  size=\"small\"\r\n                  startIcon={<AddPhotoAlternateOutlinedIcon />}\r\n                  variant=\"text\"\r\n                  color=\"secondary\"\r\n                >\r\n                  <FormControl\r\n                    element={<Input type=\"file\" accept=\"image/*\" />}\r\n                    control={control}\r\n                    name=\"userAvatar\"\r\n                    id=\"userAvatar\"\r\n                    label=\"Ảnh đại diện\"\r\n                    onChange={handleUploadAvatar}\r\n                  />\r\n                  <Typography sx={{ fontSize: 15, fontWeight: 700 }}>\r\n                    Thay đổi\r\n                  </Typography>\r\n                </Button>\r\n                <Button\r\n                  component=\"label\"\r\n                  onClick={handleDeleteAvatar}\r\n                  size=\"small\"\r\n                  startIcon={<DoNotDisturbOnOutlinedIcon />}\r\n                  variant=\"text\"\r\n                  color=\"secondary\"\r\n                >\r\n                  <Typography sx={{ fontSize: 15, fontWeight: 700 }}>\r\n                    Xóa\r\n                  </Typography>\r\n                </Button>\r\n              </Box>\r\n            )}\r\n            {avatarState.avatarError && avatarErrorText}\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={isTablet ? 12 : 9}>\r\n          {!isReadOnly ? (\r\n            <Grid container mb={4} spacing={3}>\r\n              <Grid item xs={12} sm={6}>\r\n                <FormControl\r\n                  element={<TextField />}\r\n                  control={control}\r\n                  errors={errors}\r\n                  fullWidth\r\n                  id=\"name\"\r\n                  label=\"Họ và tên\"\r\n                  name=\"name\"\r\n                  required\r\n                  disabled={isReadOnly}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <FormControl\r\n                  element={<TextField />}\r\n                  control={control}\r\n                  errors={errors}\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  pattern=\"email\"\r\n                  required\r\n                  disabled={isReadOnly}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <FormControl\r\n                  element={<TextField />}\r\n                  control={control}\r\n                  errors={errors}\r\n                  fullWidth\r\n                  id=\"phone\"\r\n                  label=\"Số điện thoại\"\r\n                  name=\"phone\"\r\n                  pattern=\"phone\"\r\n                  required\r\n                  disabled={isReadOnly}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <FormControl\r\n                  element={<DatePicker maxDate={dayjs()} />}\r\n                  control={control}\r\n                  errors={errors}\r\n                  fullWidth\r\n                  id=\"dob\"\r\n                  label=\"Ngày sinh\"\r\n                  name=\"dob\"\r\n                  required\r\n                  disabled={isReadOnly}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <FormControl\r\n                  element={<SelectInput />}\r\n                  options={GENDER}\r\n                  control={control}\r\n                  errors={errors}\r\n                  fullWidth\r\n                  id=\"sex\"\r\n                  label=\"Giới tính\"\r\n                  name=\"sex\"\r\n                  disabled={isReadOnly}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <FormControl\r\n                  element={<SelectInput />}\r\n                  options={ISMARRIED_OPTION}\r\n                  control={control}\r\n                  errors={errors}\r\n                  fullWidth\r\n                  id=\"isMarried\"\r\n                  label=\"Tình trạng hôn nhân\"\r\n                  name=\"isMarried\"\r\n                  disabled={isReadOnly}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <FormControl\r\n                  element={<TextField />}\r\n                  control={control}\r\n                  errors={errors}\r\n                  fullWidth\r\n                  id=\"address\"\r\n                  label=\"Địa chỉ\"\r\n                  name=\"address\"\r\n                  required\r\n                  disabled={isReadOnly}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <PersonalViewUI user={user} />\r\n          )}\r\n          {!isReadOnly && (\r\n            <Box display=\"flex\" justifyContent=\"center\" sx={{ gap: 3 }}>\r\n              {loading ? (\r\n                <CircularProgress size={20} />\r\n              ) : (\r\n                <ButtonGroup\r\n                  handleSubmit={handleSubmit(handleSaveProfile)}\r\n                  handleCancel={handleCancel}\r\n                />\r\n              )}\r\n            </Box>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","import { Box, styled } from '@mui/material';\n\nconst SubmitBox = styled(Box)(({ theme }) => ({\n  background: '#ffff',\n  height: 70,\n  width: '100%',\n  boxShadow: '0px 0px 10px #aae2f7',\n  left: 0,\n  right: 0,\n  bottom: 0,\n  zIndex: 1,\n  position: 'sticky',\n  display: 'flex',\n  justifyContent: 'flex-end',\n  alignItems: 'center',\n  gap: theme.spacing(4)\n}));\n\nexport default SubmitBox;\n","import { List, ListItem, Button, Typography, Grid } from '@mui/material';\n\nconst handleScrollToSection = (sectionId) => {\n  const element = document.getElementById(sectionId);\n  if (element) {\n    element.scrollIntoView({ behavior: 'smooth' });\n  }\n};\n\nconst TableOfContents = ({ sections }) => {\n  return (\n    <List component=\"nav\" sx={{ px: 0 }}>\n      <ListItem>\n        <Typography fontSize={14} fontWeight={700}>\n          Hồ sơ trực tuyến của bạn\n        </Typography>\n      </ListItem>\n      {sections.map((section) => (\n        <ListItem key={section.id} sx={{ p: 0 }}>\n          <Button\n            sx={{ py: 1 }}\n            fullWidth\n            onClick={() => handleScrollToSection(section.id)}\n            color=\"secondary\"\n          >\n            <Grid container>\n              <Grid\n                item\n                xs={2}\n                display=\"flex\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n              >\n                {section.icon}\n              </Grid>\n              <Grid\n                item\n                xs={10}\n                display=\"flex\"\n                justifyContent=\"left\"\n                alignItems=\"center\"\n              >\n                <Typography fontSize={13}>{section.title}</Typography>\n              </Grid>\n            </Grid>\n          </Button>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default TableOfContents;\n","import { AxiosError } from 'axios';\nimport { useMutation } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { useApp } from 'src/modules/app/hooks';\nimport { UploadAvatar } from '../userService';\nimport { User } from '../model';\n\nconst useMutateAvatar = () => {\n  const { toast, setUserApp } = useApp();\n  const mutationFunction = UploadAvatar.create;\n  const { mutate: onSaveData, isLoading } = useMutation<\n    ResponseData<Partial<User>>,\n    AxiosError<ResponseData<Partial<User>>>,\n    string\n  >(mutationFunction, {\n    onSuccess: (res) => {\n      if (res.status === 200) {\n        toast.success({ massage: res.message });\n        setUserApp({ avatar: res.data.avatar });\n      } else {\n        toast.error({ massage: res.message });\n      }\n    },\n    onError: (error) => {\n      toast.error({ massage: error.response.data.message });\n    }\n  });\n  return {\n    onSaveData,\n    isLoading\n  };\n};\n\nexport default useMutateAvatar;\n","import { AxiosError } from 'axios';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { useApp } from 'src/modules/app/hooks';\nimport { User } from '../model';\nimport { SetProfile } from '../userService';\n\nconst useMutateUserData = () => {\n  const queryClient = useQueryClient();\n  const { toast } = useApp();\n  const mutationFunction = SetProfile.create;\n  const { mutate: onSaveData, isLoading } = useMutation<\n    ResponseData<User>,\n    AxiosError<ResponseData<User>>,\n    User\n  >(mutationFunction, {\n    onSuccess: (res) => {\n      if (res.status === 200) {\n        queryClient.invalidateQueries('get-Profile');\n        toast.success({ massage: res.message });\n      } else {\n        toast.error({ massage: res.message });\n      }\n    },\n    onError: (error) => {\n      toast.error({ massage: error.response.data.message });\n    }\n  });\n  return {\n    onSaveData,\n    isLoading\n  };\n};\n\nexport default useMutateUserData;\n","import _ from 'lodash';\nimport { AttachedDocument, OnlineProfile } from 'src/modules/jobProfile/model';\n\n// export function tfidfReview(keywordArray: string[], documentText: string) {\n//   const termFreq = keywordArray.reduce((result, keywordArray) => {\n//     const regex = new RegExp(`\\\\b${keywordArray}\\\\b`, 'gi');\n//     const matches = documentText.match(regex) || [];\n//     result[keywordArray] = matches.length;\n//     return result;\n//   }, {});\n\n//   const totalWords = documentText.split(/\\s+/).length;\n\n//   const tfidf = {};\n\n//   Object.entries(termFreq).forEach(([word, termCount]) => {\n//     if (typeof termCount === 'number') {\n//       // Check if termCount is a number\n//       const tf = termCount / totalWords;\n//       const idf = Math.log(keywordArray.length / (termCount || 1));\n//       tfidf[word] = tf * idf;\n//     } else {\n//       // Handle the case where termCount is not a number\n//       console.error(`Term count for \"${word}\" is not a number.`);\n//     }\n//   });\n\n//   return _.entries(tfidf)\n//     .sort((a, b) => b[1] - a[1])\n//     .map((entry) => entry[0]);\n// }\n\nexport const loadKeywords = (analysisResults: any[], document?: any) => {\n  if (analysisResults.length <= 0 && !Boolean(analysisResults[0])) return;\n\n  const result = analysisResults[0];\n\n  const startIndex = result.indexOf('[');\n  if (startIndex === -1) {\n    console.log(\"Không tìm thấy ký tự '['\");\n    return;\n  }\n\n  // Tìm vị trí kết thúc của ']'\n  const endIndex = result.lastIndexOf(']');\n  if (endIndex === -1) {\n    console.log(\"Không tìm thấy ký tự ']'\");\n    return;\n  }\n\n  // Trích xuất chuỗi con từ vị trí startIndex đến endIndex\n  const extractedString = result\n    .substring(startIndex + 1, endIndex)\n    .replace(/[\"]/g, '');\n  console.log('extractedString: ', extractedString);\n\n  // B1: Thay thế dấu \"'\" thành dấu '\"' để đảm bảo JSON hợp lệ\n  const jsonString = extractedString.replace(/[_!@#$%^&*;|<>'\"\\n\\t\\r]/g, '');\n  console.log('jsonString: ', jsonString);\n\n  // B2: Parse string sang array\n  const keywordArray = jsonString.split(',');\n  console.log('keywordArray', keywordArray);\n\n  const keywordList = keywordArray.slice(0, 20);\n  console.log('keywordList?.join(', ')', keywordList?.join(', '));\n  return keywordList?.join(', ');\n};\n\nfunction removeDateAttributes(data) {\n  return data.map((item) => {\n    const { startDate, endDate, id, isDoing, ...rest } = item;\n    return rest;\n  });\n}\n\nconst removeAttributes = (\n  profile: Partial<OnlineProfile | AttachedDocument>,\n  profileType: string,\n  cvText?: string\n) => {\n  // if profile type is OnlineProfile then return\n  if (profileType === 'online') {\n    const profileData = profile as Partial<OnlineProfile>;\n    return {\n      jobTitle: profileData?.jobTitle,\n      profession: profileData?.profession,\n      work_experiences: profileData?.work_experiences.map((experience) => {\n        return {\n          jobTitle: experience.jobTitle,\n          jobDescription: experience.jobDescription\n        };\n      }),\n      education_informations: profileData?.education_informations.map(\n        (education) => education.specialization\n      ),\n      another_degrees: profileData?.another_degrees?.map(\n        (degree) => degree.degreeName\n      )\n    };\n  } else {\n    return {\n      jobTitle: profile?.jobTitle,\n      profession: profile?.profession,\n      cvContent: cvText\n    };\n  }\n};\n\ntype profileType = 'online' | 'document';\nexport function preProcessData(\n  object,\n  profileType: profileType,\n  cvText?: string\n) {\n  const dataToAnalyze = removeAttributes(object, profileType, cvText);\n  return dataToAnalyze;\n}\n"],"names":["ButtonGroup","props","handleSubmit","handleCancel","_jsxs","Box","display","justifyContent","sx","gap","children","_jsx","Button","onClick","variant","color","width","DatePicker","LocalizationProvider","dateAdapter","AdapterDayjs","DatePickerMui","format","value","dayjs","slotProps","textField","size","fullWidth","EditButton","startIcon","AutoFixHighOutlinedIcon","fontSize","borderRadius","Typography","textTransform","React","ref","onChange","other","NumericFormat","getInputRef","onValueChange","values","target","name","thousandSeparator","valueIsNumericString","TextInput","generateErrorText","object","acceptTypes","acceptSize","fileType","typeRegex","RegExp","concat","my","fontWeight","join","replace","avatarErrorText","avatarFormat","coverErrorText","coverImgFormat","applicationErrorText","CVFormat","overTokenErrorText","failedOCRErrorText","defaultImage","companyAvatar","companyCover","_ref","_data$skills","data","options","onSubmit","control","reset","formState","errors","useForm","defaultValues","jobTitle","profession","currentPosition","desiredPosition","desiredSalary","degree","experience","workAddress","employmentType","careerGoal","skills","isReadOnly","setIsReadOnly","useState","employeeSkills","setSetEmployeeSkills","processDataPayload","convertObjectListToString","Array","isArray","map","item","useEffect","convertToObjectsForSkill","Container","id","alignItems","lineHeight","onEdit","Divider","GeneralViewUI","user","Degree","Grid","mt","py","container","mb","spacing","xs","FormControl","element","TextField","label","required","disabled","Autocomplete","defaultValue","sm","SelectInput","positionLevel","pattern","InputProps","inputComponent","NumericFormatCustom","endAdornment","InputAdornment","position","workingForm","freeSolo","limitTags","SKILLS","split","fontStyle","newData","Input","styled","Personal","_GENDER$find2","avatarState","setAvatarState","avatar","avatarError","storageAvatar","uploadFile","setUserApp","useApp","onSaveData","onSavaAvatar","useMutateAvatar","useMutateUserData","loading","setLoading","defaultUserValues","handleGetAvatar","async","avatarUrl","getFileByUrl","catch","handleUploadAvatar","e","image","files","includes","type","imageUrl","URL","createObjectURL","dob","toInputDateString","sex","GENDER","find","isMarried","theme","useTheme","isTablet","checkIsMobile","checkIsTablet","console","log","handleEdit","pr","flexDirection","rowGap","Avatar","alt","src","maxWidth","height","objectFit","htmlFor","component","AddPhotoAlternateOutlinedIcon","accept","handleDeleteAvatar","DoNotDisturbOnOutlinedIcon","PersonalViewUI","maxDate","ISMARRIED_OPTION","CircularProgress","_GENDER$find","removeFileByUrl","toOutputDateString","background","boxShadow","left","right","bottom","zIndex","sections","List","px","ListItem","section","p","sectionId","document","getElementById","scrollIntoView","behavior","handleScrollToSection","icon","title","toast","mutationFunction","UploadAvatar","create","mutate","isLoading","useMutation","onSuccess","res","status","success","massage","message","error","onError","response","queryClient","useQueryClient","SetProfile","invalidateQueries","loadKeywords","analysisResults","length","Boolean","result","startIndex","indexOf","endIndex","lastIndexOf","extractedString","substring","jsonString","keywordArray","keywordList","slice","removeAttributes","profile","profileType","cvText","_profileData$another_","profileData","work_experiences","jobDescription","education_informations","education","specialization","another_degrees","degreeName","cvContent","preProcessData"],"sourceRoot":""}