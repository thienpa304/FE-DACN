{"version":3,"file":"static/js/703.b4101dc7.chunk.js","mappings":"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","sources":["components/TabWrapper/index.tsx","modules/application/hooks/useQueryCandidateApplicationById.ts","modules/application/hooks/useQueryCandidateApplications.ts","modules/application/hooks/useMutateApplicatonStatus.ts","utils/openProfile.tsx","pages/review-candidate-profiles/Table.tsx","modules/application/hooks/useQueryTotalResultOfApplicationByEmployer.ts","pages/review-candidate-profiles/index.tsx","../node_modules/@mui/icons-material/Check.js"],"sourcesContent":["import { Tabs, styled } from '@mui/material';\n\nconst TabsWrapper = styled(Tabs)(\n  () => `\n    .MuiTabs-scrollableX {\n    overflow-x: auto !important;\n      }\n  `\n);\nexport default TabsWrapper;\n","import { AxiosError } from 'axios';\nimport { useQuery } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { EmployeeApplication } from '../model';\nimport { CandidateProfilesService } from '../applicationService';\nimport { useEffect, useState } from 'react';\nimport { useApp } from 'src/modules/app/hooks';\n\nexport default function useQueryCandidateApplicationById(id) {\n  const { isEmployer } = useApp();\n  if (!id) return {};\n  const { data, isLoading } = useQuery<\n    ResponseData<EmployeeApplication>,\n    AxiosError<ResponseData<EmployeeApplication>>\n  >(\n    ['application-getById', id],\n    async () => CandidateProfilesService.getById(id),\n    {\n      retry: 1,\n      refetchOnWindowFocus: false,\n      keepPreviousData: true,\n      enabled: isEmployer\n    }\n  );\n\n  return {\n    data: data?.data,\n    isLoading\n  };\n}\n\nexport function useQueryCandidateApplicationByIdList(idList: number[]) {\n  const [dataList, setDataList] = useState<ResponseData<EmployeeApplication>[]>(\n    []\n  );\n  const { data, isLoading, refetch } = useQuery<\n    ResponseData<EmployeeApplication>[],\n    AxiosError<ResponseData<EmployeeApplication>[]>\n  >(\n    ['application-getByIdList', JSON.stringify(idList)],\n    async () => {\n      if (!idList.length) return [];\n      Promise.allSettled(\n        idList.map((id) => CandidateProfilesService.getById(id))\n      )\n        .then((results) => {\n          // Lọc ra các kết quả thành công và chỉ lưu dữ liệu của các promise đã được giải quyết vào dataList\n          const fulfilledResults = results.filter(\n            (result): result is PromiseFulfilledResult<any> =>\n              result.status === 'fulfilled'\n          );\n          const dataList = fulfilledResults.map((result) => result.value);\n\n          // Cập nhật dataList\n          setDataList(dataList);\n        })\n        .catch((e) => console.log(e));\n    },\n    {\n      retry: 1,\n      refetchOnWindowFocus: false,\n      keepPreviousData: true\n    }\n  );\n\n  return {\n    data: dataList?.map((item) => item?.data),\n    isLoading,\n    refetch\n  };\n}\n","import { AxiosError } from 'axios';\nimport { useQuery } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { Application } from '../model';\nimport { CandidateProfilesService } from '../applicationService';\nimport { useApp } from 'src/modules/app/hooks';\n\nconst useQueryCandidateApplications = (params?) => {\n  const { isEmployer } = useApp();\n  const { data, isLoading, refetch, isFetching } = useQuery<\n    ResponseData<Application[]>,\n    AxiosError<ResponseData<Application[]>>\n  >(\n    [\n      'application-getList',\n      params?.page,\n      params?.status,\n      params?.matchingScore\n    ],\n    () => CandidateProfilesService.get({ params }),\n    {\n      keepPreviousData: true,\n      retry: 1,\n      refetchOnWindowFocus: false,\n      enabled: isEmployer\n    }\n  );\n\n  return {\n    data:\n      data?.data?.map((item) => ({ ...item, id: item.application_id })) || [],\n    isLoading,\n    refetch,\n    isFetching\n  };\n};\n\nexport default useQueryCandidateApplications;\n","import { AxiosError } from 'axios';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { useApp } from 'src/modules/app/hooks';\nimport { Application } from '../model';\nimport { UpdateStatusService } from '../applicationService';\n\nconst useMutateApplicationStatus = () => {\n  const queryClient = useQueryClient();\n  const { toast } = useApp();\n  const { isLoading, mutateAsync } = useMutation<\n    ResponseData<Application>,\n    AxiosError<ResponseData<Application>>,\n    [id: string, data: Partial<Application>]\n  >(([id, data]) => UpdateStatusService.update(id, data), {\n    onSuccess: (res) => {\n      if (res.status === 200) {\n        queryClient.invalidateQueries(['application-getList']);\n        toast.success({ massage: res.message });\n      } else {\n        toast.error({ massage: res.message });\n      }\n    },\n    onError: (error) => {\n      toast.error({ massage: error.response.data.message });\n    }\n  });\n\n  return {\n    onSaveApplicationStatus: mutateAsync,\n    isLoading\n  };\n};\n\nexport default useMutateApplicationStatus;\n","import React, { createElement } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport {\n  DialogContent,\n  Divider,\n  IconButton,\n  Typography,\n  styled\n} from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport CVPage from 'src/pages/view-candidate-profile/ViewCV';\nimport ThemeProvider from '../theme/ThemeProvider';\n\nfunction openProfile({ profile }) {\n  const domNode = document.createElement('div');\n  const root = createRoot(domNode);\n  document.body.appendChild(domNode);\n\n  const handleClose = () => {\n    root.unmount();\n  };\n\n  root.render(\n    <ThemeProvider>\n      <Dialog open={true} fullWidth maxWidth=\"md\">\n        <DialogTitle\n          sx={{\n            textAlign: 'center',\n            fontWeight: 700,\n            fontSize: '1.3rem'\n          }}\n        >\n          Hồ sơ người dùng\n          <IconButton\n            aria-label=\"close\"\n            onClick={handleClose}\n            sx={{\n              position: 'absolute',\n              right: 14,\n              top: 14,\n              color: (theme) => theme.palette.grey[500]\n            }}\n          >\n            <CloseIcon />\n          </IconButton>\n        </DialogTitle>\n        <Divider\n          sx={{\n            bgcolor: '#B6FFFA',\n            height: 2\n          }}\n        />\n        <DialogContent>\n          <CVPage user={profile} bgcolor=\"none\" showTitle={false} />\n        </DialogContent>\n      </Dialog>\n    </ThemeProvider>\n  );\n}\n\nexport default openProfile;\n","import Box from '@mui/material/Box';\r\nimport { GridColDef } from '@mui/x-data-grid';\r\nimport TableData from 'src/components/TableData';\r\nimport {\r\n  Button,\r\n  CircularProgress,\r\n  Container,\r\n  Grid,\r\n  Typography\r\n} from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\nimport { APPROVAL_STATUS } from 'src/constants';\r\nimport useMutateApplicationStatus from 'src/modules/application/hooks/useMutateApplicatonStatus';\r\nimport { useMemo, useState, forwardRef, useEffect } from 'react';\r\nimport SelectInput from 'src/components/SelectInput';\r\nimport { v4 } from 'uuid';\r\nimport useQueryJobByOwner from 'src/modules/jobs/hooks/useQueryJobByOwner';\r\nimport useQueryCandidateApplicationById, {\r\n  useQueryCandidateApplicationByIdList\r\n} from 'src/modules/application/hooks/useQueryCandidateApplicationById';\r\nimport {\r\n  ProfileApplicationType,\r\n  preprocessJobData,\r\n  preprocessProfileData,\r\n  review,\r\n  LOW_SCORE,\r\n  NORMAL_SCORE,\r\n  HIGH_SCORE,\r\n  firstRoundForGeneralInfo,\r\n  parseResponseJSONData\r\n} from 'src/utils/reviewProfile';\r\nimport SuspenseLoader from 'src/components/SuspenseLoader';\r\nimport { useQueryJobByIdList } from 'src/modules/jobs/hooks/useQueryJobById';\r\nimport Pagination from 'src/components/Pagination';\r\nimport openProfile from 'src/utils/openProfile';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport alertDialog from 'src/utils/alertDialog';\r\nimport { ApprovalStatus } from 'src/constants/enum';\r\nimport { fontStyle } from 'html2canvas/dist/types/css/property-descriptors/font-style';\r\n\r\nconst renderJobTitle = (data) => {\r\n  if (data.value) {\r\n    return (\r\n      <Typography\r\n        sx={{\r\n          overflow: 'hidden',\r\n          textOverflow: 'ellipsis',\r\n          whiteSpace: 'wrap',\r\n          lineHeight: '1.5',\r\n          display: '-webkit-box',\r\n          WebkitLineClamp: 2,\r\n          WebkitBoxOrient: 'vertical'\r\n        }}\r\n      >\r\n        {data.value}\r\n      </Typography>\r\n    );\r\n  }\r\n};\r\n\r\nconst renderProfileName = (data) => {\r\n  const url = data?.row?.CV ? data?.row?.CV : '#';\r\n  const link = useMemo(() => {\r\n    if (!url) return '#';\r\n    return url;\r\n  }, [url]);\r\n\r\n  const { data: profile } = useQueryCandidateApplicationById(data?.row?.id);\r\n\r\n  return (\r\n    <Typography\r\n      sx={{\r\n        color: '#319fce',\r\n        ':hover': {\r\n          textDecoration: 'none',\r\n          cursor: 'pointer'\r\n        },\r\n        textDecoration: 'none'\r\n      }}\r\n      onClick={() => {\r\n        openProfile({ profile: profile });\r\n      }}\r\n    >\r\n      {data.value}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nconst renderStatus = (data) => {\r\n  const { onSaveApplicationStatus } = useMutateApplicationStatus();\r\n  const [value, setValue] = useState(null); // Initialize value as null\r\n\r\n  useEffect(() => {\r\n    if (!data.value || !APPROVAL_STATUS) return;\r\n    const initValue = APPROVAL_STATUS.find(\r\n      (item) => item.label === data.value\r\n    )?.value;\r\n\r\n    setValue(initValue); // Set the initial value\r\n  }, [data.value]); // Run this effect whenever data.value changes\r\n\r\n  const handleChangeValue = (newValue) => {\r\n    onSaveApplicationStatus([data.id, { status: newValue.target.value }]).then(\r\n      () => {\r\n        setValue(newValue.target.value);\r\n      }\r\n    );\r\n  };\r\n\r\n  // Return the SelectInput component\r\n  return (\r\n    <SelectInput\r\n      value={value}\r\n      options={APPROVAL_STATUS}\r\n      onChange={handleChangeValue}\r\n      sx={{\r\n        color: APPROVAL_STATUS.find((item) => item.value === value)?.optionColor\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport const renderMatchingScore = (data) => {\r\n  // if (isAnalyzing) return <CircularProgress />;\r\n  let result = '';\r\n  if (data.value >= HIGH_SCORE) result = 'Cao';\r\n  else if (data.value >= NORMAL_SCORE && data.value < HIGH_SCORE)\r\n    result = 'Trung bình';\r\n  else if (data.value >= LOW_SCORE && data.value < NORMAL_SCORE)\r\n    result = 'Thấp';\r\n  else if (data.value < 0) result = 'Không phù hợp';\r\n\r\n  return data.value === undefined || data.value === null ? (\r\n    <Typography sx={{ color: 'text.disabled', fontStyle: 'italic' }}>\r\n      Chưa xác định\r\n    </Typography>\r\n  ) : (\r\n    <Box\r\n      sx={{\r\n        width: '90%',\r\n        borderRadius: 2,\r\n        p: 1,\r\n        bgcolor:\r\n          data.value >= HIGH_SCORE\r\n            ? '#ffc107'\r\n            : data.value >= NORMAL_SCORE\r\n            ? '#A1C398'\r\n            : data.value >= LOW_SCORE\r\n            ? '#b5b5b5'\r\n            : '#efefef',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n      }}\r\n    >\r\n      {result}\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst columns: GridColDef[] = [\r\n  {\r\n    field: 'name',\r\n    headerName: 'Tên hồ sơ',\r\n    minWidth: 220,\r\n    renderCell: renderProfileName,\r\n    sortable: true\r\n  },\r\n  {\r\n    field: 'jobTitle',\r\n    headerName: 'Vị trí ứng tuyển',\r\n    minWidth: 400,\r\n    renderCell: renderJobTitle,\r\n    sortable: true\r\n  },\r\n  {\r\n    field: 'applicationType',\r\n    headerName: 'Loại hồ sơ',\r\n    minWidth: 150,\r\n    sortable: true\r\n  },\r\n  {\r\n    field: 'status',\r\n    headerName: 'Trạng thái tuyển dụng',\r\n    minWidth: 180,\r\n    renderCell: renderStatus,\r\n    sortable: true\r\n  },\r\n  {\r\n    field: 'matchingScore',\r\n    headerName: 'Độ phù hợp',\r\n    minWidth: 150,\r\n    align: 'center',\r\n    headerAlign: 'center',\r\n    renderCell: renderMatchingScore,\r\n    sortable: true\r\n  }\r\n];\r\n\r\nexport default function Table(props) {\r\n  const { pageSize, data, currentPage, totalPages, handlePageChange } = props;\r\n  // data : danh sách Application\r\n  const [analyzedProfile, setAnalyzedProfile] = useState<\r\n    ProfileApplicationType[]\r\n  >([]);\r\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\r\n  const [showList, setShowList] = useState([]);\r\n  const [roundOneFinished, setRoundOneFinished] = useState(false);\r\n  const [roundTwoFinished, setRoundTwoFinished] = useState(false);\r\n  const [roundThreeFinished, setRoundThreeFinished] = useState(false);\r\n  const [passRoundProfiles, setPassRoundProfiles] = useState<\r\n    ProfileApplicationType[]\r\n  >([]);\r\n  const [start, setStart] = useState(false);\r\n  const [goToAnalyzeResult, setGoToAnalyzeResult] = useState({\r\n    signal: false,\r\n    resultData: null\r\n  });\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const [isMappingData, setIsMappingData] = useState(true);\r\n\r\n  const applicationIdList = data?.map((item) => item?.application_id);\r\n\r\n  const jobsIdList: Set<number> = new Set(\r\n    data?.map((item) => {\r\n      return item?.jobPosting?.postId;\r\n    })\r\n  );\r\n\r\n  // Convert Set back to an array if needed\r\n  const uniqueJobsIdList: number[] = [...jobsIdList];\r\n\r\n  const { jobs, isLoading: isLoadingJobs } =\r\n    useQueryJobByIdList(uniqueJobsIdList);\r\n\r\n  const {\r\n    data: applicationDetailList,\r\n    isLoading: isLoadingApplication,\r\n    refetch\r\n  } = useQueryCandidateApplicationByIdList(applicationIdList);\r\n\r\n  const { onSaveApplicationStatus } = useMutateApplicationStatus();\r\n\r\n  const finishedAll = () => {\r\n    setStart(false);\r\n    setRoundOneFinished(false);\r\n    setRoundTwoFinished(false);\r\n    setRoundThreeFinished(false);\r\n    setIsAnalyzing(false);\r\n    setPassRoundProfiles([]);\r\n    setGoToAnalyzeResult({ signal: false, resultData: null });\r\n    setAnalyzedProfile(matchJobAndProfile());\r\n  };\r\n\r\n  const handleSetAnalyzedProfile = async (data: ProfileApplicationType[]) => {\r\n    setAnalyzedProfile(data);\r\n  };\r\n\r\n  const handleIsAnalyzing = (data: boolean) => {\r\n    setIsAnalyzing(data);\r\n  };\r\n\r\n  const handleGoToAnalyzeResult = (signal: boolean, resultData) => {\r\n    setGoToAnalyzeResult({ signal: signal, resultData: resultData });\r\n  };\r\n\r\n  const handleAnalyzeResult = async (result: any[]) => {\r\n    const responses = await parseResponseJSONData(result);\r\n    const updatedAnalyzedProfile = updateAnalyzedProfile(responses);\r\n\r\n    updateRoundStates(updatedAnalyzedProfile);\r\n  };\r\n\r\n  const updateAnalyzedProfile = (responses: any[]) => {\r\n    return analyzedProfile.map((profile) => {\r\n      const matchingScore = calculateMatchingScore(profile, responses);\r\n      return {\r\n        ...profile,\r\n        employee_Profile: {\r\n          ...profile?.employee_Profile,\r\n          application: {\r\n            ...profile?.employee_Profile?.application,\r\n            matchingScore\r\n          }\r\n        }\r\n      };\r\n    });\r\n  };\r\n\r\n  const calculateMatchingScore = (profile: any, responses: any[]) => {\r\n    const foundItem = responses.find((res) => res?.id === profile?.id);\r\n    if (foundItem?.result !== undefined) {\r\n      return profile?.employee_Profile?.application?.matchingScore !== undefined\r\n        ? profile?.employee_Profile?.application?.matchingScore +\r\n            foundItem.result\r\n        : foundItem.result;\r\n    } else if (\r\n      !roundOneFinished &&\r\n      (profile?.employee_Profile?.online_profile ||\r\n        profile?.employee_Profile?.attached_document)\r\n    ) {\r\n      return firstRoundForGeneralInfo(\r\n        profile?.employer_Requirement,\r\n        profile?.employee_Profile\r\n      );\r\n    } else {\r\n      return profile?.employee_Profile?.application?.matchingScore;\r\n    }\r\n  };\r\n\r\n  const updateRoundStates = (updatedAnalyzedProfile: any[]) => {\r\n    if (!roundOneFinished) {\r\n      const passRoundData = updatedAnalyzedProfile.filter(\r\n        (data) => data?.employee_Profile.application?.matchingScore >= LOW_SCORE\r\n      );\r\n      setPassRoundProfiles(passRoundData);\r\n    }\r\n\r\n    setAnalyzedProfile(updatedAnalyzedProfile);\r\n    const resultList = updatedAnalyzedProfile.map((profile) => ({\r\n      ...profile?.employee_Profile?.application,\r\n      id: profile.id\r\n    }));\r\n    setShowList((prev) => {\r\n      return prev.map((item) => {\r\n        const foundItem = resultList.find((res) => res?.id === item?.id);\r\n        return foundItem || item;\r\n      });\r\n    });\r\n\r\n    if (start) {\r\n      if (!roundOneFinished) setRoundOneFinished(true);\r\n      else if (!roundTwoFinished) setRoundTwoFinished(true);\r\n      else if (!roundThreeFinished) setRoundThreeFinished(true);\r\n    }\r\n  };\r\n\r\n  const matchJobAndProfile = (): ProfileApplicationType[] =>\r\n    data\r\n      ?.map((item) => {\r\n        const job = jobs?.find(\r\n          (job) => job?.postId === item?.jobPosting?.postId\r\n        );\r\n        const profile = applicationDetailList?.find(\r\n          (app) => app?.application?.application_id === item?.application_id\r\n        );\r\n\r\n        if (!job || !profile) return null;\r\n\r\n        const preprocessedJobData = preprocessJobData(job);\r\n        const preprocessedProfileData = preprocessProfileData(profile);\r\n\r\n        return {\r\n          id: item?.application_id,\r\n          employer_Requirement: preprocessedJobData,\r\n          employee_Profile: {\r\n            ...preprocessedProfileData,\r\n            application: {\r\n              ...preprocessedProfileData.application,\r\n              jobTitle: job?.jobTitle,\r\n              keywords: preprocessedProfileData?.application?.keywords\r\n                ? preprocessedProfileData?.application?.keywords\r\n                : preprocessedProfileData?.online_profile\r\n                ? profile?.online_profile.keywords\r\n                : preprocessedProfileData?.attached_document?.keywords\r\n            }\r\n          }\r\n        };\r\n      })\r\n      .filter(Boolean);\r\n\r\n  const handleReview = () => {\r\n    if (!roundOneFinished) {\r\n      // Round 1: Reset matching scores and start round 1\r\n      const resetScoreList = analyzedProfile\r\n        .filter((item) => {\r\n          return selectedRows.includes(item.id);\r\n        })\r\n        .map((profile) => ({\r\n          ...profile,\r\n          employee_Profile: {\r\n            ...profile.employee_Profile,\r\n            application: {\r\n              ...profile.employee_Profile.application,\r\n              matchingScore: null\r\n            }\r\n          }\r\n        }));\r\n\r\n      setAnalyzedProfile(resetScoreList);\r\n      review({\r\n        round: 1,\r\n        handleAnalyzeResult,\r\n        setIsAnalyzing: handleIsAnalyzing,\r\n        resetMatchingScoreList: resetScoreList,\r\n        setAnalyzedProfile: handleSetAnalyzedProfile,\r\n        handleGoToAnalyzeResult\r\n      });\r\n    } else if (!roundTwoFinished && passRoundProfiles.length > 0) {\r\n      // Round 2: Proceed to round 2 if round 1 is finished\r\n      review({\r\n        round: 2,\r\n        handleAnalyzeResult,\r\n        setIsAnalyzing: handleIsAnalyzing,\r\n        passRoundProfiles\r\n      });\r\n    } else if (!roundThreeFinished) {\r\n      // Round 3: Proceed to round 3 if round 2 is finished\r\n      review({\r\n        round: 3,\r\n        handleAnalyzeResult,\r\n        setIsAnalyzing: handleIsAnalyzing,\r\n        passRoundProfiles\r\n      });\r\n    } else {\r\n      // All rounds finished, save matching scores and finish all\r\n      Promise.all(\r\n        showList\r\n          .filter((item) => {\r\n            return selectedRows.includes(item.id);\r\n          })\r\n          .map((item) =>\r\n            onSaveApplicationStatus([\r\n              item.id,\r\n              { matchingScore: item.matchingScore }\r\n            ])\r\n          )\r\n      ).then(() => {\r\n        refetch();\r\n      });\r\n      finishedAll();\r\n      console.log('Finished All');\r\n    }\r\n  };\r\n\r\n  const handleQuickApprove = () => {\r\n    alertDialog({\r\n      selectedId: '_',\r\n      handleConfirm,\r\n      message: `Chuyển các hồ sơ đã chọn sang trạng thái ${ApprovalStatus[quickApproveValue]}?`\r\n    });\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    Promise.all(\r\n      selectedRows.map((id) =>\r\n        onSaveApplicationStatus([id, { status: quickApproveValue }])\r\n      )\r\n    ).then(() => {\r\n      refetch();\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (goToAnalyzeResult.signal) {\r\n      handleAnalyzeResult(goToAnalyzeResult.resultData);\r\n    }\r\n  }, [goToAnalyzeResult.signal]);\r\n\r\n  // First time render the page\r\n  useEffect(() => {\r\n    setIsMappingData(true);\r\n    console.log(111);\r\n\r\n    if (!jobs.length || !applicationDetailList.length || start) return;\r\n\r\n    const initialJobProfileData = matchJobAndProfile();\r\n\r\n    const resultList = initialJobProfileData?.map((item) => {\r\n      item.employee_Profile.application.id = item.id;\r\n      return item.employee_Profile.application;\r\n    });\r\n\r\n    if (JSON.stringify(resultList) !== JSON.stringify(showList)) {\r\n      console.log('showList', resultList);\r\n\r\n      setShowList(() => resultList);\r\n    }\r\n\r\n    // Check if the profile values are really different\r\n    if (\r\n      JSON.stringify(initialJobProfileData) !== JSON.stringify(analyzedProfile)\r\n    ) {\r\n      setAnalyzedProfile(initialJobProfileData);\r\n    }\r\n    setIsMappingData(false);\r\n  }, [\r\n    JSON.stringify(data),\r\n    JSON.stringify(jobs),\r\n    JSON.stringify(applicationDetailList)\r\n  ]);\r\n\r\n  // Start Round 1, 2, 3\r\n  useEffect(() => {\r\n    if (!start) return;\r\n    handleReview();\r\n  }, [start, roundOneFinished, roundTwoFinished, roundThreeFinished]);\r\n\r\n  const [quickApproveValue, setQuickApproveValue] = useState(null);\r\n  const handleChangeValue = (e) => {\r\n    setQuickApproveValue(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          display: 'block',\r\n          float: { md: 'right' },\r\n          minWidth: { md: 500 },\r\n          maxWidth: 500\r\n        }}\r\n      >\r\n        <Grid\r\n          container\r\n          sx={{\r\n            alignItems: 'center'\r\n          }}\r\n          spacing={1}\r\n        >\r\n          <Grid item md={3} xs={12}>\r\n            <Typography\r\n              fontWeight={700}\r\n              textAlign={'center'}\r\n              sx={{ mt: { xs: 2, md: 0 } }}\r\n            >\r\n              Đã chọn: {selectedRows.length}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item md={5} xs={12} display={'flex'}>\r\n            <SelectInput\r\n              options={APPROVAL_STATUS}\r\n              onChange={handleChangeValue}\r\n              value={selectedRows.length > 0 ? quickApproveValue : ''}\r\n              sx={{\r\n                color: APPROVAL_STATUS.find(\r\n                  (item) => item.value === quickApproveValue\r\n                )?.optionColor\r\n              }}\r\n              disabled={!selectedRows.length}\r\n              label=\"Duyệt nhanh\"\r\n            />\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              color=\"info\"\r\n              sx={{\r\n                py: 1,\r\n                px: 0\r\n              }}\r\n              onClick={handleQuickApprove}\r\n              disabled={!selectedRows.length || !quickApproveValue}\r\n            >\r\n              <CheckIcon sx={{ fontSize: 15 }} />\r\n            </Button>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            md={4}\r\n            xs={12}\r\n            sx={{\r\n              display: 'flex',\r\n              alignItems: 'center'\r\n            }}\r\n          >\r\n            <Button\r\n              onClick={() => setStart(selectedRows.length > 0)}\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              disabled={start || !selectedRows.length}\r\n              fullWidth\r\n              sx={{ py: 1, px: 0 }}\r\n            >\r\n              <Grid item xs={!isAnalyzing ? 12 : 9}>\r\n                {!selectedRows.length\r\n                  ? 'Chưa chọn hồ sơ'\r\n                  : !start\r\n                  ? 'Phân tích nhanh'\r\n                  : 'Đang phân tích'}\r\n              </Grid>\r\n              <Grid item xs={isAnalyzing ? 3 : 0}>\r\n                {isAnalyzing && (\r\n                  <CircularProgress size={18} color=\"secondary\" />\r\n                )}\r\n              </Grid>\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n      <TableData\r\n        rows={showList}\r\n        columns={columns}\r\n        initialState={{\r\n          pagination: {\r\n            paginationModel: {\r\n              pageSize: pageSize\r\n            }\r\n          }\r\n        }}\r\n        hideFooter\r\n        sx={{ height: '74vh', width: '100%' }}\r\n        checkboxSelection\r\n        // disableRowSelectionOnClick\r\n        rowSelection={true}\r\n        onRowSelectionModelChange={(ids) => {\r\n          setSelectedRows(ids);\r\n        }}\r\n        loading={isLoadingApplication || isLoadingJobs || isMappingData}\r\n      />\r\n      <Pagination\r\n        currentPage={currentPage}\r\n        totalPages={totalPages}\r\n        handlePageChange={handlePageChange}\r\n        disabled={start}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { AxiosError } from 'axios';\nimport { useQuery } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { ApplicationTotalResults } from '../applicationService';\nimport { useApp } from 'src/modules/app/hooks';\n\ninterface responseType {\n  totalResults: number;\n}\n\nconst useQueryTotalResultOfApplicationByEmployer = (params?) => {\n  const { isEmployer } = useApp();\n  const { data, isLoading } = useQuery<\n    ResponseData<responseType>,\n    AxiosError<ResponseData<responseType>>\n  >(\n    ['application-getList', params?.page, params?.status],\n    () => ApplicationTotalResults.get({ params }),\n    {\n      retry: 1,\n      refetchOnWindowFocus: false,\n      keepPreviousData: true,\n      enabled: isEmployer\n    }\n  );\n\n  return {\n    totalResults: data?.data?.totalResults,\n    isLoading\n  };\n};\n\nexport default useQueryTotalResultOfApplicationByEmployer;\n","import {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  Tab,\r\n  Tabs,\r\n  styled\r\n} from '@mui/material';\r\nimport useQueryCandidateApplications from 'src/modules/application/hooks/useQueryCandidateApplications';\r\nimport Table from './Table';\r\nimport SuspenseLoader from 'src/components/SuspenseLoader';\r\nimport { useEffect, useState } from 'react';\r\nimport useQueryTotalResultOfApplicationByEmployer from 'src/modules/application/hooks/useQueryTotalResultOfApplicationByEmployer';\r\nimport TabsWrapper from 'src/components/TabWrapper';\r\nimport Pagination from 'src/components/Pagination';\r\n\r\nconst tabs = [\r\n  { label: 'Tất cả', value: '' },\r\n  { label: 'Đã duyệt', value: 'Đã duyệt' },\r\n  { label: 'Chờ duyệt', value: 'Chờ duyệt' },\r\n  { label: 'Từ chối', value: 'Từ chối' },\r\n  { label: 'Hết hạn', value: 'Hết hạn' }\r\n];\r\n\r\nconst CandidateProfiles = () => {\r\n  const pageSize = 9;\r\n  const [currentQuery, setCurrentQuery] = useState({\r\n    currentPage: 1,\r\n    currentTab: ''\r\n  });\r\n  const { data, isLoading: isLoadingData } = useQueryCandidateApplications({\r\n    page: currentQuery.currentPage,\r\n    num: pageSize,\r\n    status: currentQuery.currentTab\r\n  });\r\n  const { totalResults, isLoading: isLoadingTotalResults } =\r\n    useQueryTotalResultOfApplicationByEmployer({\r\n      status: currentQuery.currentTab\r\n    });\r\n\r\n  const handleTabsChange = (e, value) => {\r\n    setCurrentQuery(() => ({\r\n      currentPage: 1,\r\n      currentTab: value\r\n    }));\r\n  };\r\n\r\n  const handlePageChange = (page) => {\r\n    setCurrentQuery((prev) => ({\r\n      ...prev,\r\n      currentPage: page\r\n    }));\r\n  };\r\n\r\n  const totalPages = Math.ceil(totalResults / pageSize) || 1;\r\n  console.log('rerender 1');\r\n\r\n  if (isLoadingData || isLoadingTotalResults) return <SuspenseLoader />;\r\n  return (\r\n    <Container maxWidth=\"xl\">\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"stretch\"\r\n        spacing={3}\r\n        marginTop={0}\r\n      >\r\n        <Grid item xs={12}>\r\n          <Card>\r\n            <CardHeader title=\"Danh Sách ứng viên\" />\r\n            <Divider />\r\n            <CardContent>\r\n              <TabsWrapper\r\n                onChange={handleTabsChange}\r\n                value={currentQuery.currentTab}\r\n                variant=\"scrollable\"\r\n                scrollButtons={false}\r\n                sx={{\r\n                  display: { md: 'inline-block' },\r\n                  borderBottom: 1,\r\n                  borderColor: 'divider'\r\n                }}\r\n              >\r\n                {tabs.map((tab) => {\r\n                  return (\r\n                    <Tab key={tab.value} label={tab.label} value={tab.value} />\r\n                  );\r\n                })}\r\n              </TabsWrapper>\r\n              <Table\r\n                data={data}\r\n                pageSize={pageSize}\r\n                currentPage={currentQuery.currentPage}\r\n                totalPages={totalPages}\r\n                handlePageChange={handlePageChange}\r\n              />\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CandidateProfiles;\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\nexports.default = _default;"],"names":["styled","Tabs","useQueryCandidateApplicationById","id","isEmployer","useApp","data","isLoading","useQuery","async","CandidateProfilesService","getById","retry","refetchOnWindowFocus","keepPreviousData","enabled","useQueryCandidateApplicationByIdList","idList","dataList","setDataList","useState","refetch","JSON","stringify","length","Promise","allSettled","map","then","results","filter","result","status","value","catch","e","console","log","item","params","_data$data","isFetching","page","matchingScore","get","application_id","useMutateApplicationStatus","queryClient","useQueryClient","toast","mutateAsync","useMutation","_ref","UpdateStatusService","update","onSuccess","res","invalidateQueries","success","massage","message","error","onError","response","onSaveApplicationStatus","profile","domNode","document","createElement","root","createRoot","body","appendChild","render","_jsx","ThemeProvider","children","_jsxs","Dialog","open","fullWidth","maxWidth","DialogTitle","sx","textAlign","fontWeight","fontSize","IconButton","onClick","handleClose","unmount","position","right","top","color","theme","palette","grey","CloseIcon","Divider","bgcolor","height","DialogContent","CVPage","user","showTitle","columns","field","headerName","minWidth","renderCell","_data$row","_data$row2","_data$row3","url","row","CV","useMemo","Typography","textDecoration","cursor","openProfile","sortable","overflow","textOverflow","whiteSpace","lineHeight","display","WebkitLineClamp","WebkitBoxOrient","_APPROVAL_STATUS$find2","setValue","useEffect","_APPROVAL_STATUS$find","APPROVAL_STATUS","initValue","find","label","SelectInput","options","onChange","newValue","target","optionColor","align","headerAlign","HIGH_SCORE","NORMAL_SCORE","LOW_SCORE","undefined","fontStyle","Box","width","borderRadius","p","justifyContent","alignItems","Table","props","_APPROVAL_STATUS$find3","pageSize","currentPage","totalPages","handlePageChange","analyzedProfile","setAnalyzedProfile","isAnalyzing","setIsAnalyzing","showList","setShowList","roundOneFinished","setRoundOneFinished","roundTwoFinished","setRoundTwoFinished","roundThreeFinished","setRoundThreeFinished","passRoundProfiles","setPassRoundProfiles","start","setStart","goToAnalyzeResult","setGoToAnalyzeResult","signal","resultData","selectedRows","setSelectedRows","isMappingData","setIsMappingData","applicationIdList","uniqueJobsIdList","Set","_item$jobPosting","jobPosting","postId","jobs","isLoadingJobs","useQueryJobByIdList","applicationDetailList","isLoadingApplication","handleSetAnalyzedProfile","handleIsAnalyzing","handleGoToAnalyzeResult","handleAnalyzeResult","responses","parseResponseJSONData","updatedAnalyzedProfile","updateAnalyzedProfile","updateRoundStates","_profile$employee_Pro","calculateMatchingScore","employee_Profile","application","_profile$employee_Pro6","_profile$employee_Pro7","foundItem","_profile$employee_Pro2","_profile$employee_Pro3","_profile$employee_Pro4","_profile$employee_Pro5","_profile$employee_Pro8","_profile$employee_Pro9","online_profile","attached_document","firstRoundForGeneralInfo","employer_Requirement","passRoundData","_data$employee_Profil","resultList","_profile$employee_Pro10","prev","matchJobAndProfile","_preprocessedProfileD","_preprocessedProfileD2","_preprocessedProfileD3","job","_item$jobPosting2","app","_app$application","preprocessedJobData","preprocessJobData","preprocessedProfileData","preprocessProfileData","jobTitle","keywords","Boolean","handleReview","review","round","all","includes","resetScoreList","resetMatchingScoreList","handleConfirm","quickApproveValue","initialJobProfileData","setQuickApproveValue","_Fragment","float","md","Grid","container","spacing","xs","mt","disabled","Button","variant","size","py","px","handleQuickApprove","alertDialog","selectedId","concat","ApprovalStatus","CheckIcon","CircularProgress","TableData","rows","initialState","pagination","paginationModel","hideFooter","checkboxSelection","rowSelection","onRowSelectionModelChange","ids","loading","Pagination","ApplicationTotalResults","totalResults","tabs","CandidateProfiles","currentQuery","setCurrentQuery","currentTab","isLoadingData","useQueryCandidateApplications","num","isLoadingTotalResults","useQueryTotalResultOfApplicationByEmployer","Math","ceil","SuspenseLoader","Container","direction","marginTop","Card","CardHeader","title","CardContent","TabsWrapper","handleTabsChange","scrollButtons","borderBottom","borderColor","tab","Tab","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}