{"version":3,"file":"static/js/313.f3ab1b61.chunk.js","mappings":"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","sources":["components/TabWrapper/index.tsx","modules/application/hooks/useQueryCandidateApplications.ts","modules/application/hooks/useMutateApplicatonStatus.ts","utils/openProfile.tsx","pages/company-review-profiles/Table.tsx","pages/company-review-profiles/index.tsx","../node_modules/@mui/icons-material/Check.js"],"sourcesContent":["import { Tabs, styled } from '@mui/material';\n\nconst TabsWrapper = styled(Tabs)(\n  () => `\n    .MuiTabs-scrollableX {\n    overflow-x: auto !important;\n      }\n  `\n);\nexport default TabsWrapper;\n","import { AxiosError } from 'axios';\nimport { useQuery } from 'react-query';\nimport { PaginationType, ResponseData } from 'src/common/http-request';\nimport { Application } from '../model';\nimport { CandidateProfilesService } from '../applicationService';\nimport { useApp } from 'src/modules/app/hooks';\n\nconst useQueryCandidateApplications = (params?) => {\n  const { isEmployer } = useApp();\n  const { data, isLoading, refetch, isFetching } = useQuery<\n    ResponseData<PaginationType<Application[]>>,\n    AxiosError<ResponseData<Application[]>>\n  >(\n    ['application-getList', params],\n    () => CandidateProfilesService.get({ params }),\n    {\n      keepPreviousData: true,\n      retry: 1,\n      refetchOnWindowFocus: false,\n      enabled: isEmployer\n    }\n  );\n\n  console.log('...api...', data?.data?.meta?.itemCount);\n\n  return {\n    data:\n      data?.data?.items?.map((item) => ({\n        ...item,\n        id: item.application_id\n      })) || [],\n    totalItems: data?.data?.meta?.totalItems,\n    itemCount: data?.data?.meta?.itemCount,\n    itemPerPage: data?.data?.meta?.itemPerPage,\n    totalPages: data?.data?.meta?.totalPages,\n    currentPage: data?.data?.meta?.currentPage,\n    isLoading,\n    refetch,\n    isFetching\n  };\n};\n\nexport default useQueryCandidateApplications;\n","import { AxiosError } from 'axios';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { useApp } from 'src/modules/app/hooks';\nimport { Application } from '../model';\nimport { UpdateStatusService } from '../applicationService';\n\nconst useMutateApplicationStatus = () => {\n  const queryClient = useQueryClient();\n  const { toast } = useApp();\n  const { isLoading, mutateAsync } = useMutation<\n    ResponseData<Application>,\n    AxiosError<ResponseData<Application>>,\n    [id: string, data: Partial<Application>]\n  >(([id, data]) => UpdateStatusService.update(id, data), {\n    onSuccess: (res) => {\n      if (res.status === 200) {\n        queryClient.invalidateQueries(['application-getList']);\n        toast.success({ massage: res.message });\n      } else {\n        toast.error({ massage: res.message });\n      }\n    },\n    onError: (error) => {\n      toast.error({ massage: error.response.data.message });\n    }\n  });\n\n  return {\n    onSaveApplicationStatus: mutateAsync,\n    isLoading\n  };\n};\n\nexport default useMutateApplicationStatus;\n","import React, { createElement } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport {\n  DialogContent,\n  Divider,\n  IconButton,\n  Typography,\n  styled\n} from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport ViewCV from 'src/pages/view-candidate-profile/ViewCV';\nimport ThemeProvider from '../theme/ThemeProvider';\nimport { isMobile } from 'src/constants/reponsive';\n\nfunction openProfile({ profile }) {\n  const domNode = document.createElement('div');\n  const root = createRoot(domNode);\n  document.body.appendChild(domNode);\n\n  const handleClose = () => {\n    root.unmount();\n  };\n\n  root.render(\n    <ThemeProvider>\n      <Dialog open={true} fullWidth maxWidth=\"md\" fullScreen={isMobile}>\n        <DialogTitle\n          sx={{\n            textAlign: 'center',\n            fontWeight: 700,\n            fontSize: '1.3rem'\n          }}\n        >\n          Hồ sơ người dùng\n          <IconButton\n            aria-label=\"close\"\n            onClick={handleClose}\n            sx={{\n              position: 'absolute',\n              right: 14,\n              top: 14,\n              color: (theme) => theme.palette.grey[500]\n            }}\n          >\n            <CloseIcon />\n          </IconButton>\n        </DialogTitle>\n        <Divider\n          sx={{\n            bgcolor: '#B6FFFA',\n            height: 2\n          }}\n        />\n        <DialogContent>\n          <ViewCV user={profile} bgcolor=\"none\" showTitle={false} />\n        </DialogContent>\n      </Dialog>\n    </ThemeProvider>\n  );\n}\n\nexport default openProfile;\n","import Box from '@mui/material/Box';\r\nimport { GridColDef } from '@mui/x-data-grid';\r\nimport TableData from 'src/components/TableData';\r\nimport {\r\n  Button,\r\n  CircularProgress,\r\n  Container,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Divider,\r\n  Grid,\r\n  IconButton,\r\n  Rating,\r\n  Tooltip,\r\n  Typography\r\n} from '@mui/material';\r\nimport { APPROVAL_STATUS } from 'src/constants';\r\nimport useMutateApplicationStatus from 'src/modules/application/hooks/useMutateApplicatonStatus';\r\nimport { useMemo, useState, forwardRef, useEffect, useCallback } from 'react';\r\nimport SelectInput from 'src/components/SelectInput';\r\nimport {\r\n  ProfileApplicationType,\r\n  preprocessJobData,\r\n  preprocessProfileData,\r\n  review,\r\n  LOW_SCORE,\r\n  NORMAL_SCORE,\r\n  HIGH_SCORE,\r\n  firstRoundForGeneralInfo,\r\n  parseResponseJSONData,\r\n  ratingStar,\r\n  calculateMatchingScore,\r\n  getKeywords\r\n} from 'src/utils/reviewProfile';\r\nimport SuspenseLoader from 'src/components/SuspenseLoader';\r\nimport useQueryJobById, {\r\n  useQueryJobByIdList\r\n} from 'src/modules/jobs/hooks/useQueryJobById';\r\nimport Pagination from 'src/components/Pagination';\r\nimport openProfile from 'src/utils/openProfile';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport alertDialog from 'src/utils/alertDialog';\r\nimport { ApprovalStatus } from 'src/constants/enum';\r\nimport { TypographyEllipsis } from 'src/components/Typography';\r\nimport CardApply from 'src/modules/jobs/components/CardApply';\r\nimport TabContent from '../view-job-detail/TabContent';\r\nimport CompanyInfoTab from 'src/modules/jobs/components/CompanyInfoTab';\r\nimport useApplicationList from 'src/modules/jobs/hooks/useFollowJobList';\r\nimport useJob from 'src/modules/jobs/hooks/useJob';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { isMobile } from 'src/constants/reponsive';\r\nimport detailsModal from 'src/utils/detailsModal';\r\nimport ReadMoreIcon from '@mui/icons-material/ReadMore';\r\n\r\nconst ViewJobDetail = ({ postId, setSelectedId }) => {\r\n  if (!postId) return;\r\n\r\n  const { data, isLoading } = useQueryJobById(postId);\r\n\r\n  if (isLoading) return <SuspenseLoader />;\r\n  return (\r\n    <Dialog\r\n      open={Boolean(postId)}\r\n      onClose={() => {\r\n        setSelectedId(null);\r\n      }}\r\n      fullWidth\r\n      maxWidth=\"lg\"\r\n      fullScreen={isMobile}\r\n    >\r\n      <DialogTitle\r\n        sx={{\r\n          textAlign: 'center',\r\n          fontWeight: 700,\r\n          fontSize: '1.3rem'\r\n        }}\r\n      >\r\n        Vị trí ứng tuyển\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={() => setSelectedId(null)}\r\n          sx={{\r\n            position: 'absolute',\r\n            right: 14,\r\n            top: 14,\r\n            color: (theme) => theme.palette.grey[500]\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </DialogTitle>\r\n      <Divider\r\n        sx={{\r\n          bgcolor: '#B6FFFA',\r\n          height: 2\r\n        }}\r\n      />\r\n      <DialogContent>\r\n        <Container sx={{ paddingY: 2 }}>\r\n          <CardApply data={data} />\r\n          <TabContent />\r\n          <CompanyInfoTab sx={{ mt: 2 }} company={data?.employer} />\r\n        </Container>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst renderJobTitle = (data) => {\r\n  const {\r\n    employee_Profile: { application }\r\n  } = data?.row;\r\n\r\n  const [selectedId, setSelectedId] = useState(null);\r\n\r\n  return (\r\n    <>\r\n      <TypographyEllipsis\r\n        sx={{\r\n          color: '#319fce',\r\n          ':hover': {\r\n            textDecoration: 'none',\r\n            cursor: 'pointer'\r\n          },\r\n          textDecoration: 'none'\r\n        }}\r\n        onClick={() => {\r\n          setSelectedId(data?.row?.postId);\r\n        }}\r\n      >\r\n        {application.jobTitle}\r\n      </TypographyEllipsis>\r\n      <ViewJobDetail postId={selectedId} setSelectedId={setSelectedId} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst renderProfileName = (data) => {\r\n  const { employee_Profile } = data?.row;\r\n  const { application } = employee_Profile;\r\n\r\n  const handleOpenDetailModal = () => {\r\n    const rating = ratingStar(application.matchingScore);\r\n\r\n    const detailsData = {\r\n      'Tên hồ sơ': application.name,\r\n      'Vị trí ứng tuyển': application.jobTitle,\r\n      'Loại hồ sơ': application.applicationType,\r\n      'Trạng thái': application.status,\r\n      'Độ phù hợp': (\r\n        <Rating\r\n          value={rating}\r\n          max={3}\r\n          size=\"small\"\r\n          readOnly\r\n          sx={{ position: 'relative', bottom: -5 }}\r\n        />\r\n      )\r\n    };\r\n    detailsModal(detailsData);\r\n  };\r\n\r\n  return (\r\n    <Grid container alignItems={'center'}>\r\n      <Grid item xs={10.5} sm={12}>\r\n        <TypographyEllipsis\r\n          sx={{\r\n            color: '#319fce',\r\n            ':hover': {\r\n              textDecoration: 'none',\r\n              cursor: 'pointer'\r\n            },\r\n            textDecoration: 'none'\r\n          }}\r\n          onClick={() => {\r\n            openProfile({ profile: employee_Profile });\r\n          }}\r\n        >\r\n          {application.name}\r\n        </TypographyEllipsis>\r\n      </Grid>\r\n      <Grid item xs={1.5} sm={0} sx={{ display: { sm: 'none', xs: 'inline' } }}>\r\n        <Tooltip title=\"Chi tiết\">\r\n          <IconButton size=\"small\" onClick={handleOpenDetailModal}>\r\n            <ReadMoreIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst renderStatus = (data) => {\r\n  const {\r\n    employee_Profile: { application }\r\n  } = data?.row;\r\n  const { onSaveApplicationStatus } = useMutateApplicationStatus();\r\n  const [value, setValue] = useState(null); // Initialize value as null\r\n\r\n  useEffect(() => {\r\n    if (!application.status || !APPROVAL_STATUS) return;\r\n    const initValue = APPROVAL_STATUS.find(\r\n      (item) => item.label === application.status\r\n    )?.value;\r\n\r\n    setValue(initValue); // Set the initial value\r\n  }, [application.status]); // Run this effect whenever data.value changes\r\n\r\n  const handleChangeValue = (newValue) => {\r\n    onSaveApplicationStatus([\r\n      application.id,\r\n      { status: newValue.target.value }\r\n    ]).then(() => {\r\n      setValue(newValue.target.value);\r\n    });\r\n  };\r\n\r\n  // Return the SelectInput component\r\n  return (\r\n    <SelectInput\r\n      value={value}\r\n      options={APPROVAL_STATUS}\r\n      onChange={handleChangeValue}\r\n      sx={{\r\n        color: APPROVAL_STATUS.find((item) => item.value === value)\r\n          ?.optionColor,\r\n        fontSize: isMobile && '10px'\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst renderMatchingScore = (data) => {\r\n  const {\r\n    employee_Profile: { application }\r\n  } = data?.row;\r\n  const rating = ratingStar(application.matchingScore);\r\n\r\n  return application.matchingScore === undefined ||\r\n    application.matchingScore === null ? (\r\n    <Typography sx={{ color: 'text.disabled', fontStyle: 'italic' }}>\r\n      Chưa phân tích\r\n    </Typography>\r\n  ) : (\r\n    <Rating value={rating} max={3} readOnly />\r\n  );\r\n};\r\n\r\nconst columns: GridColDef[] = [\r\n  {\r\n    field: 'name',\r\n    headerName: 'Tên hồ sơ',\r\n    minWidth: isMobile ? 110 : 220,\r\n    renderCell: renderProfileName,\r\n    sortable: true\r\n  },\r\n  {\r\n    field: 'jobTitle',\r\n    headerName: 'Vị trí ứng tuyển',\r\n    minWidth: 400,\r\n    renderCell: renderJobTitle,\r\n    sortable: true\r\n  },\r\n  {\r\n    field: 'applicationType',\r\n    headerName: 'Loại hồ sơ',\r\n    minWidth: 150,\r\n    // sortable: true,\r\n    headerAlign: 'center',\r\n    align: 'center',\r\n    renderCell: (data) =>\r\n      data?.row?.employee_Profile?.application?.applicationType\r\n  },\r\n  {\r\n    field: 'status',\r\n    headerName: 'Trạng thái',\r\n    minWidth: isMobile ? 120 : 180,\r\n    renderCell: renderStatus,\r\n    sortable: true,\r\n    headerAlign: 'center',\r\n    align: 'center'\r\n  },\r\n  {\r\n    field: 'matchingScore',\r\n    headerName: 'Độ phù hợp',\r\n    minWidth: 140,\r\n    align: 'center',\r\n    headerAlign: 'center',\r\n    renderCell: renderMatchingScore,\r\n    sortable: true\r\n  }\r\n];\r\n\r\nexport default function Table(props) {\r\n  const { pageSize, data, currentPage, totalPages, handlePageChange, loading } =\r\n    props;\r\n  // data : danh sách Application\r\n  const [analyzedProfile, setAnalyzedProfile] = useState<\r\n    ProfileApplicationType[]\r\n  >([]);\r\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\r\n  const [showList, setShowList] = useState([]);\r\n  const [roundOneFinished, setRoundOneFinished] = useState(false);\r\n  const [roundTwoFinished, setRoundTwoFinished] = useState(false);\r\n  const [roundThreeFinished, setRoundThreeFinished] = useState(false);\r\n  const [passRoundProfiles, setPassRoundProfiles] = useState<\r\n    ProfileApplicationType[]\r\n  >([]);\r\n  const [start, setStart] = useState(false);\r\n  const [goToAnalyzeResult, setGoToAnalyzeResult] = useState({\r\n    signal: false,\r\n    resultData: null\r\n  });\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const [quickApproveValue, setQuickApproveValue] = useState(null);\r\n\r\n  const { onSaveApplicationStatus } = useMutateApplicationStatus();\r\n\r\n  console.log(loading);\r\n\r\n  const finishedAll = () => {\r\n    setStart(false);\r\n    setRoundOneFinished(false);\r\n    setRoundTwoFinished(false);\r\n    setRoundThreeFinished(false);\r\n    setIsAnalyzing(false);\r\n    setPassRoundProfiles([]);\r\n    setGoToAnalyzeResult({ signal: false, resultData: null });\r\n    // setAnalyzedProfile(matchJobAndProfile());\r\n    console.log('Finished All');\r\n  };\r\n\r\n  const handleSetAnalyzedProfile = async (data: ProfileApplicationType[]) => {\r\n    setAnalyzedProfile(data);\r\n  };\r\n\r\n  const handleIsAnalyzing = (data: boolean) => {\r\n    setIsAnalyzing(data);\r\n  };\r\n\r\n  const handleGoToAnalyzeResult = (signal: boolean, resultData) => {\r\n    setGoToAnalyzeResult({ signal: signal, resultData: resultData });\r\n  };\r\n\r\n  const handleAnalyzeResult = async (result: any[]) => {\r\n    const responses = await parseResponseJSONData(result);\r\n    const updatedAnalyzedProfile = updateAnalyzedProfile(responses);\r\n    updateRoundStates(updatedAnalyzedProfile);\r\n  };\r\n\r\n  const updateAnalyzedProfile = (responses: any[]) => {\r\n    return analyzedProfile.map((profile) => {\r\n      const matchingScore = calculateMatchingScore(\r\n        profile,\r\n        responses,\r\n        roundOneFinished\r\n      );\r\n      console.log('matchingScore', matchingScore);\r\n\r\n      return {\r\n        ...profile,\r\n        employee_Profile: {\r\n          ...profile?.employee_Profile,\r\n          application: {\r\n            ...profile?.employee_Profile?.application,\r\n            matchingScore\r\n          }\r\n        }\r\n      };\r\n    });\r\n  };\r\n\r\n  const updateRoundStates = (updatedAnalyzedProfile: any[]) => {\r\n    if (!roundOneFinished) {\r\n      const passRoundData = updatedAnalyzedProfile.filter(\r\n        (data) => data?.employee_Profile.application?.matchingScore >= LOW_SCORE\r\n      );\r\n      setPassRoundProfiles(passRoundData);\r\n    }\r\n\r\n    console.log('updatedAnalyzedProfile,', updatedAnalyzedProfile);\r\n\r\n    setAnalyzedProfile(updatedAnalyzedProfile);\r\n    setShowList((prev) =>\r\n      prev.map(\r\n        (item) =>\r\n          updatedAnalyzedProfile.find((res) => res?.id === item?.id) || item\r\n      )\r\n    );\r\n\r\n    if (start) {\r\n      if (!roundOneFinished) setRoundOneFinished(true);\r\n      else if (!roundTwoFinished) setRoundTwoFinished(true);\r\n      else if (!roundThreeFinished) setRoundThreeFinished(true);\r\n    }\r\n  };\r\n\r\n  const handleReview = () => {\r\n    if (!roundOneFinished) {\r\n      startReviewRound(1);\r\n    } else if (!roundTwoFinished && passRoundProfiles.length > 0) {\r\n      startReviewRound(2);\r\n    } else if (!roundThreeFinished) {\r\n      startReviewRound(3);\r\n    } else {\r\n      finishAllRounds();\r\n    }\r\n  };\r\n\r\n  const startReviewRound = (round) => {\r\n    const resetScoreList = analyzedProfile\r\n      .filter((item) => selectedRows.includes(item.id))\r\n      .map(resetMatchingScore);\r\n\r\n    setAnalyzedProfile(resetScoreList);\r\n\r\n    review({\r\n      round,\r\n      handleAnalyzeResult,\r\n      setIsAnalyzing: handleIsAnalyzing,\r\n      resetMatchingScoreList: resetScoreList,\r\n      setAnalyzedProfile: handleSetAnalyzedProfile,\r\n      handleGoToAnalyzeResult,\r\n      passRoundProfiles: round !== 1 ? passRoundProfiles : undefined\r\n    });\r\n  };\r\n\r\n  const resetMatchingScore = (profile) => ({\r\n    ...profile,\r\n    employee_Profile: {\r\n      ...profile.employee_Profile,\r\n      application: {\r\n        ...profile.employee_Profile.application,\r\n        matchingScore: null\r\n      }\r\n    }\r\n  });\r\n\r\n  const finishAllRounds = () => {\r\n    Promise.all(\r\n      showList\r\n        .filter((item) => selectedRows.includes(item.id))\r\n        .map((item) =>\r\n          onSaveApplicationStatus([\r\n            item.id,\r\n            {\r\n              matchingScore: item?.employee_Profile?.application?.matchingScore\r\n            }\r\n          ])\r\n        )\r\n    ).then(finishedAll);\r\n  };\r\n\r\n  const handleQuickApprove = () => {\r\n    alertDialog({\r\n      handleConfirm,\r\n      message: `Chuyển các hồ sơ đã chọn sang trạng thái ${ApprovalStatus[quickApproveValue]}?`\r\n    });\r\n  };\r\n\r\n  const handleChangeValue = (e) => {\r\n    setQuickApproveValue(e.target.value);\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    Promise.all(\r\n      selectedRows.map((id) =>\r\n        onSaveApplicationStatus([id, { status: quickApproveValue }])\r\n      )\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (goToAnalyzeResult.signal) {\r\n      handleAnalyzeResult(goToAnalyzeResult.resultData);\r\n    }\r\n  }, [goToAnalyzeResult.signal]);\r\n\r\n  useEffect(() => {\r\n    setShowList(data);\r\n    setAnalyzedProfile(data);\r\n  }, [data]);\r\n\r\n  // Start Round 1, 2, 3\r\n  useEffect(() => {\r\n    if (!start) return;\r\n    handleReview();\r\n  }, [start, roundOneFinished, roundTwoFinished, roundThreeFinished]);\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          display: 'block',\r\n          float: { md: 'right' },\r\n          minWidth: { md: 500 },\r\n          maxWidth: 500\r\n        }}\r\n      >\r\n        <Grid\r\n          container\r\n          sx={{\r\n            alignItems: 'center'\r\n          }}\r\n          spacing={1}\r\n        >\r\n          <Grid item md={3} xs={12}>\r\n            <Typography\r\n              fontWeight={700}\r\n              textAlign={'center'}\r\n              sx={{ mt: { xs: 2, md: 0 } }}\r\n            >\r\n              Đã chọn: {selectedRows.length}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item md={5} xs={12} display={'flex'}>\r\n            <SelectInput\r\n              options={APPROVAL_STATUS}\r\n              onChange={handleChangeValue}\r\n              value={selectedRows.length > 0 ? quickApproveValue : ''}\r\n              sx={{\r\n                color: APPROVAL_STATUS.find(\r\n                  (item) => item.value === quickApproveValue\r\n                )?.optionColor\r\n              }}\r\n              disabled={!selectedRows.length}\r\n              label=\"Duyệt nhanh\"\r\n            />\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              color=\"info\"\r\n              sx={{\r\n                py: 1,\r\n                px: 0\r\n              }}\r\n              onClick={handleQuickApprove}\r\n              disabled={!selectedRows.length || !quickApproveValue}\r\n            >\r\n              <CheckIcon sx={{ fontSize: 15 }} />\r\n            </Button>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            md={4}\r\n            xs={12}\r\n            sx={{\r\n              display: 'flex',\r\n              alignItems: 'center'\r\n            }}\r\n          >\r\n            <Button\r\n              onClick={() => setStart(selectedRows.length > 0)}\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              disabled={start || !selectedRows.length}\r\n              fullWidth\r\n              sx={{ py: 1, px: 0 }}\r\n            >\r\n              <Grid item xs={!isAnalyzing ? 12 : 9}>\r\n                {!selectedRows.length\r\n                  ? 'Chưa chọn hồ sơ'\r\n                  : !start\r\n                  ? 'Phân tích nhanh'\r\n                  : 'Đang phân tích'}\r\n              </Grid>\r\n              <Grid item xs={isAnalyzing ? 3 : 0}>\r\n                {isAnalyzing && (\r\n                  <CircularProgress size={18} color=\"secondary\" />\r\n                )}\r\n              </Grid>\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n      <TableData\r\n        rows={showList}\r\n        columns={columns}\r\n        initialState={{\r\n          pagination: {\r\n            paginationModel: {\r\n              pageSize: pageSize\r\n            }\r\n          },\r\n          columns: {\r\n            columnVisibilityModel: {\r\n              jobTitle: !isMobile,\r\n              applicationType: !isMobile,\r\n              matchingScore: !isMobile\r\n            }\r\n          }\r\n        }}\r\n        hideFooter\r\n        sx={{ minHeight: '74vh', width: '100%' }}\r\n        checkboxSelection\r\n        disableRowSelectionOnClick={isMobile}\r\n        rowSelection={true}\r\n        onRowSelectionModelChange={(ids) => {\r\n          setSelectedRows(ids);\r\n        }}\r\n        loading={loading}\r\n      />\r\n      <Pagination\r\n        currentPage={currentPage}\r\n        totalPages={totalPages}\r\n        handlePageChange={handlePageChange}\r\n        disabled={start || loading}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  Tab,\r\n  Tabs,\r\n  styled\r\n} from '@mui/material';\r\nimport useQueryCandidateApplications from 'src/modules/application/hooks/useQueryCandidateApplications';\r\nimport Table from './Table';\r\nimport SuspenseLoader from 'src/components/SuspenseLoader';\r\nimport { useEffect, useMemo, useState } from 'react';\r\nimport useQueryTotalResultOfApplicationByEmployer from 'src/modules/application/hooks/useQueryTotalResultOfApplicationByEmployer';\r\nimport TabsWrapper from 'src/components/TabWrapper';\r\nimport Pagination from 'src/components/Pagination';\r\nimport useApplicationList from 'src/modules/jobs/hooks/useFollowJobList';\r\nimport { deepEqual } from 'src/utils/formatData';\r\nimport {\r\n  ProfileApplicationType,\r\n  getKeywords,\r\n  preprocessJobData\r\n} from 'src/utils/reviewProfile';\r\nimport { Job } from 'src/modules/jobs/model';\r\nimport { useQueryJobByIdList } from 'src/modules/jobs/hooks/useQueryJobById';\r\n\r\nconst tabs = [\r\n  { label: 'Tất cả', value: '' },\r\n  { label: 'Đã duyệt', value: 'Đã duyệt' },\r\n  { label: 'Chờ duyệt', value: 'Chờ duyệt' },\r\n  { label: 'Từ chối', value: 'Từ chối' },\r\n  { label: 'Hết hạn', value: 'Hết hạn' }\r\n];\r\n\r\nconst matchJobAndProfile = (jobs: Job[], data): ProfileApplicationType[] =>\r\n  data\r\n    ?.map((item) => {\r\n      const job = jobs?.find((job) => job?.postId === item?.postId);\r\n      if (!job) return null;\r\n\r\n      const {\r\n        application_id,\r\n        name,\r\n        email,\r\n        phone,\r\n        applicationType,\r\n        status,\r\n        matchingScore,\r\n        employee,\r\n        CV,\r\n        id\r\n      } = item;\r\n      const { postId, jobTitle } = job;\r\n      const keywords = getKeywords(item);\r\n\r\n      const applicationInfo = {\r\n        id: application_id,\r\n        employer_Requirement: preprocessJobData(job),\r\n        employee_Profile: {\r\n          online_profile: employee?.online_profile,\r\n          attached_document: employee?.attached_document,\r\n          personal_information: {\r\n            ...employee?.user,\r\n            name,\r\n            email,\r\n            phone\r\n          },\r\n          application: {\r\n            id,\r\n            application_id,\r\n            postId,\r\n            CV,\r\n            applicationType,\r\n            jobTitle,\r\n            keywords,\r\n            name,\r\n            status,\r\n            matchingScore\r\n          }\r\n        }\r\n      };\r\n      return applicationInfo;\r\n    })\r\n    .filter(Boolean);\r\n\r\nconst CandidateProfiles = () => {\r\n  const pageSize = 9;\r\n  const [currentTab, setCurrentTab] = useState('');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const {\r\n    data,\r\n    isLoading: isLoadingData,\r\n    totalPages\r\n  } = useQueryCandidateApplications({\r\n    page: currentPage,\r\n    num: pageSize,\r\n    status: currentTab\r\n  });\r\n  const jobsIdList: number[] = useMemo(\r\n    () => [...new Set<number>(data?.map((item) => item?.postId))],\r\n    [data]\r\n  );\r\n\r\n  const { jobs, isLoading: isLoadingJobs } = useQueryJobByIdList(jobsIdList);\r\n\r\n  const handleTabsChange = (e, value) => {\r\n    setCurrentPage(1);\r\n    setCurrentTab(value);\r\n  };\r\n\r\n  // First time render the page\r\n  const initialJobProfileData = useMemo(() => {\r\n    console.log('...');\r\n\r\n    return matchJobAndProfile(jobs, data);\r\n  }, [data, jobs]);\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\">\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"stretch\"\r\n        spacing={3}\r\n        marginTop={0}\r\n      >\r\n        <Grid item xs={12}>\r\n          <Card>\r\n            <CardHeader title=\"Danh Sách ứng viên\" />\r\n            <Divider />\r\n            <CardContent>\r\n              <TabsWrapper\r\n                onChange={handleTabsChange}\r\n                value={currentTab}\r\n                variant=\"scrollable\"\r\n                scrollButtons={false}\r\n                sx={{\r\n                  display: { md: 'inline-block' },\r\n                  borderBottom: 1,\r\n                  borderColor: 'divider'\r\n                }}\r\n              >\r\n                {tabs.map((tab) => {\r\n                  return (\r\n                    <Tab key={tab.value} label={tab.label} value={tab.value} />\r\n                  );\r\n                })}\r\n              </TabsWrapper>\r\n              <Table\r\n                data={initialJobProfileData}\r\n                pageSize={pageSize}\r\n                currentPage={currentPage}\r\n                totalPages={totalPages}\r\n                handlePageChange={setCurrentPage}\r\n                loading={isLoadingData || isLoadingJobs}\r\n              />\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CandidateProfiles;\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\nexports.default = _default;"],"names":["styled","Tabs","params","_data$data","_data$data$meta","_data$data2","_data$data2$items","_data$data3","_data$data3$meta","_data$data4","_data$data4$meta","_data$data5","_data$data5$meta","_data$data6","_data$data6$meta","_data$data7","_data$data7$meta","isEmployer","useApp","data","isLoading","refetch","isFetching","useQuery","CandidateProfilesService","get","keepPreviousData","retry","refetchOnWindowFocus","enabled","console","log","meta","itemCount","items","map","item","id","application_id","totalItems","itemPerPage","totalPages","currentPage","useMutateApplicationStatus","queryClient","useQueryClient","toast","mutateAsync","useMutation","_ref","UpdateStatusService","update","onSuccess","res","status","invalidateQueries","success","massage","message","error","onError","response","onSaveApplicationStatus","profile","domNode","document","createElement","root","createRoot","body","appendChild","render","_jsx","ThemeProvider","children","_jsxs","Dialog","open","fullWidth","maxWidth","fullScreen","isMobile","DialogTitle","sx","textAlign","fontWeight","fontSize","IconButton","onClick","handleClose","unmount","position","right","top","color","theme","palette","grey","CloseIcon","Divider","bgcolor","height","DialogContent","ViewCV","user","showTitle","ViewJobDetail","postId","setSelectedId","useQueryJobById","SuspenseLoader","Boolean","onClose","Container","paddingY","CardApply","TabContent","CompanyInfoTab","mt","company","employer","columns","field","headerName","minWidth","renderCell","employee_Profile","row","application","Grid","container","alignItems","xs","sm","TypographyEllipsis","textDecoration","cursor","openProfile","name","display","Tooltip","title","size","handleOpenDetailModal","rating","ratingStar","matchingScore","detailsData","jobTitle","applicationType","Rating","value","max","readOnly","bottom","detailsModal","ReadMoreIcon","sortable","selectedId","useState","_Fragment","_data$row","headerAlign","align","_data$row2","_data$row2$employee_P","_data$row2$employee_P2","_APPROVAL_STATUS$find2","setValue","useEffect","_APPROVAL_STATUS$find","APPROVAL_STATUS","initValue","find","label","SelectInput","options","onChange","newValue","target","then","optionColor","undefined","Typography","fontStyle","Table","props","_APPROVAL_STATUS$find3","pageSize","handlePageChange","loading","analyzedProfile","setAnalyzedProfile","isAnalyzing","setIsAnalyzing","showList","setShowList","roundOneFinished","setRoundOneFinished","roundTwoFinished","setRoundTwoFinished","roundThreeFinished","setRoundThreeFinished","passRoundProfiles","setPassRoundProfiles","start","setStart","goToAnalyzeResult","setGoToAnalyzeResult","signal","resultData","selectedRows","setSelectedRows","quickApproveValue","setQuickApproveValue","finishedAll","handleSetAnalyzedProfile","async","handleIsAnalyzing","handleGoToAnalyzeResult","handleAnalyzeResult","responses","parseResponseJSONData","result","updatedAnalyzedProfile","updateAnalyzedProfile","updateRoundStates","_profile$employee_Pro","calculateMatchingScore","passRoundData","filter","_data$employee_Profil","LOW_SCORE","prev","startReviewRound","round","resetScoreList","includes","resetMatchingScore","review","resetMatchingScoreList","finishAllRounds","Promise","all","_item$employee_Profil","_item$employee_Profil2","handleConfirm","length","Box","float","md","spacing","e","disabled","Button","variant","py","px","handleQuickApprove","alertDialog","concat","ApprovalStatus","CheckIcon","CircularProgress","TableData","rows","initialState","pagination","paginationModel","columnVisibilityModel","hideFooter","minHeight","width","checkboxSelection","disableRowSelectionOnClick","rowSelection","onRowSelectionModelChange","ids","Pagination","tabs","CandidateProfiles","currentTab","setCurrentTab","setCurrentPage","isLoadingData","useQueryCandidateApplications","page","num","jobsIdList","useMemo","Set","jobs","isLoadingJobs","useQueryJobByIdList","initialJobProfileData","matchJobAndProfile","job","email","phone","employee","CV","keywords","getKeywords","employer_Requirement","preprocessJobData","online_profile","attached_document","personal_information","direction","justifyContent","marginTop","Card","CardHeader","CardContent","TabsWrapper","handleTabsChange","scrollButtons","borderBottom","borderColor","tab","Tab","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}