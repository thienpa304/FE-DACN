{"version":3,"file":"static/js/706.e0af4ea9.chunk.js","mappings":"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","sources":["components/LinkText/index.tsx","components/Typography/index.tsx","modules/jobs/hooks/useQueryJobByOwner.ts","modules/getEmployee/hook/useQueryEmployeeByKeywords.ts","modules/getEmployee/components/RecommendProfile.tsx","pages/recommend-profiles/index.tsx","modules/jobs/hooks/useDeleteJobById.ts","pages/recruitment-list/TablePost.tsx","../node_modules/@mui/icons-material/DeleteOutline.js","../node_modules/@mui/icons-material/RemoveRedEye.js"],"sourcesContent":["import { styled } from '@mui/material';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst LinkWrapper = styled(Link)(({ theme }) => ({\n  textDecoration: 'none',\n  color: theme.colors.info.dark,\n  '&:active': {\n    color: theme.colors.primary.light\n  },\n  '&:visited': {\n    color: theme.colors.info.dark\n  }\n}));\nconst LinkText = (props) => {\n  return <LinkWrapper {...props} />;\n};\n\nexport default LinkText;\n","import { styled } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\n\nexport const TypographyEllipsis = styled(Typography)(({ theme }) => ({\n  whiteSpace: 'nowrap',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis'\n}));\n","import { AxiosError } from 'axios';\nimport { useQuery } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { JobService } from '../jobService';\nimport { Job } from '../model';\nimport { useApp } from 'src/modules/app/hooks';\n\ntype PropsType = {\n  totalResults: number;\n  result: Job[];\n};\nconst useQueryJobByOwner = (params?) => {\n  const { isEmployer } = useApp();\n  const { data, isLoading } = useQuery<\n    ResponseData<PropsType>,\n    AxiosError<ResponseData<PropsType>>\n  >(\n    ['jobOwner-getList', params?.status, params?.page],\n    () => JobService.get({ params }),\n    {\n      retry: 1,\n      refetchOnWindowFocus: false,\n      keepPreviousData: true,\n      enabled: isEmployer\n    }\n  );\n\n  return {\n    jobs:\n      data?.data?.result?.map((item) => ({ ...item, id: item.postId })) || [],\n    totalResults: data?.data?.totalResults || 0,\n    isLoading\n  };\n};\n\nexport default useQueryJobByOwner;\n","import { AxiosError } from 'axios';\r\nimport { useQuery } from 'react-query';\r\nimport { ResponseData } from 'src/common/http-request';\r\nimport { Employee, User } from 'src/modules/users/model';\r\nimport { RecommendEmployeeService } from '../getEmployeeService';\r\nimport { useApp } from 'src/modules/app/hooks';\r\nimport { Job } from 'src/modules/jobs/model';\r\nimport { ProfileShowType } from '../model';\r\nimport { TotalResults } from 'src/modules/jobs/jobService';\r\n\r\ntype PropsType = {\r\n  totalCount: number;\r\n  result: ProfileShowType[];\r\n};\r\n\r\nconst useQueryEmployeeByKeywords = (params?) => {\r\n  const { isEmployer } = useApp();\r\n  const { data, isLoading, refetch } = useQuery<\r\n    ResponseData<PropsType>,\r\n    AxiosError<ResponseData<PropsType>>\r\n  >(\r\n    ['get-ProfileByKeywords', params],\r\n    () => {\r\n      for (const key in params) {\r\n        if (params[key] === 'Tất cả' || params[key] === undefined) {\r\n          params[key] = '';\r\n        }\r\n      }\r\n      const item = { ...params, currentPosition: params?.positionLevel };\r\n      delete item.positionLevel;\r\n\r\n      return RecommendEmployeeService.get({ params: item });\r\n    },\r\n    {\r\n      retry: 1,\r\n      refetchOnWindowFocus: false,\r\n      enabled: isEmployer && Boolean(params?.keywords)\r\n    }\r\n  );\r\n\r\n  return {\r\n    profile: data?.data?.result || [],\r\n    totalResults: data?.data?.totalCount,\r\n    isLoading,\r\n    refetch\r\n  };\r\n};\r\n\r\nexport default useQueryEmployeeByKeywords;\r\n","import {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  CircularProgress,\n  Container,\n  Divider,\n  Grid,\n  IconButton,\n  Typography\n} from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport ProfileCard from './ProfileCard';\nimport SuspenseLoader from 'src/components/SuspenseLoader';\nimport useQueryJobByOwner from 'src/modules/jobs/hooks/useQueryJobByOwner';\nimport TableData from 'src/components/TableData';\nimport { GridColDef } from '@mui/x-data-grid';\nimport { renderJobTitle } from 'src/pages/recruitment-list/TablePost';\nimport useQueryEmployeeByKeywords from '../hook/useQueryEmployeeByKeywords';\nimport Pagination from 'src/components/Pagination';\nimport JobFilter from 'src/modules/jobs/components/JobFilter';\n\nexport default function RecommendProfile() {\n  const jobPageSize = 9;\n  const profilePageSize = 8;\n  const [jobCurrentPage, setJobCurrentPage] = useState(1);\n  const [profileCurrentPage, setProfleCurrentPage] = useState(1);\n  const [keywords, setKeywords] = useState('');\n  const [showProfile, setShowProfile] = useState([]);\n  const [jobInfo, setJobInfo] = useState(null);\n  const [filter, setFilter] = useState(null);\n  const {\n    jobs,\n    totalResults: totalJobResults,\n    isLoading\n  } = useQueryJobByOwner({\n    page: jobCurrentPage,\n    num: jobPageSize,\n    status: 'Đã duyệt'\n  });\n\n  const {\n    profile,\n    totalResults: totalProfileResults,\n    isLoading: isLoadingProfile\n  } = useQueryEmployeeByKeywords({\n    page: profileCurrentPage,\n    num: profilePageSize,\n    keywords: keywords,\n    ...jobInfo,\n    ...filter\n  });\n\n  const totalJobPages = Math.ceil(totalJobResults / jobPageSize) || 1;\n  const totalProfilePages =\n    Math.ceil(totalProfileResults / profilePageSize) || 1;\n\n  const addInfo = (job) => {\n    setJobInfo({\n      profession: job?.profession\n    });\n  };\n\n  const handleFilter = (data) => {\n    setFilter((prev) => ({\n      ...prev,\n      ...data\n    }));\n  };\n\n  const renderAtion = (data) => {\n    return (\n      <Button\n        onClick={() => {\n          setKeywords(data?.row?.keywords);\n          addInfo(data?.row);\n        }}\n        variant=\"contained\"\n      >\n        Bắt đầu\n      </Button>\n    );\n  };\n  const columns: GridColDef[] = [\n    {\n      field: 'jobTitle',\n      headerName: 'Tên tin đăng',\n      minWidth: 550,\n      headerAlign: 'center',\n      renderCell: renderJobTitle\n    },\n    {\n      field: 'keywords',\n      headerName: 'Từ khóa',\n      minWidth: 400,\n      headerAlign: 'center'\n      // renderCell: renderJobTitle\n    },\n    {\n      field: 'action',\n      headerName: 'Tìm hồ sơ',\n      minWidth: 150,\n      headerAlign: 'center',\n      align: 'center',\n      renderCell: renderAtion\n    }\n  ];\n\n  useEffect(() => {\n    if (!profile) return;\n    const testProfiles = profile?.map((item) => {\n      return {\n        ...item,\n        personal_information: {\n          sex: item?.employee?.user?.sex,\n          dob: item?.employee?.user?.dob\n        },\n        online_profile: {\n          profession: item?.profession,\n          degree: item?.degree,\n          experience: item?.experience\n        }\n      };\n    });\n    setShowProfile(profile);\n    const section = document.getElementById('recommend-profile');\n    section?.scrollIntoView({ behavior: 'smooth' });\n  }, [JSON.stringify(profile)]);\n\n  if (isLoading) return <SuspenseLoader />;\n\n  return (\n    <Container maxWidth=\"xl\" sx={{ p: 3 }}>\n      <Typography fontSize={22} fontWeight={700}>\n        Gợi ý hồ sơ tiềm năng\n      </Typography>\n      <Grid\n        container\n        direction=\"row\"\n        justifyContent=\"center\"\n        alignItems=\"stretch\"\n        spacing={3}\n        marginTop={0}\n      >\n        <Grid item xs={12}>\n          <Card>\n            <CardHeader title=\"Tìm kiếm theo tin tuyển dụng\" />\n            <Divider />\n            <CardContent>\n              <TableData\n                rows={jobs}\n                columns={columns}\n                initialState={{\n                  pagination: {\n                    paginationModel: {\n                      pageSize: jobPageSize\n                    }\n                  }\n                }}\n                sx={{\n                  minHeight: '74vh',\n                  justifySelf: 'center',\n                  mx: 'auto'\n                }}\n                hideFooter\n              />\n              <Pagination\n                currentPage={jobCurrentPage}\n                totalPages={totalJobPages}\n                handlePageChange={setJobCurrentPage}\n              />\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n      <Box id=\"recommend-profile\" display={!jobInfo && 'none'}>\n        <Typography fontWeight={700} fontSize={22} my={3}>\n          Hồ sơ gợi ý\n        </Typography>\n        <JobFilter handleFilter={handleFilter} />\n        <Grid container xs={12} sx={{ width: '100%' }}>\n          <Grid item xs={12}>\n            <Container\n              sx={{\n                mb: 3,\n                p: 3,\n                bgcolor: '#fbfeff',\n                minHeight: '72vh'\n              }}\n            >\n              {isLoadingProfile && <CircularProgress />}\n              <Grid container spacing={1} mb={2}>\n                {showProfile?.map((item, index) => (\n                  <Grid key={index} item xs={12} sm={6} md={3}>\n                    <Box sx={{ display: 'flex', justifyContent: 'center' }}>\n                      <ProfileCard profile={item} />\n                    </Box>\n                  </Grid>\n                ))}\n              </Grid>\n\n              {!Boolean(showProfile?.length) ? (\n                <Box\n                  sx={{\n                    display: 'flex',\n                    justifyContent: 'center'\n                  }}\n                >\n                  <Typography\n                    mt={10}\n                    textAlign=\"center\"\n                    fontStyle=\"italic\"\n                    color=\"#9999\"\n                  >\n                    Không tìm được hồ sơ phù hợp\n                  </Typography>\n                </Box>\n              ) : (\n                <Pagination\n                  currentPage={profileCurrentPage}\n                  totalPages={totalProfilePages}\n                  handlePageChange={setProfleCurrentPage}\n                />\n              )}\n            </Container>\n          </Grid>\n        </Grid>\n      </Box>\n    </Container>\n  );\n}\n","import React from 'react';\nimport FindProfiles from 'src/modules/getEmployee/components/FindProfiles';\nimport RecommendProfile from 'src/modules/getEmployee/components/RecommendProfile';\n\nexport default function index() {\n  return <RecommendProfile />;\n}\n","import { AxiosError } from 'axios';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { useApp } from 'src/modules/app/hooks';\nimport { JobService } from '../jobService';\nimport { Job } from '../model';\n\nconst useDeleteJobById = () => {\n  const queryClient = useQueryClient();\n  const { toast } = useApp();\n  const { mutate: onDeleteById, isLoading } = useMutation<\n    ResponseData<Job>,\n    AxiosError<ResponseData<Job>>,\n    [id: string]\n  >(([id]) => JobService.remove(id), {\n    onSuccess: (res) => {\n      if (res.status === 200) {\n        queryClient.invalidateQueries(['jobOwner-getList']);\n        toast.success({ massage: res.message });\n      } else {\n        toast.error({ massage: res.message });\n      }\n    },\n    onError: (error) => {\n      toast.error({ massage: error.response.data.message });\n    }\n  });\n\n  return {\n    onDeleteById,\n    isLoading\n  };\n};\n\nexport default useDeleteJobById;\n","import Box from '@mui/material/Box';\nimport { GridColDef } from '@mui/x-data-grid';\nimport LinkText from 'src/components/LinkText';\nimport TableData from 'src/components/TableData';\nimport RemoveRedEyeIcon from '@mui/icons-material/RemoveRedEye';\nimport { Chip, Grid } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport Tooltip from '@mui/material/Tooltip';\nimport { useNavigate } from 'react-router';\nimport { APPROVAL_STATUS } from 'src/constants';\nimport { TypographyEllipsis } from 'src/components/Typography';\nimport dayjs from 'dayjs';\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\nimport ModeEditOutlineIcon from '@mui/icons-material/ModeEditOutline';\nimport useDeleteJobById from 'src/modules/jobs/hooks/useDeleteJobById';\nimport alertDialog from 'src/utils/alertDialog';\nimport { rewriteUrl } from 'src/utils/rewriteUrl';\n\nexport const renderJobTitle = (data) => {\n  const jobTitle = rewriteUrl(data?.row?.jobTitle);\n  const navigate = useNavigate();\n  const handleLinkToDetail = () => {\n    navigate(`/job/${jobTitle}?id=${btoa(data?.row?.postId)}`, {\n      state: { postId: data?.row?.postId }\n    });\n  };\n  return (\n    <>\n      <Grid container alignItems={'center'}>\n        <Grid item xs={1}>\n          <Tooltip title=\"Xem trực tiếp\">\n            <IconButton size=\"small\" onClick={handleLinkToDetail}>\n              <RemoveRedEyeIcon sx={{ width: 18, height: 18, color: 'gray' }} />\n            </IconButton>\n          </Tooltip>\n        </Grid>\n        <Grid item xs={11}>\n          <LinkText\n            to={`/employer/recruitment/list/${rewriteUrl(data?.row?.jobTitle)}`}\n            state={{ postId: data?.row?.postId }}\n          >\n            <TypographyEllipsis> {data.value}</TypographyEllipsis>\n          </LinkText>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nconst renderStatus = (data) => {\n  const color = APPROVAL_STATUS.find((item) => item.label === data.value).color;\n  return (\n    <Chip label={data.value} size=\"small\" color={color} variant=\"outlined\" />\n  );\n};\n\nconst rederDate = (data) => {\n  const date = dayjs(data?.value).format('DD/MM/YYYY');\n  return <>{date}</>;\n};\n\nconst renderAtion = (data) => {\n  const { onDeleteById } = useDeleteJobById();\n\n  const handleConfirmDelete = (id) => {\n    onDeleteById([id]);\n  };\n\n  const handleDelete = (data) => {\n    alertDialog({\n      selectedId: data.id,\n      handleConfirm: handleConfirmDelete\n    });\n  };\n\n  return (\n    <>\n      <IconButton onClick={() => handleDelete(data)}>\n        <DeleteOutlineIcon />\n      </IconButton>\n    </>\n  );\n};\n\nconst columns: GridColDef[] = [\n  {\n    field: 'jobTitle',\n    headerName: 'Tên tin đăng',\n    minWidth: 400,\n    maxWidth: 450,\n    headerAlign: 'center',\n    renderCell: renderJobTitle\n  },\n  {\n    field: 'createAt',\n    headerName: 'Ngày đăng tin',\n    minWidth: 150,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: rederDate,\n    sortable: true\n  },\n  {\n    field: 'applicationDeadline',\n    headerName: 'Hạn nộp hồ sơ',\n    minWidth: 150,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: rederDate,\n    sortable: true\n  },\n  {\n    field: 'submissionCount',\n    headerName: 'Lượt nộp',\n    minWidth: 100,\n    headerAlign: 'center',\n    align: 'center',\n    sortable: true\n  },\n  {\n    field: 'view',\n    headerName: 'Lượt xem',\n    minWidth: 100,\n    headerAlign: 'center',\n    align: 'center',\n    sortable: true\n  },\n  {\n    field: 'status',\n    headerName: 'Trạng thái',\n    minWidth: 120,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: renderStatus,\n    sortable: true\n  },\n  {\n    field: 'action',\n    headerName: 'Xóa tin đăng',\n    minWidth: 120,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: renderAtion\n  }\n];\n\nexport default function TablePost({ data, pageSize }) {\n  return (\n    <TableData\n      rows={data}\n      columns={columns}\n      initialState={{\n        pagination: {\n          paginationModel: {\n            pageSize: pageSize\n          }\n        }\n      }}\n      hideFooter\n      sx={{ height: '74vh', width: '100%' }}\n    />\n  );\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9zm7.5-5-1-1h-5l-1 1H5v2h14V4z\"\n}), 'DeleteOutline');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'RemoveRedEye');\nexports.default = _default;"],"names":["LinkWrapper","styled","Link","_ref","theme","textDecoration","color","colors","info","dark","primary","light","props","_jsx","TypographyEllipsis","Typography","whiteSpace","overflow","textOverflow","params","_data$data","_data$data$result","_data$data2","isEmployer","useApp","data","isLoading","useQuery","status","page","JobService","get","retry","refetchOnWindowFocus","keepPreviousData","enabled","jobs","result","map","item","id","postId","totalResults","refetch","key","undefined","currentPosition","positionLevel","RecommendEmployeeService","Boolean","keywords","profile","totalCount","RecommendProfile","jobCurrentPage","setJobCurrentPage","useState","profileCurrentPage","setProfleCurrentPage","setKeywords","showProfile","setShowProfile","jobInfo","setJobInfo","filter","setFilter","totalJobResults","useQueryJobByOwner","num","totalProfileResults","isLoadingProfile","useQueryEmployeeByKeywords","totalJobPages","Math","ceil","totalProfilePages","columns","field","headerName","minWidth","headerAlign","renderCell","renderJobTitle","align","Button","onClick","_data$row","job","row","profession","variant","children","useEffect","_item$employee","_item$employee$user","_item$employee2","_item$employee2$user","personal_information","sex","employee","user","dob","online_profile","degree","experience","section","document","getElementById","scrollIntoView","behavior","JSON","stringify","SuspenseLoader","_jsxs","Container","maxWidth","sx","p","fontSize","fontWeight","Grid","container","direction","justifyContent","alignItems","spacing","marginTop","xs","Card","CardHeader","title","Divider","CardContent","TableData","rows","initialState","pagination","paginationModel","pageSize","minHeight","justifySelf","mx","hideFooter","Pagination","currentPage","totalPages","handlePageChange","Box","display","my","JobFilter","handleFilter","prev","width","mb","bgcolor","CircularProgress","index","sm","md","ProfileCard","length","mt","textAlign","fontStyle","useDeleteJobById","queryClient","useQueryClient","toast","mutate","onDeleteById","useMutation","remove","onSuccess","res","invalidateQueries","success","massage","message","error","onError","response","_data$row4","_data$row5","jobTitle","rewriteUrl","navigate","useNavigate","_Fragment","Tooltip","IconButton","size","handleLinkToDetail","_data$row2","_data$row3","concat","btoa","state","RemoveRedEyeIcon","height","LinkText","to","value","rederDate","date","dayjs","format","sortable","APPROVAL_STATUS","find","label","Chip","handleConfirmDelete","alertDialog","selectedId","handleConfirm","handleDelete","DeleteOutlineIcon","TablePost","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}