{"version":3,"file":"static/js/723.cebbc354.chunk.js","mappings":"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","sources":["components/Footer/index.tsx","components/PageTitleWrapper/index.tsx","components/Text/index.tsx","modules/users/settings/ActivityTab.tsx","modules/users/settings/NotificationsTab.tsx","modules/users/settings/SecurityTab.tsx","modules/users/settings/index.tsx"],"sourcesContent":["import { Box, Container, Link, Typography, styled } from '@mui/material';\n\nconst FooterWrapper = styled(Container)(\n  ({ theme }) => `\n        margin-top: ${theme.spacing(4)};\n`\n);\n\nfunction Footer() {\n  return (\n    <FooterWrapper className=\"footer-wrapper\">\n      <Box\n        pb={2}\n        display={{ xs: 'block', md: 'flex' }}\n        alignItems=\"center\"\n        textAlign={{ xs: 'center', md: 'left' }}\n        justifyContent=\"space-between\"\n      ></Box>\n    </FooterWrapper>\n  );\n}\n\nexport default Footer;\n","import { FC, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Container, styled } from '@mui/material';\n\nconst PageTitle = styled(Box)(\n  ({ theme }) => `\n        padding: ${theme.spacing(4)};\n`\n);\n\ninterface PageTitleWrapperProps {\n  children?: ReactNode;\n}\n\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\n  return (\n    <PageTitle className=\"MuiPageTitle-wrapper\">\n      <Container maxWidth=\"lg\">{children}</Container>\n    </PageTitle>\n  );\n};\n\nPageTitleWrapper.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default PageTitleWrapper;\n","import { FC, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material';\n\ninterface TextProps {\n  className?: string;\n  color?:\n    | 'primary'\n    | 'secondary'\n    | 'error'\n    | 'warning'\n    | 'success'\n    | 'info'\n    | 'black';\n  flex?: boolean;\n  children?: ReactNode;\n}\n\nconst TextWrapper = styled('span')(\n  ({ theme }) => `\n      display: inline-block;\n      align-items: center;\n\n      &.flexItem {\n        display: inline-flex;\n      }\n      \n      &.MuiText {\n\n        &-black {\n          color: ${theme.palette.common.black}\n        }\n\n        &-primary {\n          color: ${theme.palette.primary.main}\n        }\n        \n        &-secondary {\n          color: ${theme.palette.secondary.main}\n        }\n        \n        &-success {\n          color: ${theme.palette.success.main}\n        }\n        \n        &-warning {\n          color: ${theme.palette.warning.main}\n        }\n              \n        &-error {\n          color: ${theme.palette.error.main}\n        }\n        \n        &-info {\n          color: ${theme.palette.info.main}\n        }\n      }\n`\n);\n\nconst Text: FC<TextProps> = ({\n  className,\n  color = 'secondary',\n  flex,\n  children,\n  ...rest\n}) => {\n  return (\n    <TextWrapper\n      className={clsx('MuiText-' + color, { flexItem: flex })}\n      {...rest}\n    >\n      {children}\n    </TextWrapper>\n  );\n};\n\nText.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'error',\n    'warning',\n    'success',\n    'info',\n    'black'\n  ])\n};\n\nexport default Text;\n","import {\n  Box,\n  CardMedia,\n  Typography,\n  Card,\n  CardHeader,\n  Divider,\n  Avatar,\n  IconButton,\n  Button,\n  CardActions,\n  Link\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nimport MoreHorizTwoToneIcon from '@mui/icons-material/MoreHorizTwoTone';\nimport ThumbUpAltTwoToneIcon from '@mui/icons-material/ThumbUpAltTwoTone';\nimport CommentTwoToneIcon from '@mui/icons-material/CommentTwoTone';\nimport ShareTwoToneIcon from '@mui/icons-material/ShareTwoTone';\nimport Text from 'src/components/Text';\n\nconst CardActionsWrapper = styled(CardActions)(\n  ({ theme }) => `\n     background: ${theme.colors.alpha.black[5]};\n     padding: ${theme.spacing(3)};\n`\n);\n\nfunction ActivityTab() {\n  return (\n    <Card>\n      <CardHeader\n        avatar={<Avatar src=\"/static/images/avatars/5.jpg\" />}\n        action={\n          <IconButton color=\"primary\">\n            <MoreHorizTwoToneIcon fontSize=\"medium\" />\n          </IconButton>\n        }\n        titleTypographyProps={{ variant: 'h4' }}\n        subheaderTypographyProps={{ variant: 'subtitle2' }}\n        title=\"Allison Lipshutz\"\n        subheader={\n          <>\n            Managing Partner,{' '}\n            <Link href=\"#\" underline=\"hover\">\n              #software\n            </Link>\n            ,{' '}\n            <Link href=\"#\" underline=\"hover\">\n              #managers\n            </Link>\n            , Google Inc.\n          </>\n        }\n      />\n      <Box px={3} pb={2}>\n        <Typography variant=\"h4\" fontWeight=\"normal\">\n          Welcome to organizing your remote office for maximum productivity.\n        </Typography>\n      </Box>\n      <CardMedia\n        sx={{ minHeight: 280 }}\n        image=\"/static/images/placeholders/covers/6.jpg\"\n        title=\"Card Cover\"\n      />\n      <Box p={3}>\n        <Typography variant=\"h2\" sx={{ pb: 1 }}>\n          Organizing Your Remote Office for Maximum Productivity\n        </Typography>\n        <Typography variant=\"subtitle2\">\n          <Link href=\"#\" underline=\"hover\">\n            example.com\n          </Link>{' '}\n          • 4 mins read\n        </Typography>\n      </Box>\n      <Divider />\n      <CardActionsWrapper\n        sx={{\n          display: { xs: 'block', md: 'flex' },\n          alignItems: 'center',\n          justifyContent: 'space-between'\n        }}\n      >\n        <Box>\n          <Button startIcon={<ThumbUpAltTwoToneIcon />} variant=\"contained\">\n            Like\n          </Button>\n          <Button\n            startIcon={<CommentTwoToneIcon />}\n            variant=\"outlined\"\n            sx={{ mx: 2 }}\n          >\n            Comment\n          </Button>\n          <Button startIcon={<ShareTwoToneIcon />} variant=\"outlined\">\n            Share\n          </Button>\n        </Box>\n        <Box sx={{ mt: { xs: 2, md: 0 } }}>\n          <Typography variant=\"subtitle2\" component=\"span\">\n            <Text color=\"black\">\n              <b>485</b>\n            </Text>{' '}\n            reactions •{' '}\n            <Text color=\"black\">\n              <b>63</b>\n            </Text>{' '}\n            comments\n          </Typography>\n        </Box>\n      </CardActionsWrapper>\n    </Card>\n  );\n}\n\nexport default ActivityTab;\n","import { useState, ChangeEvent } from 'react';\nimport {\n  Box,\n  Typography,\n  Card,\n  Grid,\n  ListItem,\n  List,\n  ListItemText,\n  Divider,\n  Switch\n} from '@mui/material';\n\nfunction NotificationsTab() {\n  const [state, setState] = useState({\n    checkedA: true,\n    checkedB: false,\n    checkedC: true,\n    checkedD: false\n  });\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setState({\n      ...state,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12}>\n        <Box pb={2}>\n          <Typography variant=\"h3\">Account</Typography>\n          <Typography variant=\"subtitle2\">\n            Choose what notifications you want to receive\n          </Typography>\n        </Box>\n        <Card>\n          <List>\n            <ListItem sx={{ p: 3 }}>\n              <ListItemText\n                primaryTypographyProps={{ variant: 'h5', gutterBottom: true }}\n                secondaryTypographyProps={{\n                  variant: 'subtitle2',\n                  lineHeight: 1\n                }}\n                primary=\"Widthdraw Activity\"\n                secondary=\"Receive an email when a widthdrawal is made\"\n              />\n              <Switch\n                color=\"primary\"\n                checked={state.checkedA}\n                onChange={handleChange}\n                name=\"checkedA\"\n              />\n            </ListItem>\n            <Divider component=\"li\" />\n            <ListItem sx={{ p: 3 }}>\n              <ListItemText\n                primaryTypographyProps={{ variant: 'h5', gutterBottom: true }}\n                secondaryTypographyProps={{\n                  variant: 'subtitle2',\n                  lineHeight: 1\n                }}\n                primary=\"Weekly Report\"\n                secondary=\"Receive account status weekly report in your inbox\"\n              />\n              <Switch\n                color=\"primary\"\n                checked={state.checkedB}\n                onChange={handleChange}\n                name=\"checkedB\"\n              />\n            </ListItem>\n          </List>\n        </Card>\n      </Grid>\n      <Grid item xs={12}>\n        <Box pb={2}>\n          <Typography variant=\"h3\">Orders</Typography>\n          <Typography variant=\"subtitle2\">\n            Receive email notifications related to your orders activity\n          </Typography>\n        </Box>\n        <Card>\n          <List>\n            <ListItem sx={{ p: 3 }}>\n              <ListItemText\n                primaryTypographyProps={{ variant: 'h5', gutterBottom: true }}\n                secondaryTypographyProps={{\n                  variant: 'subtitle2',\n                  lineHeight: 1\n                }}\n                primary=\"Failed Payment\"\n                secondary=\"Get a message when a payment fails\"\n              />\n              <Switch\n                color=\"primary\"\n                checked={state.checkedC}\n                onChange={handleChange}\n                name=\"checkedC\"\n              />\n            </ListItem>\n            <Divider component=\"li\" />\n            <ListItem sx={{ p: 3 }}>\n              <ListItemText\n                primaryTypographyProps={{ variant: 'h5', gutterBottom: true }}\n                secondaryTypographyProps={{\n                  variant: 'subtitle2',\n                  lineHeight: 1\n                }}\n                primary=\"Order Status Update\"\n                secondary=\"Whenever an order is updated, get a notification on your phone\"\n              />\n              <Switch\n                color=\"primary\"\n                checked={state.checkedD}\n                onChange={handleChange}\n                name=\"checkedD\"\n              />\n            </ListItem>\n          </List>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default NotificationsTab;\n","import { useState, MouseEvent, ChangeEvent } from 'react';\nimport {\n  Box,\n  Typography,\n  Card,\n  Grid,\n  ListItem,\n  List,\n  ListItemText,\n  Divider,\n  Button,\n  ListItemAvatar,\n  Avatar,\n  Switch,\n  CardHeader,\n  Tooltip,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TableContainer,\n  useTheme,\n  styled\n} from '@mui/material';\n\nimport DoneTwoToneIcon from '@mui/icons-material/DoneTwoTone';\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\nimport { format, subHours, subWeeks, subDays } from 'date-fns';\n\nconst ButtonError = styled(Button)(\n  ({ theme }) => `\n     background: ${theme.colors.error.main};\n     color: ${theme.palette.error.contrastText};\n\n     &:hover {\n        background: ${theme.colors.error.dark};\n     }\n    `\n);\n\nconst AvatarSuccess = styled(Avatar)(\n  ({ theme }) => `\n    background: ${theme.colors.success.light};\n    width: ${theme.spacing(5)};\n    height: ${theme.spacing(5)};\n`\n);\n\nconst AvatarWrapper = styled(Avatar)(\n  ({ theme }) => `\n    width: ${theme.spacing(5)};\n    height: ${theme.spacing(5)};\n`\n);\n\nfunction SecurityTab() {\n  const theme = useTheme();\n\n  const [page, setPage] = useState(2);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleChangePage = (\n    event: MouseEvent<HTMLButtonElement> | null,\n    newPage: number\n  ) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const logs = [\n    {\n      id: 1,\n      browser: ' Safari/537.36',\n      ipaddress: '3.70.73.142',\n      location: 'United States',\n      date: subDays(new Date(), 2).getTime()\n    },\n    {\n      id: 2,\n      browser: 'Chrome/36.0.1985.67',\n      ipaddress: '138.13.136.179',\n      location: 'China',\n      date: subDays(new Date(), 6).getTime()\n    },\n    {\n      id: 3,\n      browser: 'Googlebot/2.1',\n      ipaddress: '119.229.170.253',\n      location: 'China',\n      date: subHours(new Date(), 15).getTime()\n    },\n    {\n      id: 4,\n      browser: 'AppleWebKit/535.1',\n      ipaddress: '206.8.99.49',\n      location: 'Philippines',\n      date: subDays(new Date(), 4).getTime()\n    },\n    {\n      id: 5,\n      browser: 'Mozilla/5.0',\n      ipaddress: '235.40.59.85',\n      location: 'China',\n      date: subWeeks(new Date(), 3).getTime()\n    }\n  ];\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12}>\n        <Box pb={2}>\n          <Typography variant=\"h3\">Social Accounts</Typography>\n          <Typography variant=\"subtitle2\">\n            Manage connected social accounts options\n          </Typography>\n        </Box>\n        <Card>\n          <List>\n            <ListItem sx={{ p: 3 }}>\n              <ListItemAvatar sx={{ pr: 2 }}>\n                <AvatarWrapper src=\"/static/images/logo/google.svg\" />\n              </ListItemAvatar>\n              <ListItemText\n                primaryTypographyProps={{ variant: 'h5', gutterBottom: true }}\n                secondaryTypographyProps={{\n                  variant: 'subtitle2',\n                  lineHeight: 1\n                }}\n                primary=\"Google\"\n                secondary=\"A Google account hasn’t been yet added to your account\"\n              />\n              <Button color=\"secondary\" size=\"large\" variant=\"contained\">\n                Connect\n              </Button>\n            </ListItem>\n          </List>\n        </Card>\n      </Grid>\n      <Grid item xs={12}>\n        <Card>\n          <List>\n            <ListItem sx={{ p: 3 }}>\n              <ListItemAvatar sx={{ pr: 2 }}>\n                <AvatarSuccess>\n                  <DoneTwoToneIcon />\n                </AvatarSuccess>\n              </ListItemAvatar>\n              <ListItemText\n                primaryTypographyProps={{ variant: 'h5', gutterBottom: true }}\n                secondaryTypographyProps={{\n                  variant: 'subtitle2',\n                  lineHeight: 1\n                }}\n                primary=\"Facebook\"\n                secondary=\"Your Facebook account has been successfully connected\"\n              />\n              <ButtonError size=\"large\" variant=\"contained\">\n                Revoke access\n              </ButtonError>\n            </ListItem>\n            <Divider component=\"li\" />\n            <ListItem sx={{ p: 3 }}>\n              <ListItemAvatar sx={{ pr: 2 }}>\n                <AvatarSuccess>\n                  <DoneTwoToneIcon />\n                </AvatarSuccess>\n              </ListItemAvatar>\n              <ListItemText\n                primaryTypographyProps={{ variant: 'h5', gutterBottom: true }}\n                secondaryTypographyProps={{\n                  variant: 'subtitle2',\n                  lineHeight: 1\n                }}\n                primary=\"Twitter\"\n                secondary=\"Your Twitter account was last syncronized 6 days ago\"\n              />\n              <ButtonError size=\"large\" variant=\"contained\">\n                Revoke access\n              </ButtonError>\n            </ListItem>\n          </List>\n        </Card>\n      </Grid>\n      <Grid item xs={12}>\n        <Box pb={2}>\n          <Typography variant=\"h3\">Security</Typography>\n          <Typography variant=\"subtitle2\">\n            Change your security preferences below\n          </Typography>\n        </Box>\n        <Card>\n          <List>\n            <ListItem sx={{ p: 3 }}>\n              <ListItemText\n                primaryTypographyProps={{ variant: 'h5', gutterBottom: true }}\n                secondaryTypographyProps={{\n                  variant: 'subtitle2',\n                  lineHeight: 1\n                }}\n                primary=\"Change Password\"\n                secondary=\"You can change your password here\"\n              />\n              <Button size=\"large\" variant=\"outlined\">\n                Change password\n              </Button>\n            </ListItem>\n            <Divider component=\"li\" />\n            <ListItem sx={{ p: 3 }}>\n              <ListItemText\n                primaryTypographyProps={{ variant: 'h5', gutterBottom: true }}\n                secondaryTypographyProps={{\n                  variant: 'subtitle2',\n                  lineHeight: 1\n                }}\n                primary=\"Two-Factor Authentication\"\n                secondary=\"Enable PIN verification for all sign in attempts\"\n              />\n              <Switch color=\"primary\" />\n            </ListItem>\n          </List>\n        </Card>\n      </Grid>\n      <Grid item xs={12}>\n        <Card>\n          <CardHeader\n            subheaderTypographyProps={{}}\n            titleTypographyProps={{}}\n            title=\"Access Logs\"\n            subheader=\"Recent sign in activity logs\"\n          />\n          <Divider />\n          <TableContainer>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Browser</TableCell>\n                  <TableCell>IP Address</TableCell>\n                  <TableCell>Location</TableCell>\n                  <TableCell>Date/Time</TableCell>\n                  <TableCell align=\"right\">Actions</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {logs.map((log) => (\n                  <TableRow key={log.id} hover>\n                    <TableCell>{log.browser}</TableCell>\n                    <TableCell>{log.ipaddress}</TableCell>\n                    <TableCell>{log.location}</TableCell>\n                    <TableCell>\n                      {format(log.date, 'dd MMMM, yyyy - h:mm:ss a')}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <Tooltip placement=\"top\" title=\"Delete\" arrow>\n                        <IconButton\n                          sx={{\n                            '&:hover': {\n                              background: theme.colors.error.lighter\n                            },\n                            color: theme.palette.error.main\n                          }}\n                          color=\"inherit\"\n                          size=\"small\"\n                        >\n                          <DeleteTwoToneIcon fontSize=\"small\" />\n                        </IconButton>\n                      </Tooltip>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <Box p={2}>\n            <TablePagination\n              component=\"div\"\n              count={100}\n              page={page}\n              onPageChange={handleChangePage}\n              rowsPerPage={rowsPerPage}\n              onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n          </Box>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default SecurityTab;\n","import { useState, ChangeEvent } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport PageTitleWrapper from 'src/components/PageTitleWrapper';\nimport { Container, Tabs, Tab, Grid } from '@mui/material';\nimport Footer from 'src/components/Footer';\nimport ActivityTab from './ActivityTab';\nimport NotificationsTab from './NotificationsTab';\nimport SecurityTab from './SecurityTab';\nimport { styled } from '@mui/material/styles';\n\nconst TabsWrapper = styled(Tabs)(\n  () => `\n    .MuiTabs-scrollableX {\n      overflow-x: auto !important;\n    }\n`\n);\n\nfunction ManagementUserSettings() {\n  const [currentTab, setCurrentTab] = useState<string>('activity');\n\n  const tabs = [\n    { value: 'activity', label: 'Activity' },\n    { value: 'edit_profile', label: 'Edit Profile' },\n    { value: 'notifications', label: 'Notifications' },\n    { value: 'security', label: 'Passwords/Security' }\n  ];\n\n  const handleTabsChange = (event: ChangeEvent<{}>, value: string): void => {\n    setCurrentTab(value);\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>User Settings - Applications</title>\n      </Helmet>\n      <PageTitleWrapper></PageTitleWrapper>\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          direction=\"row\"\n          justifyContent=\"center\"\n          alignItems=\"stretch\"\n          spacing={3}\n        >\n          <Grid item xs={12}>\n            <TabsWrapper\n              onChange={handleTabsChange}\n              value={currentTab}\n              variant=\"scrollable\"\n              scrollButtons={false}\n              sx={{\n                display: { md: 'inline-block' },\n                borderBottom: 1,\n                borderColor: 'divider'\n              }}\n            >\n              {tabs.map((tab) => (\n                <Tab key={tab.value} label={tab.label} value={tab.value} />\n              ))}\n            </TabsWrapper>\n          </Grid>\n          <Grid item xs={12}>\n            {currentTab === 'activity' && <ActivityTab />}\n            {currentTab === 'notifications' && <NotificationsTab />}\n            {currentTab === 'security' && <SecurityTab />}\n          </Grid>\n        </Grid>\n      </Container>\n      <Footer />\n    </>\n  );\n}\n\nexport default ManagementUserSettings;\n"],"names":["FooterWrapper","styled","Container","_ref","theme","concat","spacing","_jsx","className","children","Box","pb","display","xs","md","alignItems","textAlign","justifyContent","PageTitle","_ref2","maxWidth","TextWrapper","palette","common","black","primary","main","secondary","success","warning","error","info","color","flex","rest","clsx","flexItem","CardActionsWrapper","CardActions","colors","alpha","_jsxs","Card","CardHeader","avatar","Avatar","src","action","IconButton","MoreHorizTwoToneIcon","fontSize","titleTypographyProps","variant","subheaderTypographyProps","title","subheader","_Fragment","Link","href","underline","px","Typography","fontWeight","CardMedia","sx","minHeight","image","p","Divider","Button","startIcon","ThumbUpAltTwoToneIcon","CommentTwoToneIcon","mx","ShareTwoToneIcon","mt","component","Text","state","setState","useState","checkedA","checkedB","checkedC","checkedD","handleChange","event","target","name","checked","Grid","container","item","List","ListItem","ListItemText","primaryTypographyProps","gutterBottom","secondaryTypographyProps","lineHeight","Switch","onChange","ButtonError","contrastText","dark","AvatarSuccess","light","AvatarWrapper","_ref3","useTheme","page","setPage","rowsPerPage","setRowsPerPage","logs","id","browser","ipaddress","location","date","subDays","Date","getTime","subHours","subWeeks","ListItemAvatar","pr","size","DoneTwoToneIcon","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","map","log","hover","format","Tooltip","placement","arrow","background","lighter","DeleteTwoToneIcon","TablePagination","count","onPageChange","handleChangePage","newPage","onRowsPerPageChange","parseInt","value","TabsWrapper","Tabs","currentTab","setCurrentTab","Helmet","PageTitleWrapper","direction","handleTabsChange","scrollButtons","borderBottom","borderColor","label","tab","Tab","ActivityTab","NotificationsTab","SecurityTab","Footer"],"sourceRoot":""}