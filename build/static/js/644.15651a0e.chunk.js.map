{"version":3,"file":"static/js/644.15651a0e.chunk.js","mappings":"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","sources":["modules/application/applicationService.ts","modules/jobProfile/onlineProfile/hooks/useQueryOnlineProfile.ts","components/LinearPercent/index.tsx","components/UploadButton/index.tsx","modules/application/hooks/useMutateApplyJob.ts","modules/application/components/AnayzeProfileButton.tsx","modules/application/components/ModalApply.tsx","modules/application/hooks/useQueryCheckApplied.ts","modules/jobs/components/CardApply.tsx","modules/jobs/hooks/useJob.ts","modules/jobs/components/JobContent.tsx","pages/view-job-detail/TabContent.tsx","utils/reviewProfile.ts","utils/compareEnum.ts"],"sourcesContent":["import BaseService from 'src/common/base-service';\n\nexport const ApplicationService = new BaseService('employee/applications');\nexport const CandidateProfilesService = new BaseService(\n  'employer/applications'\n);\nexport const UpdateStatusService = new BaseService('employer/applications');\nexport const ApplicationTotalResults = new BaseService(\n  'employer/applications/totalResults'\n);\nexport const CheckApplied = new BaseService('employee/job-postings');\n","import { AxiosError } from 'axios';\nimport { useQuery } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { OnlineProfile } from 'src/modules/jobProfile/model/index';\nimport { OnlineProfileService } from 'src/modules/jobProfile/employeeProfileService';\nimport { useEffect, useState } from 'react';\nimport { getAccessToken } from 'src/utils/localStorage';\nimport { useApp } from 'src/modules/app/hooks';\nimport useOnlineProfile from './useOnlineProfile';\n\nconst useQueryOnlineProfile = () => {\n  const { isEmployee } = useApp();\n  const { setProfile } = useOnlineProfile();\n  const isLoggedIn = Boolean(getAccessToken());\n\n  const { data, isLoading, isSuccess, refetch } = useQuery<\n    ResponseData<OnlineProfile>,\n    AxiosError<ResponseData<OnlineProfile>>\n  >(['get-OnlineProfile'], OnlineProfileService.get, {\n    retry: (failureCount, error) =>\n      error.response.status === 404 ? false : failureCount < 2,\n    refetchOnWindowFocus: false,\n    enabled: isLoggedIn && isEmployee\n  });\n\n  useEffect(() => {\n    // Handle the data or error here\n    if (data && isSuccess) {\n      setProfile(data?.data);\n    }\n  }, [isSuccess]);\n\n  return {\n    onlineProfile: data?.data,\n    isLoading,\n    refetch\n  };\n};\n\nexport default useQueryOnlineProfile;\n","import * as React from 'react';\nimport LinearProgress, {\n  LinearProgressProps\n} from '@mui/material/LinearProgress';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\n\nfunction LinearPercent(props: LinearProgressProps & { value: number }) {\n  return (\n    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n      <Box sx={{ width: '100%', mr: 1 }}>\n        <LinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box sx={{ minWidth: 35 }}>\n        <Typography variant=\"body2\" color=\"text.secondary\">{`${Math.round(\n          props.value\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nexport default LinearPercent;\n","import { useState } from 'react';\nimport { ref, uploadBytesResumable, getDownloadURL } from 'firebase/storage';\nimport { storage } from 'src/common/firebaseConfig';\nimport { styled } from '@mui/material/styles';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport Button, { ButtonProps } from '@mui/material/Button';\nimport Chip from '@mui/material/Chip';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Box from '@mui/material/Box';\nimport LinearPercent from '../LinearPercent';\nimport dayjs from 'dayjs';\nimport { ApplicationType } from 'src/constants/enum';\nimport { removeFileByUrl } from 'src/common/firebaseService';\n\nconst VisuallyHiddenInput = styled('input')({\n  display: 'none'\n});\n\nconst ButtonWrapper = styled(Button)<any>(({ theme }) => ({\n  backgroundColor: theme.colors.primary.lighter\n}));\nconst ChipWrapper = styled(Chip)(({ theme }) => ({\n  borderRadius: 6\n}));\n\ntype Props = ButtonProps & {\n  label?: string;\n  value?: string;\n  onChange?: (url: string) => void;\n  setIsChecked?: (value: string) => void;\n  setUrl?: (value: string) => void;\n};\n\nfunction UploadButton(props: Props) {\n  const { label, sx, onChange, setIsChecked, setUrl } = props;\n  // State to store uploaded file\n  const [file, setFile] = useState<File>();\n  const [fileUrl, setFileUrl] = useState<string | undefined>();\n\n  // progress\n  const [percent, setPercent] = useState(null);\n\n  // Handle file upload event and update state\n  const handleChange = async (event) => {\n    removeFileByUrl(fileUrl).then(() => {\n      const file = event.target.files[0];\n      if (!file) return;\n      setFile(() => file);\n      handleUpload(file);\n    });\n  };\n\n  const handleDeleteFile = async () => {\n    if (!fileUrl) return;\n    removeFileByUrl(fileUrl).then(() => {\n      setFile(() => null);\n      setIsChecked('');\n    });\n  };\n  console.log(file, fileUrl);\n\n  const handleUpload = (value) => {\n    if (!value) return;\n\n    let date = dayjs(new Date()).format('DDMMYYYY');\n    const storageRef = ref(storage, `/userDocument/${value.name}-${date}`);\n\n    // progress can be paused and resumed. It also exposes progress updates.\n    // Receives the storage reference and the file to upload.\n    const uploadTask = uploadBytesResumable(storageRef, value);\n\n    uploadTask.on(\n      'state_changed',\n      (snapshot) => {\n        const percent = Math.round(\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n        );\n\n        // update progress\n        setPercent(percent);\n      },\n      (err) => console.error(err),\n      () => {\n        // download url\n        getDownloadURL(uploadTask.snapshot.ref).then((url) => {\n          setPercent(null);\n          setFileUrl(() => url);\n          setUrl(url);\n          onChange(url);\n        });\n      }\n    );\n    setIsChecked(ApplicationType.cv_enclosed);\n  };\n\n  return (\n    <div>\n      <ButtonWrapper\n        component=\"label\"\n        variant=\"contained\"\n        startIcon={<CloudUploadIcon />}\n        sx={sx}\n      >\n        {label || 'Upload file'}\n        <VisuallyHiddenInput\n          type=\"file\"\n          onChange={handleChange}\n          accept=\"application/pdf\"\n        />\n      </ButtonWrapper>\n      <Box marginTop={2}>\n        {percent !== null && <LinearPercent value={percent} />}\n        {fileUrl && file && (\n          <ChipWrapper\n            label={file.name}\n            onDelete={handleDeleteFile}\n            deleteIcon={<DeleteIcon />}\n            variant=\"outlined\"\n          />\n        )}\n      </Box>\n    </div>\n  );\n}\n\nexport default UploadButton;\n","import { AxiosError } from 'axios';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { useApp } from 'src/modules/app/hooks';\nimport { useNavigate } from 'react-router';\nimport { ApplicationService } from '../applicationService';\nimport { Application } from '../model';\n\nconst useMutateApplyJob = () => {\n  const { toast } = useApp();\n  const queryClient = useQueryClient();\n  const { mutate: onSaveData, isLoading } = useMutation<\n    ResponseData<Application>,\n    AxiosError<ResponseData<Application>>,\n    Application\n  >(ApplicationService.create, {\n    onSuccess: (res) => {\n      if (res.status === 200) {\n        queryClient.invalidateQueries(['job-getById']);\n        toast.success({ massage: 'Ứng tuyển thành công' });\n      } else {\n        toast.error({ massage: res.message });\n      }\n    },\n    onError: (error) => {\n      toast.error({ massage: error.response.data.message });\n    }\n  });\n\n  return {\n    onSaveData,\n    isLoading\n  };\n};\n\nexport default useMutateApplyJob;\n","import { Box, Rating, Typography } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { ApplicationType } from 'src/constants/enum';\r\nimport { useApp } from 'src/modules/app/hooks';\r\nimport GradeIcon from '@mui/icons-material/Grade';\r\nimport {\r\n  ProfileApplicationType,\r\n  LOW_SCORE,\r\n  NORMAL_SCORE,\r\n  HIGH_SCORE,\r\n  review,\r\n  firstRoundForGeneralInfo,\r\n  preprocessJobData,\r\n  ratingStar\r\n} from 'src/utils/reviewProfile';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport alertDialog from 'src/utils/alertDialog';\r\n\r\nconst renderAnalyzeResult = (analyzeResult: number, hints: string) => {\r\n  const rating = ratingStar(analyzeResult);\r\n\r\n  return (\r\n    <>\r\n      <Box display={'flex'} textAlign={'left'}>\r\n        <Typography fontWeight={700} fontSize={16} mr={2}>\r\n          Độ phù hợp\r\n        </Typography>\r\n        {/* <Box\r\n          sx={{\r\n            width: 150,\r\n            borderRadius: 3,\r\n            p: 1,\r\n            bgcolor:\r\n              analyzeResult >= HIGH_SCORE\r\n                ? '#ffc107'\r\n                : analyzeResult >= NORMAL_SCORE\r\n                ? '#4caf50'\r\n                : analyzeResult >= LOW_SCORE\r\n                ? '#b5b5b5'\r\n                : '#efefef',\r\n            display: 'flex',\r\n            justifyContent: 'center'\r\n          }}\r\n        >\r\n          {analyzeResult >= HIGH_SCORE\r\n            ? 'Cao'\r\n            : analyzeResult >= NORMAL_SCORE\r\n            ? 'Trung bình'\r\n            : analyzeResult >= LOW_SCORE\r\n            ? 'Thấp'\r\n            : 'Không phù hợp'}\r\n        </Box> */}\r\n        <Rating value={rating} max={3} readOnly />\r\n      </Box>\r\n      <Box\r\n        display={'flex'}\r\n        flexDirection={'column'}\r\n        // justifyContent={'left'}\r\n        mt={2}\r\n        textAlign={'left'}\r\n      >\r\n        <Typography fontWeight={700} fontSize={16}>\r\n          Gợi ý:\r\n        </Typography>\r\n        <Typography mt={1}>{hints}</Typography>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default function AnayzeProfileButton(props) {\r\n  const {\r\n    selectedProfile,\r\n    job,\r\n    profileType,\r\n    setShowResult,\r\n    showResult,\r\n    fileUrl,\r\n    setHintsMessage\r\n  } = props;\r\n  const { user } = useApp();\r\n  const [start, setStart] = useState(false);\r\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\r\n  const [analyzedProfile, setAnalyzedProfile] =\r\n    useState<ProfileApplicationType>(null);\r\n  const [passRoundProfiles, setPassOneProfiles] = useState<\r\n    ProfileApplicationType[]\r\n  >([]);\r\n  const [roundOneFinished, setRoundOneFinished] = useState(false);\r\n  const [roundTwoFinished, setRoundTwoFinished] = useState(false);\r\n  const [roundThreeFinished, setRoundThreeFinished] = useState(false);\r\n  const [analyzeResult, setAnalyzeResult] = useState<number>(0);\r\n  const [goToAnalyzeResult, setGoToAnalyzeResult] = useState({\r\n    signal: false,\r\n    resultData: null\r\n  });\r\n  const [hints, setHints] = useState('');\r\n\r\n  const finishedAll = () => {\r\n    setHintsMessage(hints);\r\n    setStart(false);\r\n    setRoundOneFinished(false);\r\n    setRoundTwoFinished(false);\r\n    setRoundThreeFinished(false);\r\n    setShowResult(true);\r\n    setIsAnalyzing(false);\r\n    setPassOneProfiles([]);\r\n    setGoToAnalyzeResult({ signal: false, resultData: null });\r\n    console.log('Finised All');\r\n    alertDialog({\r\n      message: renderAnalyzeResult(analyzeResult, hints),\r\n      hideCancelButton: true,\r\n      title: 'Kết quả phân tích'\r\n    });\r\n  };\r\n\r\n  const handleSetAnalyzedProfile = async (data: ProfileApplicationType[]) => {\r\n    setAnalyzedProfile(data[0]);\r\n  };\r\n\r\n  const handleIsAnalyzing = (data: boolean) => {\r\n    setIsAnalyzing(data);\r\n  };\r\n\r\n  const handleGoToAnalyzeResult = (signal: boolean, resultData) => {\r\n    setGoToAnalyzeResult({ signal: signal, resultData: resultData });\r\n  };\r\n\r\n  const handleAnalyzeResult = async (result: any[]) => {\r\n    if (!result || !result[0]) {\r\n      if (\r\n        analyzedProfile?.employee_Profile?.online_profile ||\r\n        analyzedProfile?.employee_Profile?.attached_document\r\n      ) {\r\n        const matchingScore = firstRoundForGeneralInfo(\r\n          analyzedProfile?.employer_Requirement,\r\n          analyzedProfile?.employee_Profile\r\n        );\r\n\r\n        console.log('matchingScore', matchingScore);\r\n        setAnalyzeResult(() => matchingScore);\r\n        if (matchingScore >= LOW_SCORE) {\r\n          setPassOneProfiles(() => [analyzedProfile]);\r\n        } else {\r\n          setHints(\r\n            'Hồ sơ của bạn có vẻ chưa đáp ứng các yêu cầu cơ bản như: Giới tính, độ tuổi ngành nghề, trình độ, kinh nghiệm'\r\n          );\r\n          setIsAnalyzing(false);\r\n        }\r\n      }\r\n    } else {\r\n      const response = JSON.parse(result[0]);\r\n      const matchingScore: number = response?.result;\r\n      debugger;\r\n      const prevScore = analyzeResult || 0;\r\n      if (matchingScore + prevScore < LOW_SCORE) {\r\n        setHints(\r\n          'Hồ sơ của bạn có vẻ chưa đáp ứng các yêu cầu cơ bản như: Ngành nghề, trình độ, kinh nghiệm'\r\n        );\r\n      } else {\r\n        if (!roundOneFinished) setPassOneProfiles(() => [analyzedProfile]);\r\n        else\r\n          setHints(\r\n            response?.hints ||\r\n              'Để tăng tỉ lệ trúng tuyển, bạn nên bổ sung thêm các kỹ năng trong phần Kỹ năng bắt buộc'\r\n          );\r\n      }\r\n      setAnalyzeResult((prev) => prev + matchingScore);\r\n    }\r\n\r\n    if (start) {\r\n      if (!roundOneFinished) setRoundOneFinished(true);\r\n      else if (!roundTwoFinished) setRoundTwoFinished(true);\r\n      else if (!roundThreeFinished) setRoundThreeFinished(true);\r\n    }\r\n  };\r\n\r\n  const handleReviewProfile = () => {\r\n    review({\r\n      round: 1,\r\n      handleAnalyzeResult: handleAnalyzeResult,\r\n      setIsAnalyzing: handleIsAnalyzing,\r\n      setAnalyzedProfile: handleSetAnalyzedProfile,\r\n      resetMatchingScoreList: [analyzedProfile],\r\n      handleGoToAnalyzeResult: handleGoToAnalyzeResult\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (goToAnalyzeResult.signal)\r\n      start && handleAnalyzeResult(goToAnalyzeResult.resultData);\r\n  }, [goToAnalyzeResult.signal]);\r\n\r\n  useEffect(() => {\r\n    let profileData;\r\n    if (profileType === ApplicationType.online_profile) {\r\n      profileData = {\r\n        personal_information: user,\r\n        online_profile: selectedProfile\r\n      };\r\n    } else if (profileType === ApplicationType.attached_document) {\r\n      profileData = {\r\n        personal_information: user,\r\n        attached_document: selectedProfile\r\n      };\r\n    } else {\r\n      profileData = {\r\n        application: {\r\n          id: 1,\r\n          CV: fileUrl,\r\n          applicationType: 'Nộp nhanh'\r\n        }\r\n      };\r\n    }\r\n    const data: ProfileApplicationType = {\r\n      id: 1,\r\n      employee_Profile: {\r\n        ...profileData,\r\n        personal_information: {\r\n          dob: profileData?.personal_information?.dob,\r\n          sex: profileData?.personal_information?.sex\r\n        }\r\n      },\r\n      employer_Requirement: preprocessJobData(job)\r\n    };\r\n    setAnalyzedProfile(() => data);\r\n\r\n    if (\r\n      data?.employee_Profile?.online_profile ||\r\n      data?.employee_Profile?.attached_document\r\n    ) {\r\n      const keywords =\r\n        data?.employee_Profile?.online_profile?.keywords ||\r\n        data?.employee_Profile?.attached_document?.keywords;\r\n      const analyzeResultData: ProfileApplicationType = {\r\n        ...data,\r\n        employee_Profile: {\r\n          ...data.employee_Profile,\r\n\r\n          application: {\r\n            id: 1,\r\n            keywords: keywords,\r\n            applicationType: profileType,\r\n            matchingScore: null\r\n          }\r\n        }\r\n      };\r\n      setAnalyzedProfile(() => analyzeResultData);\r\n      console.log(analyzeResultData);\r\n    }\r\n  }, [JSON.stringify(job), selectedProfile, fileUrl]);\r\n\r\n  // go to round 1\r\n  useEffect(() => {\r\n    if (start && selectedProfile) {\r\n      setAnalyzeResult(null);\r\n      setShowResult(false);\r\n      handleReviewProfile();\r\n    }\r\n  }, [start]);\r\n\r\n  // go to round 2 and 3\r\n  useEffect(() => {\r\n    if (!start) return;\r\n    if (roundOneFinished && !roundTwoFinished) {\r\n      console.log('passRoundProfiles', passRoundProfiles);\r\n\r\n      // go to round 2\r\n      if (passRoundProfiles.length > 0)\r\n        review({\r\n          round: 2,\r\n          handleAnalyzeResult: handleAnalyzeResult,\r\n          setIsAnalyzing: handleIsAnalyzing,\r\n          passRoundProfiles: passRoundProfiles\r\n        });\r\n      else {\r\n        finishedAll();\r\n      }\r\n    } else if (roundTwoFinished && !roundThreeFinished) {\r\n      console.log('Round 2 finished');\r\n\r\n      // go to round 3\r\n      review({\r\n        round: 3,\r\n        handleAnalyzeResult: handleAnalyzeResult,\r\n        setIsAnalyzing: handleIsAnalyzing,\r\n        passRoundProfiles: passRoundProfiles\r\n      });\r\n    } else if (roundThreeFinished) {\r\n      console.log('Round 3 finished');\r\n      finishedAll();\r\n    }\r\n  }, [roundOneFinished, roundTwoFinished, roundThreeFinished]);\r\n\r\n  return (\r\n    <Box display=\"flex\" sx={{ alignItems: 'center', gap: 1 }}>\r\n      <LoadingButton\r\n        loading={isAnalyzing}\r\n        onClick={() => {\r\n          setStart(true);\r\n        }}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        sx={{\r\n          minWidth: 200\r\n        }}\r\n        disabled={showResult || isAnalyzing}\r\n      >\r\n        <GradeIcon fontSize=\"small\" />\r\n        Phân tích độ phù hợp\r\n      </LoadingButton>\r\n      {/* {showResult && (\r\n        <Box\r\n          sx={{\r\n            width: 150,\r\n            borderRadius: 3,\r\n            p: 1,\r\n            bgcolor:\r\n              analyzeResult >= HIGH_SCORE\r\n                ? '#ffc107'\r\n                : analyzeResult >= NORMAL_SCORE\r\n                ? '#4caf50'\r\n                : analyzeResult >= LOW_SCORE\r\n                ? '#b5b5b5'\r\n                : '#efefef',\r\n            display: 'flex',\r\n            justifyContent: 'center'\r\n          }}\r\n        >\r\n          {analyzeResult >= HIGH_SCORE\r\n            ? 'Cao'\r\n            : analyzeResult >= NORMAL_SCORE\r\n            ? 'Trung bình'\r\n            : analyzeResult >= LOW_SCORE\r\n            ? 'Thấp'\r\n            : 'Không phù hợp'}\r\n        </Box>\r\n      )} */}\r\n    </Box>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  Grid,\n  Typography\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { useForm } from 'react-hook-form';\nimport FormControl from 'src/components/FormControl';\nimport TextField from 'src/components/TextField';\nimport UploadButton from 'src/components/UploadButton';\nimport AddIcon from '@mui/icons-material/Add';\nimport useMutateApplyJob from '../hooks/useMutateApplyJob';\nimport { ApplicationType } from 'src/constants/enum';\nimport useQueryOnlineProfile from 'src/modules/jobProfile/onlineProfile/hooks/useQueryOnlineProfile';\nimport useQueryAttachedDocument from 'src/modules/jobProfile/attachedDocument/hooks/useQueryAttachedDocument';\nimport { useApp } from 'src/modules/app/hooks';\nimport useProfileHook from 'src/modules/users/hooks/useUserHook';\nimport { v4 } from 'uuid';\nimport useOnlineProfile from 'src/modules/jobProfile/onlineProfile/hooks/useOnlineProfile';\nimport useDocumentHook from 'src/modules/jobProfile/attachedDocument/hooks/useDocumentHook';\nimport { review } from 'src/utils/reviewProfile';\nimport AnayzeProfileButton from './AnayzeProfileButton';\nimport { Job } from 'src/modules/jobs/model';\nimport { removeFileByUrl } from 'src/common/firebaseService';\nimport SuspenseLoader from 'src/components/SuspenseLoader';\nimport { useResponsive } from 'src/utils/responsive';\n\nconst Title = styled('div')(() => ({\n  fontWeight: 600,\n  fontSize: 18,\n  margin: '5px 0'\n}));\nconst SubTitle = styled('div')(({ theme }) => ({\n  fontWeight: 400,\n  fontSize: 12,\n  color: theme.colors.alpha.black[70]\n}));\n\ntype Props = {\n  postId: number;\n  open: boolean;\n  position: string;\n  company?: string;\n  job?: Partial<Job>;\n  onClose: () => void;\n};\n\nconst buttonStyle = {\n  width: '100%',\n  px: 1,\n  color: '#000'\n};\n\nexport default function ModalApply(props: Props) {\n  const { isMobile } = useResponsive();\n  const { onSaveData } = useMutateApplyJob();\n  const { open, onClose, position, company, postId, job } = props;\n  const { profile: user } = useProfileHook();\n  const { onlineProfile, isLoading: isLoadingOnline } = useQueryOnlineProfile();\n  const { attachedDocument, isLoading: isLoadingDocument } =\n    useQueryAttachedDocument();\n  const { profile: online, setProfile: setOnline } = useOnlineProfile();\n  const { profile: document, setProfile: setDocument } = useDocumentHook();\n  const [isChecked, setIsChecked] = useState('');\n  const [missInfo, setMissInfo] = useState(false);\n  const [selectedProfile, setSelectedProfile] = useState(null);\n  const [showResult, setShowResult] = useState(false);\n  const [url, setUrl] = useState('');\n  const [hintsMessage, setHintsMessage] = useState('');\n\n  const {\n    control,\n    handleSubmit,\n    reset,\n    formState: { errors }\n  } = useForm({\n    defaultValues: {}\n  });\n\n  const handleClose = () => {\n    if (url) removeFileByUrl(url).then(() => setUrl(''));\n    setIsChecked(null);\n    setHintsMessage(null);\n    setShowResult(null);\n    setSelectedProfile(null);\n    onClose();\n  };\n  const handleApply = (data) => {\n    if (!isChecked) {\n      setMissInfo(true);\n      return;\n    }\n\n    let submitProfile = '';\n\n    if (isChecked === ApplicationType.cv_enclosed) submitProfile = data.CV;\n    else {\n      if (url) removeFileByUrl(url);\n      submitProfile = '#' + v4();\n    }\n\n    onSaveData({\n      ...data,\n      postId,\n      applicationType: isChecked,\n      CV: submitProfile\n    });\n    setShowResult(null);\n    onClose();\n  };\n\n  const uploadProfile = (id) => {\n    setIsChecked(id);\n    setHintsMessage('');\n  };\n\n  useEffect(() => {\n    reset(user);\n    setShowResult(false);\n    if (isChecked === ApplicationType.online_profile) {\n      setSelectedProfile(online);\n    }\n    if (isChecked === ApplicationType.attached_document) {\n      setSelectedProfile(document);\n    }\n    if (isChecked === ApplicationType.cv_enclosed) {\n      setSelectedProfile(job);\n    }\n  }, [isChecked]);\n\n  if (isLoadingOnline || isLoadingDocument) return <SuspenseLoader />;\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      maxWidth=\"md\"\n      fullWidth\n      fullScreen={isMobile}\n    >\n      <DialogTitle>\n        <SubTitle> Vị trí ứng tuyển</SubTitle>\n        <Title>{position}</Title>\n        {company && <SubTitle>{company}</SubTitle>}\n      </DialogTitle>\n\n      <DialogContent>\n        <Grid container spacing={2}>\n          <Grid item xs={12} md={6} lg={4}>\n            <Button\n              startIcon={<AddIcon />}\n              variant=\"contained\"\n              disabled={onlineProfile ? false : true}\n              fullWidth\n              onClick={() => uploadProfile(ApplicationType.online_profile)}\n              sx={[\n                buttonStyle,\n                {\n                  bgcolor:\n                    isChecked === ApplicationType.online_profile\n                      ? '#f29c00'\n                      : '#fff6e5'\n                }\n              ]}\n            >\n              {onlineProfile ? (\n                'Hồ sơ trực tuyến'\n              ) : (\n                <em>Chưa có hồ sơ trực tuyến</em>\n              )}\n            </Button>\n          </Grid>\n          <Grid item xs={12} md={6} lg={4}>\n            <Button\n              startIcon={<AddIcon />}\n              variant=\"contained\"\n              fullWidth\n              disabled={attachedDocument ? false : true}\n              onClick={() => uploadProfile(ApplicationType.attached_document)}\n              sx={[\n                buttonStyle,\n                {\n                  bgcolor:\n                    isChecked === ApplicationType.attached_document\n                      ? '#f29c00'\n                      : '#fff6e5'\n                }\n              ]}\n            >\n              {attachedDocument ? (\n                'Hồ sơ đính kèm'\n              ) : (\n                <em>Chưa có hồ sơ đính kèm</em>\n              )}\n            </Button>\n          </Grid>\n          <Grid item xs={12} lg={4}>\n            <FormControl\n              control={control}\n              errors={errors}\n              id=\"CV\"\n              name=\"CV\"\n              label=\"Tải lên hồ sơ có sẵn\"\n            >\n              <UploadButton\n                sx={[\n                  buttonStyle,\n                  {\n                    bgcolor:\n                      isChecked === ApplicationType.cv_enclosed\n                        ? '#f29c00'\n                        : '#fff6e5'\n                  }\n                ]}\n                setIsChecked={setIsChecked}\n                setUrl={setUrl}\n              />\n            </FormControl>\n          </Grid>\n        </Grid>\n        {missInfo && (\n          <Typography color=\"error\" mb={3} fontWeight={700} fontStyle=\"italic\">\n            * Vui lòng chọn loại hồ sơ cần gửi !\n          </Typography>\n        )}\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <FormControl\n              element={<TextField />}\n              control={control}\n              errors={errors}\n              required\n              id=\"name\"\n              label=\"Họ và tên\"\n              name=\"name\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <FormControl\n              element={<TextField />}\n              control={control}\n              errors={errors}\n              required\n              id=\"email\"\n              label=\"Email\"\n              name=\"email\"\n              pattern=\"email\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <FormControl\n              element={<TextField />}\n              control={control}\n              errors={errors}\n              required\n              id=\"phone\"\n              label=\"Số điện thoại\"\n              name=\"phone\"\n              pattern=\"phone\"\n            />\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions\n        sx={{\n          display: 'flex',\n          justifyContent: { sm: 'space-between', xs: 'center' },\n          flexWrap: 'wrap',\n          p: 2,\n          gap: 2\n        }}\n      >\n        <AnayzeProfileButton\n          job={job}\n          selectedProfile={selectedProfile}\n          profileType={isChecked}\n          setShowResult={setShowResult}\n          showResult={showResult}\n          fileUrl={url}\n          setHintsMessage={setHintsMessage}\n        />\n        <Box sx={{ display: 'flex', columnGap: 1 }}>\n          <Button\n            onClick={handleClose}\n            variant=\"outlined\"\n            color=\"secondary\"\n            sx={{ minWidth: 120 }}\n          >\n            Hủy\n          </Button>\n          <Button\n            onClick={handleSubmit(handleApply)}\n            variant=\"contained\"\n            color=\"info\"\n            sx={{ minWidth: 120 }}\n          >\n            Nộp hồ sơ\n          </Button>\n        </Box>\n      </DialogActions>\n      {/* {hintsMessage && (\n          <Box mb={1} p={2} gap={1} display=\"flex\" flexDirection=\"column\">\n            <Divider sx={{ mb: 1, color: '#f29c00' }} />\n            <Typography fontWeight={700} fontSize={18}>\n              Gợi ý:\n            </Typography>\n            <Typography fontStyle=\"italic\" mx={2}>\n              {hintsMessage}\n            </Typography>\n          </Box>\n        )} */}\n    </Dialog>\n  );\n}\n","import { AxiosError } from 'axios';\nimport { useQuery } from 'react-query';\nimport { ResponseData } from 'src/common/http-request';\nimport { CheckApplied } from '../applicationService';\nimport { useApp } from 'src/modules/app/hooks';\n\nconst useQueryCheckApplied = (params?) => {\n  const { isEmployee } = useApp();\n  const { data, isLoading } = useQuery<\n    ResponseData<Boolean>,\n    AxiosError<ResponseData<Boolean>>\n  >(\n    ['job-getById', params],\n    () => CheckApplied.getById(params?.postId + '/applied', { params }),\n    {\n      keepPreviousData: true,\n      retry: 1,\n      refetchOnWindowFocus: false,\n      enabled: isEmployee && Boolean(params?.postId)\n    }\n  );\n\n  return {\n    isApplied: data?.data,\n    isLoading\n  };\n};\n\nexport default useQueryCheckApplied;\n","import { useState } from 'react';\nimport { Avatar, Box, Grid, Button, Typography } from '@mui/material';\nimport DateRangeIcon from '@mui/icons-material/DateRange';\nimport PaidIcon from '@mui/icons-material/Paid';\nimport SendIcon from '@mui/icons-material/Send';\nimport AccessibilityIcon from '@mui/icons-material/Accessibility';\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\nimport { styled } from '@mui/material/styles';\nimport { Job } from '../model';\nimport ModalApply from '../../application/components/ModalApply';\nimport { toInputDateString } from 'src/utils/formatData';\nimport { defaultImage } from 'src/constants/uploadFileRule';\nimport { useApp } from 'src/modules/app/hooks';\nimport { Link, Navigate, useNavigate, useSearchParams } from 'react-router-dom';\nimport FollowJobButton from './FollowJobButton';\nimport SuspenseLoader from 'src/components/SuspenseLoader';\nimport CustomContainer from 'src/components/CustomContainer';\nimport { rewriteUrl } from 'src/utils/rewriteUrl';\nimport { useResponsive } from 'src/utils/responsive';\nimport useQueryCheckApplied from 'src/modules/application/hooks/useQueryCheckApplied';\nimport LazyLoadImage from 'src/components/LazyLoadImage';\n\nconst AvatarWrapper = styled(Avatar)(({ theme }) => ({\n  width: 150,\n  height: 150,\n  objectFit: 'contain',\n  borderRadius: '5px'\n}));\nconst SubTitle = styled('h3')(({ theme }) => ({\n  fontWeight: 400,\n  fontSize: 16,\n  color: theme.colors.alpha.black[70]\n}));\nconst Title = styled('h3')(() => ({\n  fontWeight: 600,\n  fontSize: 18\n}));\nconst LabelText = styled('span')(({ theme }) => ({\n  color: theme.colors.alpha.black[70]\n}));\nconst ValueText = styled('span')(({ theme }) => ({\n  color: theme.colors.alpha.black[100],\n  marginLeft: 5\n}));\ntype Props = {\n  data: Partial<Job>;\n};\nconst CardApply: React.FC<Props> = ({ data }) => {\n  const { isMobile } = useResponsive();\n  const { isEmployee, isEmployer, isAdmin } = useApp();\n  const [openFormApply, setOpenFormApply] = useState(false);\n  const navigate = useNavigate();\n  const onCloseFormApply = () => {\n    setOpenFormApply(false);\n  };\n  const handleOpenFormApply = () => {\n    setOpenFormApply(true);\n  };\n  const { isApplied } = useQueryCheckApplied({ postId: data?.postId });\n\n  return (\n    <CustomContainer\n      sx={{\n        px: 5,\n        pb: 5,\n        mb: 2,\n        minHeight: !isEmployer && !isAdmin ? 280 : 260\n      }}\n    >\n      <Grid container>\n        <Grid\n          item\n          xs={12}\n          md={2}\n          display=\"flex\"\n          alignItems=\"center\"\n          sx={{ justifyContent: { xs: 'center', sm: 'normal' } }}\n        >\n          <LazyLoadImage\n            src={data?.employer?.logo || defaultImage.companyAvatar_md}\n            placeholderSrc={defaultImage.companyAvatar_md}\n            style={{\n              width: 150,\n              height: 150,\n              objectFit: 'contain',\n              borderRadius: '5px'\n            }}\n          />\n        </Grid>\n        <Grid item xs={12} md={10}>\n          <Box>\n            <Link\n              to={`/company/${rewriteUrl(\n                data?.employer?.companyName\n              )}?id=${btoa(data?.employer?.userId.toString())}`}\n              style={{ textDecoration: 'none' }}\n            >\n              <SubTitle>{data?.employer?.companyName}</SubTitle>\n            </Link>\n            <Title>{data?.jobTitle}</Title>\n            <Grid container spacing={1}>\n              <Grid item xs={12} md={6}>\n                <Grid container alignItems={'center'}>\n                  <PaidIcon color=\"primary\" sx={{ margin: '0 5px' }} />\n                  <LabelText> Mức lương : </LabelText>\n                  <ValueText>\n                    {data?.minSalary} - {data?.maxSalary} triệu\n                  </ValueText>\n                </Grid>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Grid\n                  container\n                  alignItems={'center'}\n                  wrap=\"nowrap\"\n                  overflow={'hidden'}\n                >\n                  <DateRangeIcon color=\"primary\" sx={{ margin: '0 5px' }} />\n                  <LabelText> Hạn nộp hồ sơ : </LabelText>\n                  <ValueText>{data?.applicationDeadline}</ValueText>\n                </Grid>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Grid container alignItems={'center'}>\n                  <AccessibilityIcon color=\"primary\" sx={{ margin: '0 5px' }} />\n                  <LabelText> Độ tuổi : </LabelText>\n                  <ValueText>\n                    {data?.minAge} - {data?.maxAge}\n                  </ValueText>\n                </Grid>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Grid container alignItems={'center'}>\n                  <LocationOnIcon color=\"primary\" sx={{ margin: '0 5px' }} />\n                  <LabelText> Khu vực ứng tuyển : </LabelText>\n                  <ValueText>{data?.workAddress}</ValueText>\n                </Grid>\n              </Grid>\n            </Grid>\n            {!isEmployer && !isAdmin && (\n              <Box\n                sx={{\n                  marginTop: 2,\n                  display: 'flex',\n                  gap: 2,\n                  alignItems: 'center',\n                  justifyContent: isMobile && 'center'\n                }}\n              >\n                <Button\n                  onClick={\n                    isEmployee\n                      ? handleOpenFormApply\n                      : () => {\n                          navigate('/login', {\n                            state: {\n                              from:\n                                window.location.pathname +\n                                window.location.search,\n                              postId: data?.postId\n                            }\n                          });\n                        }\n                  }\n                  variant=\"contained\"\n                  startIcon={<SendIcon />}\n                  color=\"info\"\n                  sx={{ display: isApplied && 'none' }}\n                >\n                  Nộp hồ sơ\n                </Button>\n                <Typography display={!isApplied && 'none'} color=\"red\">\n                  Bạn đã nộp đơn ứng tuyển\n                </Typography>\n                <FollowJobButton job={data} />\n              </Box>\n            )}\n          </Box>\n        </Grid>\n      </Grid>\n      <ModalApply\n        open={openFormApply}\n        postId={data?.postId}\n        onClose={onCloseFormApply}\n        position={data?.jobTitle}\n        company={data?.employer?.companyName}\n        job={data}\n      />\n    </CustomContainer>\n  );\n};\n\nexport default CardApply;\n","import { useAppDispatch, useAppSelector } from 'src/redux/hooks';\nimport {\n  selectJob,\n  setItemDetail as setItemDetailAction,\n  resetItemDetail as resetItemDetailAction\n} from '../jobSlice';\nimport { Job } from '../model';\n\nconst useJob = () => {\n  const { itemDetail } = useAppSelector(selectJob);\n  const dispatch = useAppDispatch();\n\n  const setItemDetail = (data: Partial<Job>) => {\n    dispatch(setItemDetailAction(data));\n  };\n\n  const resetItemDetail = () => {\n    dispatch(resetItemDetailAction());\n  };\n\n  return {\n    itemDetail,\n    setItemDetail,\n    resetItemDetail\n  };\n};\n\nexport default useJob;\n","import ApartmentIcon from '@mui/icons-material/Apartment';\nimport ArticleIcon from '@mui/icons-material/Article';\nimport DateRangeIcon from '@mui/icons-material/DateRange';\nimport EventAvailableIcon from '@mui/icons-material/EventAvailable';\nimport GppGoodIcon from '@mui/icons-material/GppGood';\nimport HowToRegIcon from '@mui/icons-material/HowToReg';\nimport PeopleIcon from '@mui/icons-material/People';\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\nimport WcIcon from '@mui/icons-material/Wc';\nimport {\n  Avatar,\n  Box,\n  Container,\n  Divider,\n  Grid,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Typography\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { TextParser } from 'src/components/TextEditor';\nimport { Job } from '../model';\nimport CakeIcon from '@mui/icons-material/Cake';\nimport dayjs from 'dayjs';\n\nconst CommonInfo = styled(Box)(({ theme }) => ({\n  padding: 10,\n  backgroundColor: '#F0FFF0',\n  color: theme.colors.alpha.black[100],\n  borderRadius: 6\n}));\nconst AvatarWrapper = styled(Avatar)(({ theme }) => ({\n  backgroundColor: '#e6f6e6',\n  color: '#006400'\n}));\n\ntype Props = {\n  data: Partial<Job>;\n};\nconst JobContent: React.FC<Props> = ({ data }) => {\n  return (\n    <Container sx={{ height: '100%' }}>\n      <Typography variant=\"h3\" fontSize={22} noWrap marginBottom={2.5}>\n        Thông tin chung\n      </Typography>\n      <CommonInfo sx={{ minHeight: 240, width: '100%' }}>\n        <Grid container sx={{ my: 0.5 }}>\n          <Grid item xs={12} md={4}>\n            <ListItem>\n              <ListItemAvatar>\n                <AvatarWrapper>\n                  <DateRangeIcon />\n                </AvatarWrapper>\n              </ListItemAvatar>\n              <ListItemText\n                primary={dayjs(data.createAt).format('YYYY-MM-DD')}\n                secondary=\"Ngày đăng\"\n              />\n            </ListItem>\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <ListItem>\n              <ListItemAvatar>\n                <AvatarWrapper>\n                  <EventAvailableIcon />\n                </AvatarWrapper>\n              </ListItemAvatar>\n              <ListItemText\n                primary={`${data.trialPeriod} tháng`}\n                secondary=\"Thời gian thử việc\"\n              />\n            </ListItem>\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <ListItem>\n              <ListItemAvatar>\n                <AvatarWrapper>\n                  <HowToRegIcon />\n                </AvatarWrapper>\n              </ListItemAvatar>\n              <ListItemText primary={data.positionLevel} secondary=\"Cấp bậc\" />\n            </ListItem>\n          </Grid>\n        </Grid>\n        <Divider sx={{ width: '90%', margin: 'auto', my: 1 }} />\n\n        <Grid container sx={{ my: 0.5 }}>\n          <Grid item xs={12} md={4}>\n            <ListItem>\n              <ListItemAvatar>\n                <AvatarWrapper>\n                  <PeopleIcon />\n                </AvatarWrapper>\n              </ListItemAvatar>\n              <ListItemText\n                primary={data.numberOfVacancies}\n                secondary=\"Số lượng tuyển\"\n              />\n            </ListItem>\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <ListItem>\n              <ListItemAvatar>\n                <AvatarWrapper>\n                  <ArticleIcon />\n                </AvatarWrapper>\n              </ListItemAvatar>\n              <ListItemText\n                primary={data.employmentType}\n                secondary=\"Hình thức làm việc\"\n              />\n            </ListItem>\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <ListItem>\n              <ListItemAvatar>\n                <AvatarWrapper>\n                  <WcIcon />\n                </AvatarWrapper>\n              </ListItemAvatar>\n              <ListItemText\n                primary={data.sex || 'Tất cả'}\n                secondary=\"Giới tính\"\n              />\n            </ListItem>\n          </Grid>\n        </Grid>\n        <Divider sx={{ width: '90%', margin: 'auto', my: 1 }} />\n\n        <Grid container sx={{ my: 0.5 }}>\n          <Grid item xs={12} md={4}>\n            <ListItem>\n              <ListItemAvatar>\n                <AvatarWrapper>\n                  <GppGoodIcon />\n                </AvatarWrapper>\n              </ListItemAvatar>\n              <ListItemText\n                primary={data.degree}\n                secondary=\"Yêu cầu bằng cấp\"\n              />\n            </ListItem>\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <ListItem>\n              <ListItemAvatar>\n                <AvatarWrapper>\n                  <ApartmentIcon />\n                </AvatarWrapper>\n              </ListItemAvatar>\n              <ListItemText\n                primary={data.experience}\n                secondary=\"Yêu cầu kinh nghiệm\"\n              />\n            </ListItem>\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <ListItem>\n              <ListItemAvatar>\n                <AvatarWrapper>\n                  <CakeIcon />\n                </AvatarWrapper>\n              </ListItemAvatar>\n              <ListItemText\n                primary={`${data.minAge} - ${data.maxAge}`}\n                secondary=\"Độ tuổi\"\n              />\n            </ListItem>\n          </Grid>\n        </Grid>\n      </CommonInfo>\n      <Typography variant=\"h3\" fontSize={22} noWrap marginTop={2.5}>\n        Kĩ năng bắt buộc\n      </Typography>\n      <Typography marginTop={2.5}>\n        {data?.requiredSkills?.split(',')?.join(', ')}\n      </Typography>\n      <Typography variant=\"h3\" fontSize={22} noWrap marginTop={2.5}>\n        Mô tả công việc\n      </Typography>\n      <Box>\n        <TextParser content={data.jobDescription} />\n      </Box>\n      <Typography variant=\"h3\" fontSize={22} noWrap marginTop={2.5}>\n        Yêu cầu công việc\n      </Typography>\n      <Box>\n        <TextParser content={data.jobRequirements} />\n      </Box>\n      <Typography variant=\"h3\" fontSize={22} noWrap marginTop={2.5}>\n        Quyền lợi\n      </Typography>\n      <Box>\n        <TextParser content={data.benefits} />\n      </Box>\n      <Typography variant=\"h3\" fontSize={22} noWrap marginTop={2.5}>\n        Địa điểm làm việc\n      </Typography>\n      <Grid container alignItems={'center'} marginTop={2}>\n        <LocationOnIcon color=\"primary\" sx={{ marginRight: 1 }} />\n        <Box>{data.contactAddress}</Box>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default JobContent;\n","import CustomContainer from 'src/components/CustomContainer';\nimport JobContent from 'src/modules/jobs/components/JobContent';\nimport useJob from 'src/modules/jobs/hooks/useJob';\n\nfunction TabContent() {\n  const { itemDetail } = useJob();\n  return (\n    <CustomContainer sx={{ py: 3, mb: 2, minHeight: 1000 }}>\n      <JobContent data={itemDetail} />\n    </CustomContainer>\n  );\n}\n\nexport default TabContent;\n","import {\r\n  RoundOneCheck,\r\n  cvAnalysist,\r\n  extractCommonInfo,\r\n  extractSkill\r\n} from 'src/GPT/roles';\r\nimport { checkIsJSON, preProcessText } from './formatData';\r\nimport sendChatGPTRequest, { getEmbedding } from 'src/GPT/sendChatGPTRequest';\r\nimport { getFileByUrl } from 'src/common/firebaseService';\r\nimport pdfToText from 'react-pdftotext';\r\nimport { User } from 'src/modules/users/model';\r\nimport { AttachedDocument, OnlineProfile } from 'src/modules/jobProfile/model';\r\nimport { Application } from 'src/modules/application/model';\r\nimport { Job } from 'src/modules/jobs/model';\r\nimport { compareDegrees, compareExperience } from './compareEnum';\r\nimport dayjs from 'dayjs';\r\nimport { dot } from 'mathjs';\r\nimport { loadKeywords } from './keywords';\r\nimport { MODEL_4_O } from 'src/constants/gptModel';\r\n\r\nexport const FAIL_SCORE = 0; // < 30\r\nexport const LOW_SCORE = 30; // 30 - 80\r\nexport const NORMAL_SCORE = 80; // 80 - 110\r\nexport const HIGH_SCORE = 110; // higher than 110\r\n\r\nexport const ratingStar = (score: number) => {\r\n  return score >= HIGH_SCORE\r\n    ? 3\r\n    : score >= NORMAL_SCORE\r\n    ? 2\r\n    : score >= LOW_SCORE\r\n    ? 1\r\n    : 0;\r\n};\r\nexport type ProfileTypeInfo = {\r\n  personal_information: User;\r\n  online_profile?: OnlineProfile;\r\n  attached_document?: AttachedDocument;\r\n  application: Partial<Omit<Application, 'applicationType'>> & {\r\n    id: number;\r\n    applicationType: string;\r\n    matchingScore: number;\r\n  };\r\n};\r\n\r\nexport type ProfileApplicationType = {\r\n  id: number;\r\n  employee_Profile: ProfileTypeInfo;\r\n  employer_Requirement: Partial<Job>;\r\n};\r\n\r\nconst fetchAndProcessCVData = async (dataToAnalyze, dataProcessor) => {\r\n  return Promise.all(\r\n    dataToAnalyze.map(async (data) => ({\r\n      ...data,\r\n      employee_Profile: await dataProcessor(data.employee_Profile)\r\n    }))\r\n  );\r\n};\r\n\r\nconst filterAndMapProfiles = (dataList) => {\r\n  return dataList\r\n    .filter((data) => data.employee_Profile)\r\n    .map(({ employee_Profile, employer_Requirement }) => ({\r\n      employee_Profile,\r\n      employer_Requirement\r\n    }));\r\n};\r\n\r\nconst preprocessText = (text) => {\r\n  if (!text) return null;\r\n\r\n  const preprocessedText = text\r\n    .replace(/[^\\w\\s,+()@.:\\/-]/g, '')\r\n    .replace(/\\s+/g, ' ');\r\n\r\n  return preprocessedText ? preprocessedText : null;\r\n};\r\n\r\nconst findMatchedProfile = (\r\n  profileId,\r\n  cvEnclosedProfileList,\r\n  attachProfileList\r\n) => {\r\n  return (\r\n    cvEnclosedProfileList.find(\r\n      (cvItem) => cvItem.employee_Profile.application.id === profileId\r\n    ) ||\r\n    attachProfileList.find(\r\n      (attachItem) => attachItem.employee_Profile.application.id === profileId\r\n    )\r\n  );\r\n};\r\n\r\nexport const preprocessJobData = (job) => ({\r\n  ...job,\r\n  jobDescription: preProcessText(job?.jobDescription),\r\n  jobRequirements: preProcessText(job?.jobRequirements),\r\n  benefits: preProcessText(job?.benefits)\r\n});\r\n\r\nexport const preprocessProfileData = (profile) => ({\r\n  ...profile,\r\n  personal_information: {\r\n    dob: profile?.employee?.user?.dob,\r\n    sex: profile?.employee?.user?.sex\r\n  }\r\n});\r\n\r\nexport const matchProfileById = (\r\n  analyzedProfile,\r\n  cvEnclosedProfileList,\r\n  attachProfileList\r\n) => {\r\n  return analyzedProfile.map((item) => {\r\n    const foundItem = findMatchedProfile(\r\n      item.id,\r\n      cvEnclosedProfileList,\r\n      attachProfileList\r\n    );\r\n    if (foundItem) return { ...item, ...foundItem };\r\n    return item;\r\n  });\r\n};\r\n\r\nexport const firstRoundForGeneralInfo = (job, profile) => {\r\n  // console.log('profile', profile);\r\n\r\n  const { personal_information, online_profile, attached_document } = profile;\r\n\r\n  const birthday = dayjs(personal_information?.dob, 'YYYY-MM-DD').isValid()\r\n    ? dayjs(personal_information?.dob, 'YYYY-MM-DD')\r\n    : dayjs(personal_information?.dob, 'DD-MM-YYYY');\r\n  const age = dayjs().year() - birthday.year();\r\n  if (\r\n    (job?.sex !== null &&\r\n      job?.sex !== 'Tất cả' &&\r\n      job?.sex !== personal_information?.sex) ||\r\n    job?.minAge > age ||\r\n    job?.maxAge < age\r\n  )\r\n    return -10;\r\n\r\n  if (online_profile && !isProfileQualified(online_profile, job)) return -10;\r\n\r\n  if (attached_document && !isProfileQualified(attached_document, job))\r\n    return -10;\r\n\r\n  return 30;\r\n};\r\n\r\nconst isProfileQualified = (profile, job) => {\r\n  const { profession, degree, experience } = profile;\r\n\r\n  const employeeProfessionList = profession\r\n    .split(',')\r\n    .map((item) => item.trim());\r\n  const jobProfessionList = job.profession\r\n    .split(',')\r\n    .map((item) => item.trim());\r\n  if (!employeeProfessionList.some((item) => jobProfessionList.includes(item)))\r\n    return false;\r\n\r\n  if (compareDegrees(degree, job?.degree) < 0) return false;\r\n\r\n  if (compareExperience(experience, job?.experience) < 0) return false;\r\n\r\n  return true;\r\n};\r\n\r\nconst handleRoundOne = async (\r\n  resetMatchingScoreList: ProfileApplicationType[],\r\n  setAnalyzedProfile: (data: ProfileApplicationType[]) => Promise<void>,\r\n  handleAnalyzeResult: (result: any[]) => Promise<void>,\r\n  handleGoToAnalyzeResult: (signal: boolean, resultData: any) => void\r\n) => {\r\n  console.log('Start round 1');\r\n  const attachedDocumentDataList = resetMatchingScoreList.filter(\r\n    (item) => item.employee_Profile.attached_document?.CV\r\n  );\r\n  const cvEnclosedDataList = resetMatchingScoreList.filter(\r\n    (item) =>\r\n      !item.employee_Profile?.online_profile &&\r\n      !item.employee_Profile.attached_document\r\n  );\r\n\r\n  const attachedDocumentList = await fetchAndProcessCVData(\r\n    attachedDocumentDataList,\r\n    readCVData\r\n  );\r\n  const cvEnclosedList = await fetchAndProcessCVData(\r\n    cvEnclosedDataList,\r\n    readEnclosedCVData\r\n  );\r\n\r\n  const attachProfileList = filterAndMapProfiles(attachedDocumentList);\r\n  const cvEnclosedProfileList = filterAndMapProfiles(cvEnclosedList);\r\n\r\n  const cvContentProfile = matchProfileById(\r\n    resetMatchingScoreList,\r\n    cvEnclosedProfileList,\r\n    attachProfileList\r\n  );\r\n\r\n  const extractPromise = async () => {\r\n    return Promise.all(\r\n      cvEnclosedProfileList.map(async (item) => {\r\n        const result = await sendChatGPTRequest(extractCommonInfo, [\r\n          item?.employee_Profile?.application?.CV\r\n        ]);\r\n\r\n        const validResult = result.filter((res) => checkIsJSON(res));\r\n\r\n        const extractedResult = validResult.map((res) => {\r\n          const jsonRes = JSON.parse(res);\r\n          return {\r\n            employee_Profile: jsonRes,\r\n            employer_Requirement: {\r\n              profession: item?.employer_Requirement?.profession,\r\n              degree: item?.employer_Requirement?.degree,\r\n              experience: item?.employer_Requirement?.experience\r\n            },\r\n            id: item?.employee_Profile?.application?.id\r\n          };\r\n        });\r\n        // result[0] + '\\n -id: ' + item?.employee_Profile?.application?.id;\r\n        return extractedResult;\r\n      })\r\n    );\r\n  };\r\n\r\n  const commonInfo = await extractPromise();\r\n\r\n  const messagesToSend = commonInfo.map((item) => {\r\n    return `\r\n    - application_id: ${item[0]?.id}\r\n    - Yêu cầu tuyển dụng: ngành nghề: [${item[0]?.employer_Requirement?.profession}]; trình độ: ${item[0]?.employer_Requirement?.degree}; kinh nghiệm: ${item[0]?.employer_Requirement?.experience};\r\n    - Thông tin hồ sơ xin việc: ngành nghề: ${item[0]?.employee_Profile?.profession}; trình độ ${item[0]?.employee_Profile?.degree}; kinh nghiệm ${item[0]?.employee_Profile?.experience}\r\n    `;\r\n  });\r\n\r\n  const response = await sendChatGPTRequest(\r\n    RoundOneCheck,\r\n    messagesToSend,\r\n    null,\r\n    null,\r\n    MODEL_4_O\r\n  ).catch(() => []);\r\n\r\n  const result = Array.isArray(response)\r\n    ? response?.filter((item) => checkIsJSON(item))\r\n    : [];\r\n  setAnalyzedProfile(cvContentProfile);\r\n  handleGoToAnalyzeResult(true, result);\r\n};\r\n\r\nconst handleRoundTwo = async (\r\n  passRoundProfiles,\r\n  handleAnalyzeResult: (result: any[]) => Promise<void>\r\n) => {\r\n  console.log('Start round 2');\r\n\r\n  const dataSendToGPT = passRoundProfiles.map((item) => {\r\n    let profile;\r\n    if (item?.employee_Profile?.online_profile) {\r\n      const onlineProfile = item?.employee_Profile?.online_profile;\r\n      profile = {\r\n        jobTitle: onlineProfile.jobTitle,\r\n        skills: onlineProfile.skills,\r\n        another_degree: (onlineProfile.another_degree || []).map(\r\n          (degree) => degree.Name\r\n        ),\r\n        education_informations: (\r\n          onlineProfile.education_informations || []\r\n        ).map((education) => education.degreeName),\r\n        work_experiences: (onlineProfile.work_experiences || []).map(\r\n          (experience) => ({\r\n            jobTitle: experience?.jobTitle,\r\n            jobDescription: experience?.jobDescription\r\n          })\r\n        )\r\n      };\r\n    } else if (item?.employee_Profile?.attached_document) {\r\n      const attachedDocument = item?.employee_Profile?.attached_document;\r\n      profile = {\r\n        skills: attachedDocument.skills,\r\n        CV: attachedDocument.CV\r\n      };\r\n    } else {\r\n      profile = item?.employee_Profile?.application.CV;\r\n    }\r\n    return {\r\n      employer_Requirement: {\r\n        requiredSkills: item.employer_Requirement.requiredSkills\r\n      },\r\n      employee_Profile: {\r\n        profile: profile,\r\n        application_id: item?.employee_Profile?.application.application_id\r\n      }\r\n    };\r\n  });\r\n\r\n  const skillList = await Promise.all(\r\n    dataSendToGPT?.map(async (item) => {\r\n      const extractRequiredSkillList = dataSendToGPT?.map(\r\n        (data) => data?.employee_Profile?.profile\r\n      );\r\n      const skillsList = await sendChatGPTRequest(\r\n        extractSkill,\r\n        extractRequiredSkillList,\r\n        null,\r\n        { '58': 5, '60': 5 }\r\n      );\r\n      return {\r\n        id: item.employee_Profile.application_id,\r\n        employee_Profile: loadKeywords(skillsList)?.split(',') || '',\r\n        employer_Requirement:\r\n          item.employer_Requirement.requiredSkills.split(',') || ''\r\n      };\r\n    })\r\n  );\r\n\r\n  const responses = (await getEmbedding(skillList)) || [];\r\n\r\n  const result = responses?.map((item) => {\r\n    const matchingSkills = item?.employer_Requirement?.filter((require) =>\r\n      item?.employee_Profile?.some((skills) => {\r\n        if (skills?.result?.length === require?.result?.length) {\r\n          return dot(skills.result, require.result) > 0.6;\r\n        } else {\r\n          console.error('Vectors must have the same number of dimensions');\r\n          return false;\r\n        }\r\n      })\r\n    );\r\n    const matchPercentage = matchingSkills\r\n      ? (100 / item?.employer_Requirement?.length) * matchingSkills.length\r\n      : 0;\r\n    return {\r\n      id: item.id,\r\n      result: matchPercentage\r\n    };\r\n  });\r\n\r\n  handleAnalyzeResult(result.map((res) => JSON.stringify(res)));\r\n};\r\n\r\nconst handleRoundThree = async (\r\n  passRoundProfiles,\r\n  handleAnalyzeResult: (result: any[]) => Promise<void>\r\n) => {\r\n  console.log('Start round 3');\r\n\r\n  try {\r\n    // Step 1: Retrieve keywords for profiles\r\n    const profilesWithKeywords = await Promise.all(\r\n      passRoundProfiles.map(async (item) => {\r\n        if (\r\n          item?.employee_Profile?.application?.applicationType !== 'Nộp nhanh'\r\n        ) {\r\n          return item;\r\n        } else {\r\n          const keywords = await loadKeywords(\r\n            await sendChatGPTRequest(\r\n              cvAnalysist,\r\n              [item?.employee_Profile?.application?.CV],\r\n              null,\r\n              null,\r\n              MODEL_4_O\r\n            )\r\n          );\r\n          return {\r\n            ...item,\r\n            employee_Profile: {\r\n              application: {\r\n                keywords\r\n              }\r\n            }\r\n          };\r\n        }\r\n      })\r\n    );\r\n\r\n    // console.log('Profiles with keywords:', profilesWithKeywords);\r\n\r\n    // Step 2: Calculate similarity scores between profiles and job requirements\r\n    const response = await getEmbedding(\r\n      profilesWithKeywords.map((item) => ({\r\n        id: item.id,\r\n        employee_Profile:\r\n          item?.employee_Profile?.application.keywords?.split(','),\r\n        employer_Requirement: item?.employer_Requirement?.keywords?.split(',')\r\n      }))\r\n    );\r\n\r\n    // Step 3: Analyze results and provide hints\r\n    const resultList = await Promise.all(\r\n      response?.map(async (item) => {\r\n        let score = item?.employee_Profile?.reduce((acc, profile) => {\r\n          const hasMatch = item?.employer_Requirement?.some((requirement) => {\r\n            const cosineSimilarity = dot(profile.result, requirement.result);\r\n            return cosineSimilarity > 0.6;\r\n          });\r\n          return hasMatch ? acc + 5 : acc;\r\n        }, 0);\r\n\r\n        const lackOfSkillsList =\r\n          item?.employer_Requirement\r\n            ?.filter(\r\n              (require) =>\r\n                !item?.employee_Profile?.some(\r\n                  (skills) => dot(skills.result, require.result) > 0.6\r\n                )\r\n            )\r\n            ?.map((require) => require.word) || [];\r\n\r\n        const hints =\r\n          lackOfSkillsList.length > 0\r\n            ? `Để tăng tỉ lệ đậu bạn có thể trang bị thêm kĩ năng: ${[\r\n                ...new Set(lackOfSkillsList)\r\n              ]\r\n                .slice(0, 4)\r\n                .join(', ')}`\r\n            : 'Hồ sơ của bạn đã đáp ứng yêu cầu của tin tuyển dụng này';\r\n\r\n        return {\r\n          id: item.id,\r\n          result: score,\r\n          hints: hints\r\n        };\r\n      })\r\n    );\r\n\r\n    // Step 4: Convert results to list and pass to the handler function\r\n    const list = resultList.map((result) => JSON.stringify(result));\r\n    await handleAnalyzeResult(list);\r\n  } catch (error) {\r\n    console.error('Error in round 3 analysis:', error);\r\n    // Handle or log the error appropriately\r\n  }\r\n};\r\n\r\nexport const fetchDataFromUrl = async (url, type) => {\r\n  try {\r\n    const filePath = await getFileByUrl(url);\r\n    const response = await fetch(filePath);\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch file');\r\n    }\r\n    const blob = await response.blob();\r\n    return pdfToText(blob);\r\n  } catch (error) {\r\n    console.error('Error fetching data:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const readCVData = async (employee_Profile) => {\r\n  if (employee_Profile?.attached_document) {\r\n    const text = await fetchDataFromUrl(\r\n      employee_Profile.attached_document.CV,\r\n      'attached_document'\r\n    );\r\n    const preprocessedText = preprocessText(text);\r\n\r\n    return preprocessedText\r\n      ? {\r\n          ...employee_Profile,\r\n          attached_document: {\r\n            ...employee_Profile.attached_document,\r\n            CV: preprocessedText\r\n          }\r\n        }\r\n      : null;\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const readEnclosedCVData = async (employee_Profile) => {\r\n  if (\r\n    employee_Profile?.application?.applicationType === 'Nộp nhanh' &&\r\n    employee_Profile?.application?.CV\r\n  ) {\r\n    const text = await fetchDataFromUrl(\r\n      employee_Profile.application.CV,\r\n      'enclosed_CV'\r\n    );\r\n    const preprocessedText = preprocessText(text);\r\n\r\n    if (preprocessedText) {\r\n      return {\r\n        ...employee_Profile,\r\n        application: { ...employee_Profile.application, CV: preprocessedText }\r\n      };\r\n    }\r\n\r\n    return employee_Profile;\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const review = async ({\r\n  round,\r\n  handleAnalyzeResult,\r\n  setIsAnalyzing,\r\n  setAnalyzedProfile,\r\n  passRoundProfiles,\r\n  resetMatchingScoreList,\r\n  handleGoToAnalyzeResult\r\n}: {\r\n  round: number;\r\n  handleAnalyzeResult: (result: any[]) => Promise<void>;\r\n  setIsAnalyzing: (data: boolean) => void;\r\n  setAnalyzedProfile?: (data: ProfileApplicationType[]) => Promise<void>;\r\n  passRoundProfiles?: ProfileApplicationType[];\r\n  resetMatchingScoreList?: ProfileApplicationType[];\r\n  handleGoToAnalyzeResult?: any;\r\n}) => {\r\n  setIsAnalyzing(true);\r\n\r\n  switch (round) {\r\n    case 1:\r\n      await handleRoundOne(\r\n        resetMatchingScoreList,\r\n        setAnalyzedProfile,\r\n        handleAnalyzeResult,\r\n        handleGoToAnalyzeResult\r\n      );\r\n      break;\r\n    case 2:\r\n      await handleRoundTwo(passRoundProfiles, handleAnalyzeResult);\r\n      break;\r\n    case 3:\r\n      await handleRoundThree(passRoundProfiles, handleAnalyzeResult);\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport const parseResponseJSONData = async (result: any[]) => {\r\n  return Promise.all(\r\n    result.map(async (data) => {\r\n      if (data?.indexOf('{') >= 0 && data?.lastIndexOf('}') >= 0)\r\n        return JSON.parse(\r\n          data.substring(data.indexOf('{'), data.lastIndexOf('}') + 1)\r\n        );\r\n    })\r\n  );\r\n};\r\n\r\nexport const getKeywords = (item) => {\r\n  return (\r\n    item?.keywords ||\r\n    item?.employee?.online_profile?.keywords ||\r\n    item?.employee?.attached_document?.keywords\r\n  );\r\n};\r\n\r\nexport const calculateMatchingScore = (\r\n  profile: any,\r\n  responses: any[],\r\n  roundOneFinished: boolean\r\n) => {\r\n  const foundItem = responses.find((res) => res?.id === profile?.id);\r\n  const profileMatchingScore =\r\n    profile?.employee_Profile?.application?.matchingScore;\r\n\r\n  if (foundItem?.result != null) {\r\n    return (profileMatchingScore || 0) + foundItem.result;\r\n  } else if (\r\n    !roundOneFinished &&\r\n    (profile?.employee_Profile?.online_profile ||\r\n      profile?.employee_Profile?.attached_document)\r\n  ) {\r\n    return firstRoundForGeneralInfo(\r\n      profile?.employer_Requirement,\r\n      profile?.employee_Profile\r\n    );\r\n  } else {\r\n    return profileMatchingScore;\r\n  }\r\n};\r\n","import { Degree, Experience } from 'src/constants/enum';\n\nexport function compareExperience(\n  employee: string,\n  requirement: string\n): number {\n  // Chuyển đổi chuỗi sang giá trị enum tương ứng\n  const employeeIndex = Object.values(Experience).indexOf(\n    employee as Experience\n  );\n  const requirementIndex = Object.values(Experience).indexOf(\n    requirement as Experience\n  );\n  // So sánh giá trị enum\n  if (employeeIndex > requirementIndex) {\n    return -1; // idx cang lon trinh do cang thap\n  } else return 1;\n}\n\nexport function compareDegrees(employee: string, requirement: string): number {\n  const employeeIndex = Object.values(Degree).indexOf(employee as Degree);\n  const requirementIndex = Object.values(Degree).indexOf(requirement as Degree);\n  // So sánh giá trị enum\n  if (employeeIndex > requirementIndex) {\n    return -1; // idx cang lon trinh do cang thap\n  } else return 1; // employee lớn hơn requirement\n}\n"],"names":["ApplicationService","BaseService","CandidateProfilesService","UpdateStatusService","CheckApplied","useQueryOnlineProfile","isEmployee","useApp","setProfile","useOnlineProfile","isLoggedIn","Boolean","getAccessToken","data","isLoading","isSuccess","refetch","useQuery","OnlineProfileService","get","retry","failureCount","error","response","status","refetchOnWindowFocus","enabled","useEffect","onlineProfile","props","_jsxs","Box","sx","display","alignItems","children","_jsx","width","mr","LinearProgress","variant","minWidth","Typography","color","concat","Math","round","value","VisuallyHiddenInput","styled","ButtonWrapper","Button","_ref","theme","backgroundColor","colors","primary","lighter","ChipWrapper","Chip","_ref2","borderRadius","label","onChange","setIsChecked","setUrl","file","setFile","useState","fileUrl","setFileUrl","percent","setPercent","console","log","handleUpload","date","dayjs","Date","format","storageRef","ref","storage","name","uploadTask","uploadBytesResumable","on","snapshot","bytesTransferred","totalBytes","err","getDownloadURL","then","url","ApplicationType","cv_enclosed","component","startIcon","CloudUploadIcon","type","async","removeFileByUrl","event","target","files","accept","marginTop","LinearPercent","onDelete","deleteIcon","DeleteIcon","useMutateApplyJob","toast","queryClient","useQueryClient","mutate","onSaveData","useMutation","create","onSuccess","res","invalidateQueries","success","massage","message","onError","renderAnalyzeResult","analyzeResult","hints","rating","ratingStar","_Fragment","textAlign","fontWeight","fontSize","Rating","max","readOnly","flexDirection","mt","AnayzeProfileButton","selectedProfile","job","profileType","setShowResult","showResult","setHintsMessage","user","start","setStart","isAnalyzing","setIsAnalyzing","analyzedProfile","setAnalyzedProfile","passRoundProfiles","setPassOneProfiles","roundOneFinished","setRoundOneFinished","roundTwoFinished","setRoundTwoFinished","roundThreeFinished","setRoundThreeFinished","setAnalyzeResult","goToAnalyzeResult","setGoToAnalyzeResult","signal","resultData","setHints","finishedAll","alertDialog","hideCancelButton","title","handleSetAnalyzedProfile","handleIsAnalyzing","handleGoToAnalyzeResult","handleAnalyzeResult","result","JSON","parse","matchingScore","LOW_SCORE","prev","_analyzedProfile$empl","_analyzedProfile$empl2","employee_Profile","online_profile","attached_document","firstRoundForGeneralInfo","employer_Requirement","_profileData","_profileData$personal","_profileData2","_profileData2$persona","_data$employee_Profil","_data$employee_Profil2","profileData","personal_information","application","id","CV","applicationType","dob","sex","preprocessJobData","_data$employee_Profil3","_data$employee_Profil4","_data$employee_Profil5","_data$employee_Profil6","keywords","analyzeResultData","stringify","review","resetMatchingScoreList","length","gap","LoadingButton","loading","onClick","disabled","GradeIcon","Title","margin","SubTitle","alpha","black","buttonStyle","px","ModalApply","isMobile","useResponsive","open","onClose","position","company","postId","profile","useProfileHook","isLoadingOnline","attachedDocument","isLoadingDocument","useQueryAttachedDocument","online","setOnline","document","setDocument","useDocumentHook","isChecked","missInfo","setMissInfo","setSelectedProfile","hintsMessage","control","handleSubmit","reset","formState","errors","useForm","defaultValues","handleClose","uploadProfile","SuspenseLoader","Dialog","maxWidth","fullWidth","fullScreen","DialogTitle","DialogContent","Grid","container","spacing","item","xs","md","lg","AddIcon","bgcolor","FormControl","UploadButton","mb","fontStyle","element","TextField","required","pattern","DialogActions","justifyContent","sm","flexWrap","p","columnGap","submitProfile","v4","params","getById","keepPreviousData","isApplied","Avatar","height","objectFit","LabelText","_ref3","ValueText","_ref4","marginLeft","_ref5","_data$employer","_data$employer2","_data$employer3","_data$employer4","_data$employer5","isEmployer","isAdmin","openFormApply","setOpenFormApply","navigate","useNavigate","useQueryCheckApplied","CustomContainer","pb","minHeight","LazyLoadImage","src","employer","logo","defaultImage","companyAvatar_md","placeholderSrc","style","Link","to","rewriteUrl","companyName","btoa","userId","toString","textDecoration","jobTitle","PaidIcon","minSalary","maxSalary","wrap","overflow","DateRangeIcon","applicationDeadline","AccessibilityIcon","minAge","maxAge","LocationOnIcon","workAddress","handleOpenFormApply","state","from","window","location","pathname","search","SendIcon","FollowJobButton","onCloseFormApply","useJob","itemDetail","useAppSelector","selectJob","dispatch","useAppDispatch","setItemDetail","setItemDetailAction","resetItemDetail","resetItemDetailAction","CommonInfo","padding","AvatarWrapper","_data$requiredSkills","_data$requiredSkills$","Container","noWrap","marginBottom","my","ListItem","ListItemAvatar","ListItemText","createAt","secondary","EventAvailableIcon","trialPeriod","HowToRegIcon","positionLevel","Divider","PeopleIcon","numberOfVacancies","ArticleIcon","employmentType","WcIcon","GppGoodIcon","degree","ApartmentIcon","experience","CakeIcon","requiredSkills","split","join","TextParser","content","jobDescription","jobRequirements","benefits","marginRight","contactAddress","py","JobContent","score","fetchAndProcessCVData","dataToAnalyze","dataProcessor","Promise","all","map","filterAndMapProfiles","dataList","filter","preprocessText","text","preprocessedText","replace","preProcessText","birthday","isValid","age","year","isProfileQualified","profession","employeeProfessionList","trim","jobProfessionList","some","includes","employee","requirement","Object","values","Degree","indexOf","Experience","compareExperience","fetchDataFromUrl","filePath","getFileByUrl","fetch","ok","Error","blob","pdfToText","readCVData","readEnclosedCVData","_employee_Profile$app","_employee_Profile$app2","attachedDocumentDataList","_item$employee_Profil","cvEnclosedDataList","_item$employee_Profil2","attachedDocumentList","cvEnclosedList","attachProfileList","cvEnclosedProfileList","cvContentProfile","matchProfileById","foundItem","findMatchedProfile","profileId","find","cvItem","attachItem","messagesToSend","_item$employee_Profil3","_item$employee_Profil4","sendChatGPTRequest","extractCommonInfo","checkIsJSON","_item$employer_Requir","_item$employer_Requir2","_item$employer_Requir3","_item$employee_Profil5","_item$employee_Profil6","extractPromise","_item$","_item$2","_item$2$employer_Requ","_item$3","_item$3$employer_Requ","_item$4","_item$4$employer_Requ","_item$5","_item$5$employee_Prof","_item$6","_item$6$employee_Prof","_item$7","_item$7$employee_Prof","RoundOneCheck","MODEL_4_O","catch","Array","isArray","handleRoundOne","dataSendToGPT","_item$employee_Profil7","_item$employee_Profil9","_item$employee_Profil12","_item$employee_Profil8","skills","another_degree","Name","education_informations","education","degreeName","work_experiences","_item$employee_Profil10","_item$employee_Profil11","application_id","skillList","_loadKeywords","extractRequiredSkillList","skillsList","extractSkill","loadKeywords","responses","getEmbedding","_item$employer_Requir4","_item$employer_Requir5","matchingSkills","require","_item$employee_Profil13","_skills$result","_require$result","dot","matchPercentage","handleRoundTwo","profilesWithKeywords","_item$employee_Profil14","_item$employee_Profil15","_item$employee_Profil16","_item$employee_Profil17","cvAnalysist","_item$employee_Profil18","_item$employee_Profil19","_item$employer_Requir6","_item$employer_Requir7","list","_item$employee_Profil20","_item$employer_Requir9","_item$employer_Requir10","reduce","acc","_item$employer_Requir8","lackOfSkillsList","_item$employee_Profil21","word","Set","slice","handleRoundThree","parseResponseJSONData","lastIndexOf","substring","getKeywords","_item$employee","_item$employee$online","_item$employee2","_item$employee2$attac","calculateMatchingScore","_profile$employee_Pro","_profile$employee_Pro2","_profile$employee_Pro3","_profile$employee_Pro4","profileMatchingScore"],"sourceRoot":""}